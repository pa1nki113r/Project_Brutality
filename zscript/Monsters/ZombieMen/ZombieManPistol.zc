Class PB_PistolZombieman1: PB_Zombieman //Replaces ZombieMan
{
	Default
	{
		//$Title Pistol Zombieman
		//$Category Project Brutality - Monsters/Former Humans/Zombiemen
		//$Sprite PSPOB1
		DropItem "PB_Pistol";
	}
	States
	{
		Death.KillMe:
		Death.Taunt:
		Death.Avoid:
			TNT1 A 0;
			TNT1 A 0 {
				bTHRUACTORS = true;
				bCOUNTKILL = false;
			}
			TNT1 A 0 A_SpawnItemEx ("PB_PistolZombieman1",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION |SXF_TRANSFERSPECIAL| SXF_TRANSFERAMBUSHFLAG ,0);
			Stop;
		
		Spawn:
			PSPO A 1;
			TNT1 A 0 {
				A_TakeInventory("EnemyPistolAmmo", 30);
				A_GiveInventory("EnemyPistolAmmo", random(1,10));
				A_GiveInventory("TypeZombieMan", 1);
			}
		Stand:
			TNT1 A 0;
			TNT1 A 0 {
				bNoPain = false;
				A_SetRoll(0);
			}
			PSPO AA 10 A_Look();
			Loop;
		See:
			TNT1 A 0;
			TNT1 A 0 {
				bNoPain = false;
				A_SetRoll(0);
			}
			TNT1 A 0 {
				EnemyLastSighted = Level.MapTime;
			}
		SeeContinue:
			PSPO A 1 A_SmartChase("Missile", "Melee", 0);
			PSPO AA 1 A_SmartChase(null, null, CHF_DONTTURN);
			PSPO A 1 A_SmartChase("Missile", "Melee", 0);
			PSPO AA 1 A_SmartChase(null, null, CHF_DONTTURN);
			PSPO B 1 A_SmartChase("Missile", "Melee", 0);
			PSPO BB 1 A_SmartChase(null, null, CHF_DONTTURN);
			PSPO B 1 A_SmartChase("Missile", "Melee", 0);
			PSPO BB 1 A_SmartChase(null, null, CHF_DONTTURN);
			TNT1 A 0 A_StartSound("humans/step");
			PSPO C 1 A_SmartChase("Missile", "Melee", 0);
			PSPO CC 1 A_SmartChase(null, null, CHF_DONTTURN);
			PSPO C 1 A_SmartChase("Missile", "Melee", 0);
			PSPO CC 1 A_SmartChase(null, null, CHF_DONTTURN);
			PSPO D 1 A_SmartChase("Missile", "Melee", 0);
			PSPO DD 1 A_SmartChase(null, null, CHF_DONTTURN);
			PSPO D 1 A_SmartChase("Missile", "Melee", 0);
			PSPO DD 1 A_SmartChase(null, null, CHF_DONTTURN);
			TNT1 A 0 A_StartSound("humans/step");
			TNT1 A 0 A_JumpIf(CountInv("Wandering") == 71 && !OnPatrol,"LookAround");
			Loop;
		LookAround:
			TNT1 A 0 A_ClearTarget();
			TNT1 A 0 A_TakeInventory("Wandering", 71);
			TNT1 A 0 A_Jump(200, 2);
			TNT1 A 0 A_StartSound("monsters/zombie/searching", CHAN_AUTO);
			PSPO AAA 10 A_Look();
			Goto See;
		FallBack:
			PSPO D 4 {
				A_FaceTarget();
				A_Recoil(2);
				A_StartSound("humans/step",3);
				return A_Jump(64,"Missile");
			}
			PSPO C 4 {
				A_FaceTarget();
				A_Recoil(2);
				return A_Jump(64,"Missile");
			}
			PSPO B 4 {
				A_FaceTarget();
				A_Recoil(2);
				A_StartSound("humans/step",3);
				return A_Jump(64,"Missile");
			}
			PSPO A 2 {
				A_FaceTarget();
				A_Recoil(2);
				return A_Jump(64,"Missile");
			}
			PSPO D 4 {
				A_FaceTarget();
				A_Recoil(2);
				A_StartSound("humans/step",3);
				return A_Jump(64,"Missile");
			}
			PSPO C 4 {
				A_FaceTarget();
				A_Recoil(2);
				return A_Jump(64,"Missile");
			}
			PSPO B 4 {
				A_FaceTarget();
				A_Recoil(2);
				A_StartSound("humans/step",3);
				return A_Jump(64,"Missile");
			}
			PSPO A 4 {
				A_FaceTarget();
				A_Recoil(2);
			}
			Goto Missile;
	
		////////////////
		//Attack Logic// 
		////////////////
		Grenade:
			TNT1 A 0 A_JumpIfCloser(500, 1);
			Goto Attack1;
			TNT1 A 0 A_JumpIfCloser(90, "Attack1");
		ThrowGrenade:
			TNT1 A 0 A_StartSound("monsters/zombie/special",CHAN_AUTO);
			P15G A 6 {
				A_FaceTarget(90,45);
				A_StartSound("OPNGRN", 1);
			}
			P15G BC 6;
			P15G D 6 {
				A_FaceTarget(90,45);
				A_DropAdjust("EnemyThrownGrenade","EnemyThrownGrenade",0,18,28);
				A_GiveInventory("ZombieManGrenadeCount", 1);
				A_StartSound("THRGRN", 1);
			}
			P15G E 6;
			Goto See;
		Melee:
			TNT1 A 0 A_Jump(224, 2);
			TNT1 A 0 A_CombatDialogueHandler();
			ZBS3 A 6 A_FaceTarget();
			TNT1 A 0 {
				A_StartSound("skeleton/swing");
				A_CustomMeleeAttack(10, "monsters/nazi/bash", "", "Normal");
			}
			//TNT1 A 0 A_SpawnProjectile("ZombieBashAttack",10,0,0,0);
			ZBS3 B 6 A_FaceTarget();
			ZBS3 A 6;
			Goto See;
		DialogueCheck:
			TNT1 A 0 A_Jump(240, "MissileContinue");
			TNT1 A 0 A_CombatDialogueHandler();
			Goto MissileContinue;
		Missile:
			TNT1 A 0 A_JumpIfInTargetInventory("IsPlayer",1, "DialogueCheck");
			
			Goto AttackHandler;
		MissileContinue:
			PSPO E 6 {
				A_Stop();
				A_FaceTarget();
				return A_CheckLOFRanged("AttackHandler", "SideHop");
				}
			Goto See;
		AttackHandler:
			TNT1 A 0 {
				int chance = (random(1,256));
				
				if((chance > 232) && (CountInv("ZombieManGrenadeCount") < 3)) {return A_Jump(256, "Grenade");}
				return A_Jump(256, "Attack", "Attack1", "Attack1", "Attack2", "Attack2", "Attack3");
			}
		//Standard, 1 round attack
		Attack:
			PSPO E 8 A_FaceTarget();
			PSPO F 3 BRIGHT {
				A_SpawnProjectile("PB_PistolBullet", 42, 1, random(-10, 10), 1, random(-3, 3));
				A_SpawnProjectile("MarineMuzzle1", 47, 1) ;
				A_SpawnProjectile("OrangeLensFlareAlt", 47, 5, 0, 0);
				A_StartSound("weapons/pistol");
				A_SpawnItem ("Mp40CaseSpawn", 0, 30,0);
			}
			PSPO E 6 {
				A_FaceTarget();
				A_GiveInventory("EnemyPistolAmmo", 1);
				return A_JumpIfInventory("EnemyPistolAmmo", 15, "Reload");
			}
			Goto See;
		//Standard, 2 round attack
		Attack1:
			PSPO E 8 A_FaceTarget();
			PSPO F 3 BRIGHT {
				A_SpawnProjectile("PB_PistolBullet", 42, 1, random(-10, 10), 1, random(-3, 3));
				A_SpawnProjectile("MarineMuzzle1", 47, 1) ;
				A_SpawnProjectile("OrangeLensFlareAlt", 47, 5, 0, 0);
				A_StartSound("weapons/pistol");
				A_SpawnItem ("Mp40CaseSpawn", 0, 30,0);
			}
			PSPO E 8 A_FaceTarget();
			PSPO F 3 BRIGHT {
				A_SpawnProjectile("PB_PistolBullet", 42, 1, random(-10, 10), 1, random(-3, 3));
				A_SpawnProjectile("MarineMuzzle1", 47, 1) ;
				A_SpawnProjectile("OrangeLensFlareAlt", 47, 5, 0, 0);
				A_StartSound("weapons/pistol");
				A_SpawnItem ("Mp40CaseSpawn", 0, 30,0);
			}
			PSPO E 6 {
				A_FaceTarget();
				A_GiveInventory("EnemyPistolAmmo", 2);
				return A_JumpIfInventory("EnemyPistolAmmo", 15, "Reload");
			}
			Goto See;
		//Aimed, 3 round attack
		Attack2:
			PSPO J 6 A_FaceTarget();
			PSPO K 3 BRIGHT {
				A_SpawnProjectile("PB_PistolBullet", 42, 0, random(-8, 8), 1, random(-3, 3));
				A_SpawnProjectile("OrangeLensFlareAlt", 47, 5, 15, 0);
				A_SpawnProjectile("MarineMuzzle1", 48, 1) ;
				A_StartSound("weapons/pistol");
				A_SpawnItem ("Mp40CaseSpawn", 0, 30,0);
			}
			PSPO J 6 A_FaceTarget();
			PSPO K 3 BRIGHT {
				A_SpawnProjectile("PB_PistolBullet", 42, 0, random(-8, 8), 1, random(-3, 3));
				A_SpawnProjectile("OrangeLensFlareAlt", 47, 5, 15, 0);
				A_SpawnProjectile("MarineMuzzle1", 48, 1) ;
				A_StartSound("weapons/pistol");
				A_SpawnItem ("Mp40CaseSpawn", 0, 30,0);
			}
			PSPO J 6 A_FaceTarget();
			PSPO K 3 BRIGHT {
				A_SpawnProjectile("PB_PistolBullet", 42, 0, random(-8, 8), 1, random(-3, 3));
				A_SpawnProjectile("OrangeLensFlareAlt", 47, 5, 15, 0);
				A_SpawnProjectile("MarineMuzzle1", 48, 1) ;
				A_StartSound("weapons/pistol");
				A_SpawnItem ("Mp40CaseSpawn", 0, 30,0);
			}
			PSPO J 6 {
				A_FaceTarget();
				A_GiveInventory("EnemyPistolAmmo", 3);
				return A_JumpIfInventory("EnemyPistolAmmo", 15, "Reload");
			}
			Goto See;
		Attack3:
			PSPO EJ 4 A_FaceTarget();
			Crouching:
			PSPO H 6 A_FaceTarget();
			PSPO I 3 BRIGHT {
				A_SpawnProjectile("PB_PistolBullet", 32, 0, random(-4, 4), 1, random(-3, 3));
				A_SpawnProjectile("OrangeLensFlareAlt", 34, 16, 15, 0);
				A_SpawnProjectile("MarineMuzzle1", 34, 4) ;
				A_SpawnItem ("Mp40CaseSpawn", 0, 36,0);
				A_StartSound("weapons/pistol");
			}
			PSPO H 6 A_FaceTarget();
			PSPO I 3 BRIGHT {
				A_SpawnProjectile("PB_PistolBullet", 32, 0, random(-4, 4), 1, random(-3, 3));
				A_SpawnProjectile("OrangeLensFlareAlt", 34, 16, 15, 0);
				A_SpawnProjectile("MarineMuzzle1", 34, 3) ;
				A_SpawnItem ("Mp40CaseSpawn", 0, 36,0);
				A_StartSound("weapons/pistol");
			}
			PSPO H 6 A_FaceTarget();
			PSPO I 3 BRIGHT {
				A_SpawnProjectile("PB_PistolBullet", 32, 0, random(-4, 4), 1, random(-3, 3));
				A_SpawnProjectile("OrangeLensFlareAlt", 34, 16, 15, 0);
				A_SpawnProjectile("MarineMuzzle1", 34, 3) ;
				A_SpawnItem ("Mp40CaseSpawn", 0, 36,0);
				A_StartSound("weapons/pistol");
			}
			PSPO H 4  {
				A_FaceTarget();
				A_GiveInventory("EnemyPistolAmmo", 3);
				return A_JumpIfInventory("EnemyPistolAmmo", 15, "Reload");
				return A_jump(24, "Attack3");
			}
			DoneCrouching:
			PSPO JE 4 A_FaceTarget();
			Goto See;
		Reload:
			TNT1 A 0 A_StartSound("monsters/zombie/reload",CHAN_AUTO);
			PSPO A 4 {
				A_TakeInventory("EnemyPistolAmmo", 15);
				//A_StartSound("PSRLOUT");
				}
			IDP2 AC 5;
			IDP2 B 5 A_StartSound("PSRLOUT");
			IDP2 A 5 A_SpawnProjectile("EmptyClipMP40", 38, 0, random(-11, 11), 0);
			IDP2 B 5;
			IDP2 C 10 A_StartSound("PSRLIN");
			IDP2 A 10;
			PSPO A 5;
			IDP2 C 5 A_StartSound("PSRLFIN");
			PSPO EA 5;
			PSPO A 5;
			Goto See;
		
		////////////////
		//Pain Logic// 
		////////////////
		Pain.Melee:
		Pain:
			TNT1 A 0 A_JumpIfInventory ("IsDown", 1, "Downed");
			PSPO G 6 A_Pain();
			TNT1 A 0 A_JumpIfInTargetInventory("IsPlayer",1, "See");
			
			TNT1 A 0 A_Jump(180, "See");
			TNT1 A 0 A_StartSound("monsters/zombie/infight",CHAN_AUTO);
			Goto See;
			
	
			
        Downed:
			ID31 F 6 A_Pain();
			Goto GetUp;
		Pain.Kick:
		Pain.ExtremePunches:
			TNT1 A 0 A_JumpIfInventory ("IsDown", 1, "Pain");
			POS4 U 1 {
					bNODROPOFF = false;
					bFORCEXYBILLBOARD = true;
					A_GiveInventory("IsDown", 1);
					A_Pain();
					A_facetarget();
					ThrustThingZ(0,30,0,1);
			}
			POS4 U 2 A_facetarget();
			POS4 U 1 A_Recoil(15);
			POS4 UVWXY 3;
			Goto FallingAfterImpact;
		FallingAfterImpact:
			ID31 B 1 {
				A_GiveInventory ("FallingHeight", 1);
				A_CheckFloor ("GetUp");
			}
			NULL A 0 A_JumpIf (Vel.Z == 0, "GetUp");
			Loop;
		
		GetUp:
			TNT1 A 0 A_JumpIfInventory ("FallingHeight", 16, "FallingDie");
			TNT1 A 0 {
				A_TakeInventory("FallingHeight", 100);
				A_Stop();
				bSOLID = false;
				A_StartSound("BODYF",6);
			}
			2D11 RRRRRRRRRR 5 A_JumpIf(Vel.Z < 0, "FallingAfterImpact");
			2D11 Q 10 {
				A_TakeInventory("IsDown", 1);
				bFORCEXYBILLBOARD = false;
				bSOLID = true;
			}
			TNT1 A 0 A_JumpIfInTargetInventory("IsPlayer",1, "See");
			
			TNT1 A 0 A_Jump(180, "See");
			TNT1 A 0 A_StartSound("monsters/zombie/infight",CHAN_AUTO);
			Goto See;
		 
		FallingDie:
			TNT1 A 0 {
				bCOUNTKILL = false;
				bNoPain = true;
				A_SpawnItem("SplatteredSmall");
			}
			TNT1 A 0 A_JumpIfInventory ("FallingHeight", 32, "Death.Stomp");
			TNT1 A 0 A_JumpIfInventory ("FallingHeight", 25, "FallingSuperDeath");
			TNT1 A 0 A_JumpIfInventory ("FallingHeight", 16, "FallingDeath");
		FallingDeath:
			TNT1 A 0 {
				A_Scream();
				A_SpawnProjectile ("PB_XDeath1", 32, 0, random (0, 360), CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH, random (50, 130));
				A_SpawnProjectile ("PB_XDeath1", 32, 0, random (0, 360), CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH, random (50, 130));
				A_SpawnProjectile ("PB_XDeath1", 32, 0, random (0, 360), CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH, random (50, 130));
				A_SpawnProjectile ("PB_XDeath1", 32, 0, random (0, 360), CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH, random (50, 130));
				}
			ID31 E 2;
			ID31 F 2 {
				A_StartSound("BODYF",6);
				A_SpawnItem ("GrowingBloodPool");
				A_SpawnItem ("DeadZombieman1");
			}
			Stop;
		FallingSuperDeath:
			TNT1 A 0 A_XScream();
			Goto Death.ExplosiveImpact+1;
				
		Pain.Taunt:
			TNT1 A 0 A_JumpIfInventory("Enraged", 1, "Missile");
			PSPO B 1 {
				A_Pain();
				bMISSILEMORE = true;
				bMISSILEEVENMORE = true;
				A_StartSound("grunt/sight");
				A_FaceTarget();
				A_GiveInventory("Enraged", 1);
				}
			PSPO B 9;
			Goto Missile;
		Pain.Siphon:
			PSPO G 1 {
				A_SpawnItemEx("RedLightning_Small", random (-12, 12), random (-12, 12), random (16, 52), 0, 0);
				A_SpawnItemEx("RedLightning_Small", random (-12, 12), random (-12, 12), random (16, 52), 0, 0);
				A_SpawnItemEx("RedLightning_Small", random (-12, 12), random (-12, 12), random (16, 52), 0, 0);
				A_FaceTarget();
				A_GiveToTarget("HealthBonus",4);
			}
			PSPO G 5 {
				A_FaceTarget();
				A_Pain();
				}
			Goto See;
		Possession:
			PSPO G 3 {
				A_SetRoll(0);
				A_SetInvulnerable();
				A_Pain();
				}
			"####" "#" 35 ACS_NamedExecuteAlways("Pos - Flicker effect");
			TNT1 A 0 A_UnSetInvulnerable();
			Goto See;
	
		Pain.Stun:
			PSPO G 1 A_Pain();
			PSPO GGGGGGGGGG 3 A_SpawnItemEx ("StunElectrocute", random (-12, 12), random (-12, 12),  random (16, 52), 0, 0);
			PSPO G 1 A_Pain();
			PSPO GGGGGGGGGG 3 A_SpawnItemEx ("StunElectrocute", random (-12, 12), random (-12, 12),  random (16, 52), 0, 0);
			PSPO G 1 A_Pain();
			PSPO GGGGGGGGGG 3 A_SpawnItemEx ("StunElectrocute", random (-12, 12), random (-12, 12),  random (16, 52), 0, 0);
			PSPO G 1 A_Pain();
			PSPO GGGGGGGGGG 3 A_SpawnItemEx ("StunElectrocute", random (-12, 12), random (-12, 12),  random (16, 52), 0, 0);
			PSPO G 1 A_Pain();
			PSPO GGGGGGGGGG 3 A_SpawnItemEx ("StunElectrocute", random (-12, 12), random (-12, 12),  random (16, 52), 0, 0);
			PSPO G 1 A_Pain();
			Goto See;
			
		//New Evade Animation
		DiveLeft:
			PSPO A 1 A_FaceTarget();
			PSPO A 1 A_SetAngle(angle+90, SPF_INTERPOLATE);
			//POSS A 1 A_SetAngle(angle*256/360+192, SPF_INTERPOLATE);
			Goto DivingBegin;
		DiveRight:
			PSPO A 1 A_FaceTarget();
			PSPO A 1 A_SetAngle(angle-90, SPF_INTERPOLATE);
		//	POSS A 1 A_SetAngle(angle*256/360+64, SPF_INTERPOLATE);
			Goto DivingBegin;
		DiveBack:
			PSPO A 1 A_FaceTarget();
			PSPO A 1 A_SetAngle(angle-180, SPF_INTERPOLATE);
			//POSS A 1 A_SetAngle(angle*256/360+128, SPF_INTERPOLATE);
			Goto DivingBegin;
		DiveFront:
			PSPO A 1 A_FaceTarget();
			Goto DivingBegin;
		DivingBegin:
			ZDE4 A 5 A_SetAngle(angle, SPF_INTERPOLATE);
			TNT1 A 0 {
				ThrustThingZ(0,30,0,0);
				ThrustThing(angle, 15, 0, 0);
			}
			ZDE4 B 8 A_SetAngle(angle, SPF_INTERPOLATE);
		DivingLoop:
			ZDE4 B 1 A_CheckFloor ("DiveStop");
			ZDE4 B 1 A_JumpIf (Vel.Z == 0, "DiveStop");
			Loop;
		DiveStop:
			TNT1 A 0 A_StartSound("BODYF", CHAN_AUTO);
			ZDE4 C 25 A_Stop();
			ZDE4 D 6;
			PSPO F 6;
			PSPO E 6;
			Goto Missile;
		Roll:
			TNT1 A 0;
			TNT1 A 0 A_DeathWepCheck("MinigunSelected", 2000, "Avoid");
			TNT1 A 0 A_DeathWepCheck("RocketLauncherSelected", 2000, "Avoid");
			TNT1 A 0 A_DeathWepCheck("SGLSelected", 2000, "Avoid");
			TNT1 A 0 A_DeathWepCheck("PlayerIsThrowingAGrenade", 2000, "Avoid");
			TNT1 A 0 A_Jump(256, "RollR", "RollL");
		RollL:
			TNT1 A 0 A_WallCheck(2, "RollLNow", "See");
		RollLNow:
			TNT1 AAA 0 A_FaceTarget(0);
			ZRO1 A 1 A_FaceTarget(0);
			TNT1 A 0
			{
				ThrustThing(angle * 256 / 360 + 192, 13, 0, 0);
				//Play the Roll sound
				bNoPain = true;
				bNODROPOFF = true;
			}
			ZRO1 AAAAAAAAAAAAAAAA 1 A_SetRoll(roll+22, SPF_INTERPOLATE);
			ZRO1 A 1
			{
				//A_Stop();
				A_SetRoll(0);
				bNoPain = false;
				bNODROPOFF = false;
			}
			ZRO1 A 1;
			goto See;
		RollR:
			TNT1 A 0 A_WallCheck(2, "RollLNow", "See");
		RollRNow:
			TNT1 AAA 0 A_FaceTarget(0);
			ZRO2 A 1 A_FaceTarget(0);
			TNT1 A 0
			{
				ThrustThing(angle * 256 / 360 + 64, 13, 0, 0);
				//Play the Roll sound
				bNoPain = true;
				bNODROPOFF = true;
			}
			ZRO2 AAAAAAAAAAAAAAAA 1 A_SetRoll(roll-22, SPF_INTERPOLATE);
			ZRO2 A 1
			{
				//A_Stop();
				A_SetRoll(0);
				bNoPain = false;
				bNODROPOFF = false;
			}
			ZRO2 A 1;
			goto See;
		SideStep:
			//Undone
		SideHop:
			TNT1 A 0 A_Jump(256, "SHR", "SHL");
		SHR:
			PSPO A 3 A_FaceTarget;
			PSPO E 3 A_FaceTarget;
			TNT1 A 0 ThrustThingZ(0, 20, 0, 0);
			TNT1 A 0 ThrustThing(angle*256/360+192, 8, 0, 0);
			ZRO1 A 12;
		SHRL:
			ZRO1 A 1 A_CheckFloor("SHRE");
			ZRO1 A 1;
			Loop;
		SHRE:
			ZRO1 A 1 A_FaceTarget;
			TNT1 A 0 A_Jump(256, "RollR", "See", "Missile");
			Goto See;
		SHL:
			PSPO A 3 A_FaceTarget;
			PSPO E 3 A_FaceTarget;
			TNT1 A 0 ThrustThingZ(0, 20, 0, 0);
			TNT1 A 0 ThrustThing(angle*256/360+64, 8, 0, 0);
			ZRO2 A 12;
		SHLL:
			ZRO2 A 1 A_CheckFloor("SHLE");
			ZRO2 A 1 A_CheckCeiling("SHLE");
			Loop;
		SHLE:
			ZRO2 A 1 A_FaceTarget;
			TNT1 A 0 A_Jump(256, "RollL", "See", "Missile");
			Goto See;
		
		//Avoid damage
		Pain.Avoid:
			TNT1 A 0 A_JumpIfInTargetInventory("IsPlayer",1, "PlayerActionDialogue");
		Avoid:
			TNT1 A 0
			{
				avoidCooldown = 175;
			}
			TNT1 A 0 A_Jump(256, "DiveLeft", "DiveRight", "DiveLeft", "DiveRight", "DiveFront");
			Goto DiveFront;

		Death.Ice:
		Death.IceExplosion:
		Death.Freeze:
		Death.Frost:
		TNT1 A 0 {
				bShootable = false;
				bSOLID = false;
				A_SpawnItem("FrozenPistolZombieman");
			}
			Stop;
			
			
		Death.Fatality:
				TNT1 A 0 A_Pain();
				TNT1 A 0 A_NoBlocking();
				TNT1 A 0 A_JumpIfIntargetInventory("FistsSelected", 1, 1);
				Goto Death.ExplosiveImpact;
				TNT1 A 0 A_GiveToTarget("GoFatality", 1);
				TNT1 A 0 A_Jump(256,"Death.Fatality1", "Death.Fatality1", "Death.Fatality2", "Death.Fatality2", "Death.Fatality3", "Death.Fatality4");
				Goto Death.Fatality1;

		Death.Fatality1:
			TNT1 A 0 A_GiveToTarget("ZombieManFatality", 1);
			Stop;
		Death.Fatality2:
			TNT1 A 0 A_GiveToTarget("ZombieManFatality2", 1);
			Stop;
		Death.Fatality3:
			TNT1 A 0 A_GiveToTarget("PistolZombiemanFatality1", 1);
			Stop;
		Death.Fatality4:
			TNT1 A 0 A_GiveToTarget("ZombieManFatality4", 1);
			Stop;

		 Death.cutless:
			TNT1 A 0 A_JumpIfInventory ("IsDown", 1, "Death.Down");
			TNT1 A 0 A_Jump(16, "Death.Saw");
			Goto Death.Minigun;

		Death:
			TNT1 A 0;
			TNT1 A 0 A_SetRoll(0);
			TNT1 A 0; //A_Jump(32, "Death.Arm");
			TNT1 A 0 A_DeathWepCheck("ShotgunSelected", 400, "Death.Shotgun");
			TNT1 A 0 A_DeathWepCheck("ASGSelected", 400, "Death.Shotgun");
			TNT1 A 0 A_DeathWepCheck("SSGSelected", 200, "Death.SSG");
			TNT1 A 0 A_DeathWepCheck("MinigunSelected", 1000, "Death.Minigun");
			TNT1 A 0 A_DeathWepCheck("NewChaingunSelected", 750, "Death.Nailgun");
			TNT1 A 0 A_Jump(129, "DeathOther", "DeathOther2");
			TNT1 A 0 A_Jump(128, "DeathMirror");
			TNT1 A 0 {
				A_SpawnItem("Zombieman_DeathMinorLeg");
				A_Scream();
				A_NoBlocking();
				}
			Stop;
	}
}
