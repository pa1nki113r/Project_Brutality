Class PB_RiotShieldGuy : PB_ShotgunGuy
{
		Default {
			Damagefactor "DestroyShield", 1.0;
			Painchance "DestroyShield", 256;
			DropItem "RiotShieldDrop";
		}
		
		override void PostBeginPlay() {
			Super.PostBeginPlay(); // call the super function for virtual functions so we don't break shit if GZdoom update.
			HitBoxSpawned = False;
		
		}
		
		
		void A_SmartChase(){
			if (target == NULL) {
				A_GiveInventory("Wandering",1);
				A_Wander();
				return;	
			}
			if (CheckSight(target) == true) {
				EnemyLastSighted = Level.MapTime;
				A_TakeInventory("Wandering",1);
				A_Chase();
			}
			else if (CheckSight(target) == false && abs(Level.MapTime - EnemyLastSighted) < 360) {
				A_Chase();
			}
			else {
				A_GiveInventory("Wandering",1);
				A_Wander(CHF_NORANDOMTURN);
			}
		}
		
		void HitboxerHandlerRiot() {
		
			if (HitBoxSpawned == True){
				HitBoxTimerNew = Level.MapTime;
				if(abs(HitBoxTimerNew - HitBoxTimerOld) > 350) {
					A_TakeInventory("HeadshotToken",1);
					HitBoxSpawned = False;
					Wandering = False;
				}
			}
			
			if (CheckInventory("HeadshotToken",1) && HitBoxSpawned == False) {
				A_SpawnItem("PB_HeadshotHitbox");
				HitBoxSpawned = True;
				HitBoxTimerOld = Level.MapTime;
			}
		
		}
		
		override void Tick()
		{
			Super.Tick();
			
			// Update recognition if crouching
			if(self.InStateSequence(self.Curstate, self.ResolveState("MissileContinue")) || self.InStateSequence(self.Curstate, self.ResolveState("DeployShield"))) {
				self.Height = 44;
			}
			else {
				self.Height = 56;
				//Handle Hitbox system when monster is not shielded
				HitboxerHandlerRiot();
			}
		}
		
		States
		{
		Death.KillMe:
		Death.Taunt:
		Death.Avoid:
			TNT1 A 0;
			TNT1 A 0 {bTHRUACTORS = true;}
			TNT1 A 0 {bCOUNTKILL = false;}
			TNT1 A 0 A_SpawnItemEx ("PB_RiotShieldGuy",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION |SXF_TRANSFERSPECIAL| SXF_TRANSFERAMBUSHFLAG ,0);
			Stop;
		
		Spawn:
			RPSZ A 1;
			TNT1 A 0 {
				A_GiveInventory("ZombieManAmmo", random(4,10));
				A_GiveInventory("SKShotgunGuy", 1);
				A_GiveInventory("TypeSergeant", 1);
			}
		Stand:
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RPSZ A 8 A_Look();
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RPSZ A 8 A_Look();
			Loop;
		See:
			TNT1 A 0 {
				A_TakeInventory("SKShotgunGuy", 1);
				EnemyLastSighted = Level.MapTime;
			}
		SeeContinue:
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RPSZ AABB 2 A_SmartChase();
			TNT1 A 0 A_StartSound("humans/step");
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RPSZ CCDD 2 A_SmartChase();
			TNT1 A 0 A_StartSound("humans/step");
			TNT1 A 0 A_JumpIfInventory("Wandering",16,"LookAround");
			Loop;
		LookAround:
			TNT1 A 0 A_ClearTarget();
			TNT1 A 0 A_TakeInventory("Wandering", 36);
			TNT1 A 0 A_Jump(200, 2);
			TNT1 A 0 A_StartSound("monsters/zombie/searching", CHAN_AUTO);
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RPSZ AAAA 2 A_Look();
			Goto See;
		
		
		////////////////
		//Attack Logic// 
		////////////////
		Melee:
			TNT1 A 0 A_KillChildren("DestroyShield", 0 , "RiotShieldPhysics");
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RHGM A 8 A_FaceTarget();
			TNT1 A 0 A_StartSound("skeleton/swing");
			TNT1 A 0 A_SpawnProjectile("ZombieBashAttack",10,0,0,0);
			RHGM B 6 A_FaceTarget();
			TNT1 A 0 A_StartSound("barrel/pain");
			RHGM C 6;
			Goto See;
		DialogueCheck:
			TNT1 A 0 A_Jump(240, "MissileContinue");
			TNT1 A 0 A_CombatDialogueHandler();
			Goto MissileContinue;
		Missile:
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			TNT1 A 0 A_JumpIfInTargetInventory("IsPlayer",1, "DialogueCheck");
			TNT1 A 0 A_JumpIfInTargetInventory("TargetIsAMarine",1, "DialogueCheck");
		MissileContinue:
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RPSZ E 4 A_FaceTarget();
			RPSZ F 4 BRIGHT {
				A_StartSound("weapons/pistol");
				A_SpawnItem ("Mp40CaseSpawn", 0, 30,0);
				A_SpawnProjectile("OrangeLensFlareAlt", 34, 10, 15, 0);
				A_SpawnProjectile("MonsterRiotTracer", 28, 0, random(-12, 12), 0);
			}
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RPSZ E 4 {
				A_FaceTarget();
				A_GiveInventory("ZombieManAmmo", 1);
				return A_JumpIfInventory("ZombieManAmmo", 15, "Reload");
			}
			RPSZ E 4 A_FaceTarget();
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RPSZ F 4 BRIGHT {
				A_StartSound("weapons/pistol");
				A_SpawnItem ("Mp40CaseSpawn", 0, 30,0);
				A_SpawnProjectile("OrangeLensFlareAlt", 34, 10, 15, 0);
				A_SpawnProjectile("MonsterRiotTracer", 28, 0, random(-12, 12), 0);
			}
			RPSZ E 4 {
				A_FaceTarget();
				A_GiveInventory("ZombieManAmmo", 1);
				return A_JumpIfInventory("ZombieManAmmo", 15, "Reload");
			}
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RPSZ F 4 BRIGHT {
				A_StartSound("weapons/pistol");
				A_SpawnItem ("Mp40CaseSpawn", 0, 30,0);
				A_SpawnProjectile("OrangeLensFlareAlt", 34, 10, 15, 0);
				A_SpawnProjectile("MonsterRiotTracer", 28, 0, random(-12, 12), 0);
			}
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RPSZ E 4 {
				A_FaceTarget();
				A_GiveInventory("ZombieManAmmo", 1);
				return A_JumpIfInventory("ZombieManAmmo", 15, "Reload");
			}
			Goto See;
		
		Reload:
			RSP6 A 4 {
				A_StartSound("monsters/zombie/reload",CHAN_AUTO);
				A_TakeInventory("ZombieManAmmo", 15);
			}
			RSP6 A 1 {
				A_StartSound("PSRLOUT",3);
				A_SpawnProjectile("EmptyClipMP40", 38, 0, random(-11, 11), 0);
			}
			RSP6 ABC 6;
			TNT1 A 0 A_StartSound("PSRLFIN", 3);
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RPSZ A 8;
			Goto See;
			
		
		////////////////
		//Pain Logic// 
		////////////////
		NormalKick:
			TNT1 A 0 A_JumpIfInventory ("IsDown", 1, "Pain");
			SPO4 U 1 {
					{bNODROPOFF = False;}
					{bFORCEXYBILLBOARD = True;}
					A_TakeInventory("SKShotgunGuy", 1);
					A_GiveInventory("IsDown", 1);
					A_Pain();
					A_facetarget();
					ThrustThingZ(0,30,0,1);
			}
			SPO4 U 2 A_facetarget();
			SPO4 U 1 A_Recoil(15);
			SPO4 UVWXY 3;
			Goto FallingAfterImpact;
			
		GetUp:
			TNT1 A 0 A_SpawnItem("LargeMassWaterImpact");
			TNT1 A 0 A_JumpIfInventory ("FallingHeight", 16, "FallingDie");
			TNT1 A 0 {
				A_TakeInventory("FallingHeight", 100);
				A_Stop();
				A_StartSound("BODYF",6);
			}
			ID11 SSSSSSSSS 5 A_JumpIf(Vel.Z < 0, "FallingAfterImpact");
			ID11 T 10 {
				A_FaceTarget();
				A_TakeInventory("IsDown", 1);
				A_TakeInventory("RiotShieldStop", 1);
				bFORCEXYBILLBOARD = false;
			}
			TNT1 A 0 A_JumpIfInTargetInventory("IsPlayer",1, "See");
			TNT1 A 0 A_JumpIfInTargetInventory("TargetIsAMarine",1, "See");
			TNT1 A 0 A_StartSound("monsters/zombie/infight",CHAN_AUTO);
			Goto See;
		
		
		Pain.Melee:
			TNT1 A 0 A_JumpIfInventory ("SKShotgunGuy", 1, "StealthKill");
		Pain.Kick:
		Pain.Fatality:
		Pain.ExtremePunches:
		Pain.DestroyShield:
			TNT1 A 0 A_JumpIfInventory ("RiotShieldStop", 1, "NormalKick");
			TNT1 A 0 A_KillChildren("DestroyShield", 0 , "RiotShieldPhysics");
			TNT1 A 0 A_GiveInventory("RiotShieldStop", 1);
			RHGM A 1 A_FaceTarget();
			RHGM A 5 A_Pain();
			RHGM C 24;
			TNT1 A 0 A_TakeInventory("RiotShieldStop", 1);
			Goto See;
		Pain:
		Pain.Avoid:
			TNT1 A 0 A_JumpIfInventory ("IsDown", 1, "Downed");
			TNT1 A 0 A_TakeInventory("RiotShieldStop", 1);
			TNT1 D 1 A_FaceTarget();
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RPSZ D 6 A_Pain();
		DeployShield:
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RPSZ E 8 A_FaceTarget();
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RPSZ E 8 A_FaceTarget();
			TNT1 A 0 A_SpawnItemEx("RiotShieldPhysics", 20, 0, 5, 0, 0, 0, 0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
			RPSZ E 8;
			Goto See;
			TNT1 A 0 A_JumpIfInTargetInventory("IsPlayer",1, "See");
			TNT1 A 0 A_JumpIfInTargetInventory("TargetIsAMarine",1, "See");
			TNT1 A 0 A_Jump(180, "See");
			TNT1 A 0 A_StartSound("monsters/zombie/infight",CHAN_AUTO);
			Goto See;
			
		Possession:
			TNT1 A 0 A_SetInvulnerable();
			RPSZ A 3;
			RPSZ A 3 A_Pain();
			"####" "#" 35 ACS_NamedExecuteAlways("Pos - Flicker effect");
			TNT1 A 0 A_UnSetInvulnerable();
			Goto See;
		
	Pain.Stun:
		TNT1 A 0 A_SpawnItemEx ("StunElectrocute", random (-4, 4), random (-4, 4),  random (16, 32), 0, 0);
		RPSZ D 1 A_Pain();
		RPSZ DDDDDDDDDD 3 A_SpawnItemEx ("StunElectrocute", random (-12, 12), random (-12, 12),  random (16, 52), 0, 0);
		RPSZ D 1 A_Pain();
		RPSZ DDDDDDDDDD 3 A_SpawnItemEx ("StunElectrocute", random (-12, 12), random (-12, 12),  random (16, 52), 0, 0);
		RPSZ D 1 A_Pain();
		RPSZ DDDDDDDDDD 3 A_SpawnItemEx ("StunElectrocute", random (-12, 12), random (-12, 12),  random (16, 52), 0, 0);
		RPSZ D 1 A_Pain();
		RPSZ DDDDDDDDDD 3 A_SpawnItemEx ("StunElectrocute", random (-12, 12), random (-12, 12),  random (16, 52), 0, 0);
		RPSZ D 1 A_Pain();
		RPSZ DDDDDDDDDD 3 A_SpawnItemEx ("StunElectrocute", random (-12, 12), random (-12, 12),  random (16, 52), 0, 0);
		RPSZ D 1 A_Pain();
		Goto See;
	
	Pain.Siphon:
		TNT1 AAA 0 A_SpawnItemEx ("RedLightning_Small", random (-12, 12), random (-12, 12), random (16, 52), 0, 0);
		RPSZ D 1 
		{
			A_FaceTarget();
			A_GiveToTarget("HealthBonus",4);
		}
		RPSZ D 5 A_Pain();
		Goto See;
		
	Death.Ice:
	Death.Freeze:
	Death.Frost:
			TNT1 A 0 {
				bSHOOTABLE = false;
				bSOLID = false;
				A_SpawnItem("FrozenRiotShieldGuy");
			}
		Stop;
	
	Death.Fatality:
				TNT1 A 0 A_Pain();
				TNT1 A 0 A_NoBlocking();
				TNT1 A 0 A_JumpIfIntargetInventory("FistsSelected", 1, 1);
				Goto Death.ExplosiveImpact;
				TNT1 A 0 A_GiveToTarget("GoFatality", 1);
				TNT1 A 0 A_Jump(256,"Death.Fatality1");
				Goto Death.Fatality1;
	Death.Fatality1:
		TNT1 A 0 A_Scream();
		TNT1 A 0 A_GiveToTarget("RiotSergeantFatality1", 1);
		Stop;
			
	}
}