Class Mp40CaseSpawn : Actor
{
	override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}

	Default
  {
  Speed 20;
	PROJECTILE;
	+NOCLIP;
	+CLIENTSIDEONLY;
  }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("EmptyBrassMP40",-5,0,random(80, 100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(45,80));
		Stop;
	}
}

Class Mp40CaseSpawnRight : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	Default
  {Speed 20;
	PROJECTILE;
	+NOCLIP;
	+CLIENTSIDEONLY;
  }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("EmptyBrassMP40",-5,4,random(-80, -100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(45,80));
		Stop;
	}
}

Class DeagleCasingRight : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	Default
  {Speed 20;
	PROJECTILE;
	+NOCLIP;
	+CLIENTSIDEONLY;
  }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("EmptyBrassDeagle",-5,0,random(-80, -100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(55,80));
		Stop;
	}
}

Class DeagleCasingLeft : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	Default
  {Speed 20;
	PROJECTILE;
	+NOCLIP;
	+CLIENTSIDEONLY;
  }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("EmptyBrassDeagle",-5,0,random(80, 100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(55,80));
		Stop;
	}
}

Class MagnumCasing : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	Default
  {Speed 20;
	PROJECTILE;
	+NOCLIP;
	+CLIENTSIDEONLY;
  }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("EmptyBrassMagnum",-5,0,random(-80, -100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(5,20));
		Stop;
	}
}

Class PistolCasingSpawner : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	Default
  {Speed 20;
	PROJECTILE;
	+NOCLIP;
	+CLIENTSIDEONLY;
  }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("EmptyBrassPistol",-5,0,random(70, 100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(30,80));
		Stop;
	}
}

Class SMGCasingSpawner : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	Default
  {Speed 20;
	PROJECTILE;
	+NOCLIP;
	+CLIENTSIDEONLY;
  }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("EmptyBrassSMG",-5,0,random(-70, -100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(25,50));
		Stop;
	}
}

Class RifleCaseSpawn : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	Default
  {Speed 20;
	PROJECTILE;
	+NOCLIP;
	+CLIENTSIDEONLY;
  }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("EmptyBrass",-5,0,random(-80,-100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(45,80));
		Stop;
	}
}

Class ShotCaseSpawn : RifleCaseSpawn
{
	States
	{
	Spawn:
	    TNT1 A 0 ;
		//TNT1 A 1 A_SpawnProjectile("ShotgunCasing",0,0,random(-80,-100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(40,60));
		TNT1 A 1 A_SpawnItemEX("ShotgunCasing",0,0,-7,frandom(3,5),frandom(3,4),frandom(8,11));
		Stop;
	}
} 

Class LiveRed_ShotCaseSpawn : RifleCaseSpawn
{
	States
	{
	Spawn:
	    TNT1 A 0 ;
		TNT1 A 1 A_SpawnProjectile("ShotgunCasingRedLive",0,0,random(-80,-100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(40,60));
		Stop;
	}
} 

Class LiveGreen_ShotCaseSpawn : RifleCaseSpawn
{
	States
	{
	Spawn:
	    TNT1 A 0 ;
		TNT1 A 1 A_SpawnProjectile("ShotgunCasingGreenLive",0,0,random(-80,-100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(40,60));
		Stop;
	}
} 

Class LiveOrange_ShotCaseSpawn : RifleCaseSpawn
{
	States
	{
	Spawn:
	    TNT1 A 0 ;
		TNT1 A 1 A_SpawnProjectile("ShotgunCasingOrangeLive",0,0,random(-80,-100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(40,60));
		Stop;
	}
} 

Class ShotCaseSpawn2 : RifleCaseSpawn 
{
 States
	{
 Spawn:
        TNT1 A 0;
		//TNT1 A 1 A_SpawnProjectile("ShotgunCasing2",0,0,random(-80,-100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(40,60));
		TNT1 A 1 A_SpawnItemEX("ShotgunCasing2",0,0,-7,frandom(3,5),frandom(3,4),frandom(8,11));
		Stop;
 }
}

Class ShotCaseSpawn3 : RifleCaseSpawn
{
 States
	{
 Spawn:
        TNT1 A 0;
		//TNT1 A 1 A_SpawnProjectile("ShotgunCasing3",0,0,random(-80,-100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(40,60));
		TNT1 A 1 A_SpawnItemEX("ShotgunCasing3",0,0,-7,frandom(3,5),frandom(3,4),frandom(8,11));
		Stop;
 }
}

Class SSGCaseSpawner : RifleCaseSpawn
{
		States
		{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 Thing_ChangeTID(0,390);
			TNT1 A 1 A_SpawnProjectile("ShotgunCasingSSG",0,0,random(80,100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(50,70));
			Stop;
        /*Goto Death
		Death:
				TNT1 A 0 A_SpawnProjectile("ShotgunCasingSSG",0,0,random(80,100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(50,70));
				Stop;*/
		}
}


Class FiftyCaseSpawn : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
		Default
	  {
		Speed 20;
		PROJECTILE;
		+NOCLIP;
		+CLIENTSIDEONLY;
	  }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("EmptyBrassMinigun",-2,0,random(80,100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(40,80));
		Stop;
	}
}



Class FiftyCaseSpawn2: FiftyCaseSpawn
{
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("EmptyBrassMinigun",-2,0,random(-80,-100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(40,80));
		TNT1 A 1 A_SpawnProjectile("MinigunBeltPiece",-4,0,random(-80,-100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(40,80));
		Stop;
	}
}

Class GrenadeCaseSpawn : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	Default
  {Speed 20;
	PROJECTILE;
	+NOCLIP;
	+CLIENTSIDEONLY;
  }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("EmptyGrenadeBrass",-2,0,random(80,100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(40,80));
		Stop;
	}
}

Class BigEmptyCaseSpawn : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	Default{Speed 20;
	PROJECTILE;
	+NOCLIP;
	+CLIENTSIDEONLY;
  }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("BigEmptyBrass",-5,0,random(-80,-100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(45,80));
		Stop;
	}
}

Class MastermindCaseSpawn : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
  Default
  {Speed 20;
	PROJECTILE;
	+NOCLIP;
	+CLIENTSIDEONLY;
  }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("GiantEmptyBrass",-5,0,random(-80,-100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(45,80));
		Stop;
	}
}


Class EmptyBrass : Actor
{

	
	bool smoking;
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   Default
   {Height 2;
   Radius 2;
   Speed 8;
   Scale 0.1;
   +DOOMBOUNCE;
   - NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   -DONTSPLASH;
   -CANBOUNCEWATER;
   +FLOORCLIP;
   +THRUACTORS;
   +ROLLSPRITE;
   Mass 4;
   SeeSound "weapons/casing";
   }
   States
   {
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(16, "SpawnSmoking");
			CAS3 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
			A_SetRoll(roll+36);
		}
		Goto Death;
		SpawnSmoking:
			TNT1 A 0 { smoking = 1;}
			CAS3 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
			A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
			A_SetRoll(roll+36);
		}
		Goto Death;
		
		Death:
		  CAS3 I 0 A_SetRoll(0);
		  LCPJ A 0 A_Jump(256,"Case1","Case2","Case3","Case4","Case5","Case6","Case7","Case8","Case9","Case10");
		Case1:
			CAS3 K 1;
			Goto Rest;
		Case2:
			CAS3 L 1;
			Goto Rest;
		Case3:
			CAS3 M 1;
			Goto Rest;
		Case4:
			CAS3 N 1;
			Goto Rest;
		Case5:
			CAS3 O 1;
			Goto Rest;
		Case6:
			CAS3 P 1;
			Goto Rest;
		Case7:
			CAS3 Q 1;
			Goto Rest;
		Case8:
			CAS3 R 1;
			Goto Rest;
		Case9:
			CAS3 S 1;
			Goto Rest;
		Case10:
			CAS3 T 1;
			Goto Rest;
		Rest:
			"####" "#" 0 A_JumpIf(smoking == 1, "Rest2");
			"####" "###########################################" 2;
			"####" "#" -1;
			Stop;
		Rest2:
			"####" "###########################################" 2 A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
			"####" "#" -1;
			Stop;
   
		Splash:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItem("UnderwaterEmptyBrass");
			Stop;
	
   }
}

Class ShotgunWad : Actor
{
	bool smoking;
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   Default
   {
	BounceFactor 0.6;
	damage 0;
	radius 2;
	height 2;
	alpha 0.9;
	scale .10;
	Height 2;
   Radius 2;
   Speed 30;
   +DOOMBOUNCE;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   -DONTSPLASH;
   -CANBOUNCEWATER;
   +FLOORCLIP;
   +THRUACTORS;
   +ROLLSPRITE;
   +RANDOMIZE;
   +NOEXTREMEDEATH;
   Gravity 1;
   Mass 8;
   SeeSound "";
	}
	states
	{
	Spawn:
		TNT1 A 2;
		SWAD A 3 ;
	Exist:
       TNT1 A 0 A_SetRoll(Roll+frandom(8,-25));
	   LCPJ A 0 A_Jump(256,"RotateRight1","RotateRight2","RotateRight3","RotateRight4","Spawn");
	   //CAS3 G 1 ;
	  //CAS3 ABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGH 3 A_JumpIf(waterlevel > 1, "Splash");
	RotateRight1:
	  TNT1 A 0 A_SetRoll(Roll+frandom(8,-25));
	  DWAD A 1 A_JumpIf(waterlevel > 1, "Splash");
	  Loop;
	RotateRight2:
	  TNT1 A 0 A_SetRoll(Roll+frandom(8,-25));
	  DWAD K 1 A_JumpIf(waterlevel > 1, "Splash");
	  Loop;
	RotateRight3:
	  TNT1 A 0 A_SetRoll(Roll+frandom(8,-25));
	  DWAD Q 1 A_JumpIf(waterlevel > 1, "Splash");
	  Loop;
	RotateRight4:
	  TNT1 A 0 A_SetRoll(Roll+frandom(8,-25));
	  DWAD F 1 A_JumpIf(waterlevel > 1, "Splash");
	  Loop;
	Death:
      TNT1 A 0 A_SetRoll(0,SPF_INTERPOLATE);
	  DWAD K 0;
      LCPJ A 0 A_Jump(256,"Rest1","Rest2","Rest3","Rest4","Rest5","Rest6");
      Goto Rest1;
    Rest1:
      DWAD K 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
      Loop;
    Rest2:
      DWAD M 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
      loop;
    Rest3:
	  DWAD O 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
      Loop;
    Rest4:
      DWAD P 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
      Loop;
    Rest5:
      DWAD R 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
      Loop;
    Rest6:
      DWAD T 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
      Loop;
	Splash:
		TNT1 A 0;
		TNT1 A 0 A_SpawnItem("UnderwaterWAD");
		Stop;
	
	Diasappear:
		TNT1 A 0;
		Stop;
	}
}

Class UnderwaterWAD: shotgunWAD
{
     Default
   {
   Speed 1;
   -DOOMBOUNCE;
   Mass 3;
   SeeSound "none";
   }
   States
   {
   Spawn:
      BLUD C 0 ThrustThingZ (0,7,1,0);
      DWAD ACE 3;
	  BLUD C 0 ThrustThingZ (0,7,1,0);
	  DWAD FHJ 3;
	  BLUD C 0 ThrustThingZ (0,7,1,0);
      DWAD ACE 3;
	  BLUD C 0 ThrustThingZ (0,7,1,0);
	  DWAD FHJ 3;
	   TNT1 A 0 A_SpawnItem("BUBULZ");
      Loop;
   }
}

Class EmptyBrassMinigun: EmptyBrass
{
   States
   {
		Spawn:
			  CAS3 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
				A_SetRoll(roll-36);
			}
			Goto Death;
   }
}

Class EmptyGrenadeBrass : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   Default
   {Height 2;
   Radius 2;
   Speed 8;
   Scale 0.1;
   +DOOMBOUNCE;
   - NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   -DONTSPLASH;
   -CANBOUNCEWATER;
   +FLOORCLIP;
   +THRUACTORS;
   +ROLLSPRITE;
   Mass 4;
   SeeSound "weapons/shell";
   }
   States
   {
	   Spawn:
		  CAS4 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
			A_SetRoll(roll+36);
			A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
		}
		Death:
		  CAS4 I 0 A_SetRoll(0);
		  LCPJ A 0 A_Jump(256,"Case1","Case2","Case3","Case4","Case5","Case6","Case7","Case8","Case9","Case10");
		Case1:
			CAS4 K 1;
			Goto Rest;
		Case2:
			CAS4 L 1;
			Goto Rest;
		Case3:
			CAS4 M 1;
			Goto Rest;
		Case4:
			CAS4 N 1;
			Goto Rest;
		Case5:
			CAS4 O 1;
			Goto Rest;
		Case6:
			CAS4 P 1;
			Goto Rest;
		Case7:
			CAS4 Q 1;
			Goto Rest;
		Case8:
			CAS4 R 1;
			Goto Rest;
		Case9:
			CAS4 S 1;
			Goto Rest;
		Case10:
			CAS4 T 1;
			Goto Rest;
		Rest:
		  "####" "###########################################" 2 A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
		  "####" "#" -1;
		  Stop;
		  
		Splash:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItem("UnderwaterEmptyBrass");
			Stop;
   }
}


Class GiantEmptyBrass: EmptyBrass
{
  Default
  {Gravity 0.8;
  Speed 12;
  Scale 0.3;
  }
  States
   {
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(16, "SpawnSmoking");
			CAS8 ABCDEFGHIJKLMNABCDEFGHIJKLMNABCDEFGHIJKLMNABCDEFGHIJKLMNABCDEFGHIJKLMN 2 {
			A_SetRoll(roll+36);
		}
		Goto Death;
		SpawnSmoking:
			TNT1 A 0 { smoking = 1;}
			CAS8 ABCDEFGHIJKLMNABCDEFGHIJKLMNABCDEFGHIJKLMNABCDEFGHIJKLMNABCDEFGHIJKLMN 2 {
			A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
			A_SetRoll(roll+36);
		}
		Goto Death;
		
		Death:
		  CAS8 I 0 A_SetRoll(0);
		  LCPJ A 0 A_Jump(256,"Case1","Case2","Case3","Case4","Case5","Case6","Case7","Case8","Case9","Case10","Case11","Case12","Case13");
		Case1:
			CAS8 O 1;
			Goto Rest;
		Case2:
			CAS8 P 1;
			Goto Rest;
		Case3:
			CAS8 Q 1;
			Goto Rest;
		Case4:
			CAS8 R 1;
			Goto Rest;
		Case5:
			CAS8 S 1;
			Goto Rest;
		Case6:
			CAS8 T 1;
			Goto Rest;
		Case7:
			CAS8 U 1;
			Goto Rest;
		Case8:
			CAS8 V 1;
			Goto Rest;
		Case9:
			CAS8 W 1;
			Goto Rest;
		Case10:
			CAS8 X 1;
			Goto Rest;
		Case11:
			CAS8 Z 1;
			Goto Rest;
		Case12:
			CAS8 [ 1;
			Goto Rest;
		Case13:
			CAS8 ] 1;
			Goto Rest;
		Rest:
			"####" "#" 0 A_JumpIf(smoking == 1, "Rest2");
			"####" "###########################################" 2;
			"####" "#" -1;
			Stop;
		Rest2:
			"####" "###########################################" 2 A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
			"####" "#" -1;
			Stop;
   
		Splash:
			TNT1 A 0;
			TNT1 A 0 A_SpawnItem("UnderwaterEmptyBrass");
			Stop;
	}
}

Class BigEmptyBrass: EmptyBrass
{
  Default
  {Gravity 0.8;
  Speed 12;
  Scale 0.2;
  }
}



Class underwaterEmptyBrass: EmptyBrass
{
   Default
   {Speed 0;
   -DOOMBOUNCE;
   Mass 1;
   SeeSound "none";
   }
   States
   {
   Spawn:
      BLUD C 0 ThrustThingZ (0,7,1,0);
      CAS3 ABCD 3 ;
	  BLUD C 0 ThrustThingZ (0,7,1,0);
	  CAS3 EFGH 3;
	  BLUD C 0 ThrustThingZ (0,7,1,0);
      CAS3 ABCD 3 ;
	  BLUD C 0 ThrustThingZ (0,7,1,0);
	  CAS3 EFGH 3;
	   TNT1 A 0 A_SpawnItem("BUBULZ");
      Loop;
   }
}

Class ShotgunCasing : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   Default{
   Height 12;
   Radius 9;
   Speed 6;
   Scale 0.15;
   +DOOMBOUNCE;
   - NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   +ROLLSPRITE;
   Mass 1;
   SeeSound "weapons/shell";
   }
   States
   {
		Spawn:
		TNT1 A 1;
		TNT1 A 0 A_Jump(256,"SpinFast","SpinMedium","SpinSlow");
		SpinFast:
				CAS2 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
				A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				A_SetRoll(roll+frandom(-80,-120));
					}
		SpinMedium:
				CAS2 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
				A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				A_SetRoll(roll+frandom(-25,-90));
					}
		SpinSlow:
				CAS2 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
				A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				A_SetRoll(roll+36);
					}
		Goto Death;
		
		Death:
		  TNT1 I 0 A_SetRoll(0);
		  TNT1 A 0 A_Jump(256,"Case1","Case2","Case3","Case4","Case5","Case6","Case7","Case8","Case9","Case10");
		Case1:
			CAS2 K 1;
			Goto Rest;
		Case2:
			CAS2 L 1;
			Goto Rest;
		Case3:
			CAS2 M 1;
			Goto Rest;
		Case4:
			CAS2 N 1;
			Goto Rest;
		Case5:
			CAS2 O 1;
			Goto Rest;
		Case6:
			CAS2 P 1;
			Goto Rest;
		Case7:
			CAS2 Q 1;
			Goto Rest;
		Case8:
			CAS2 R 1;
			Goto Rest;
		Case9:
			CAS2 S 1;
			Goto Rest;
		Case10:
			CAS2 T 1;
			Goto Rest;
		Rest:
			"####" "###########################################" 2 A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
			"####" "#" -1;
			Stop;
   }
}

Class ShotgunCasingRedLive : ShotgunCasing
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   States
   {
		Spawn:
			CAS2 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
				A_SetRoll(roll+36);
		}
		Goto Death;
		
		Death:
		  TNT1 I 0 A_SetRoll(0);
		  TNT1 A 0 A_Jump(256,"Case1","Case2","Case3","Case4","Case5","Case6","Case7","Case8","Case9","Case10");
		Case1:
			CAS2 K 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellRed_K",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case2:
			CAS2 L 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellRed_L",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case3:
			CAS2 M 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellRed_M",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case4:
			CAS2 N 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellRed_N",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case5:
			CAS2 O 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellRed_O",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case6:
			CAS2 P 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellRed_P",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case7:
			CAS2 Q 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellRed_Q",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case8:
			CAS2 R 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellRed_R",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case9:
			CAS2 S 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellRed_S",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case10:
			CAS2 T 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellRed_T",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Rest:
			"####" "###########################################" 2 A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
			"####" "#" -1;
			Stop;
   }
}

Class ShotgunCasingGreenLive : ShotgunCasing
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   States
   {
		Spawn:
			CAS5 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
				A_SetRoll(roll+36);
		}
		Goto Death;
		
		Death:
		  TNT1 I 0 A_SetRoll(0);
		  TNT1 A 0 A_Jump(256,"Case1","Case2","Case3","Case4","Case5","Case6","Case7","Case8","Case9","Case10");
		Case1:
			CAS5 K 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellGreen_K",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case2:
			CAS5 L 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellGreen_L",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case3:
			CAS5 M 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellGreen_M",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case4:
			CAS5 N 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellGreen_N",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case5:
			CAS5 O 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellGreen_O",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case6:
			CAS5 P 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellGreen_P",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case7:
			CAS5 Q 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellGreen_Q",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case8:
			CAS5 R 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellGreen_R",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case9:
			CAS5 S 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellGreen_S",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case10:
			CAS5 T 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellGreen_T",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Rest:
			"####" "###########################################" 2 A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
			"####" "#" -1;
			Stop;
   }
}

Class ShotgunCasingOrangeLive : ShotgunCasing
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   States
   {
		Spawn:
			CAS6 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
				A_SetRoll(roll+36);
		}
		Goto Death;
		
		Death:
		  TNT1 I 0 A_SetRoll(0);
		  TNT1 A 0 A_Jump(256,"Case1","Case2","Case3","Case4","Case5","Case6","Case7","Case8","Case9","Case10");
		Case1:
			CAS6 K 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellOrange_K",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case2:
			CAS6 L 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellOrange_L",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case3:
			CAS6 M 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellOrange_M",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case4:
			CAS6 N 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellOrange_N",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case5:
			CAS6 O 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellOrange_O",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case6:
			CAS6 P 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellOrange_P",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case7:
			CAS6 Q 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellOrange_Q",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case8:
			CAS6 R 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellOrange_R",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case9:
			CAS6 S 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellOrange_S",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Case10:
			CAS6 T 1;
			TNT1 A 0 A_SpawnItemEx("LiveShellOrange_T",0,0,0,0,0,0,0,SXF_CLIENTSIDE,0);
			Stop;
		Rest:
			"####" "###########################################" 2 A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
			"####" "#" -1;
			Stop;
   }
}

// For different roll sprite angles
Class ShotgunCasingSSG: ShotgunCasing
{
 States
   {
    
		Spawn:
			CAS2 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
				A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				A_SetRoll(roll-36);
		}
		Goto Death;
}}

Class ShotgunCasing2 : ShotgunCasing
{
   States
   {
		Spawn:
				TNT1 A 0 A_Jump(256,"SpinFast","SpinMedium","SpinSlow");
		SpinFast:
				CAS5 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
				A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				A_SetRoll(roll+frandom(-80,-120));
					}
		SpinMedium:
				CAS5 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
				A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				A_SetRoll(roll+frandom(-25,-90));
					}
		SpinSlow:
				CAS5 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
				A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				A_SetRoll(roll+36);
					}
		
		Goto Death;
		
		Death:
		  TNT1 I 0 A_SetRoll(0);
		  TNT1 A 0 A_Jump(256,"Case1","Case2","Case3","Case4","Case5","Case6","Case7","Case8","Case9","Case10");
		Case1:
			CAS5 K 1;
			Goto Rest;
		Case2:
			CAS5 L 1;
			Goto Rest;
		Case3:
			CAS5 M 1;
			Goto Rest;
		Case4:
			CAS5 N 1;
			Goto Rest;
		Case5:
			CAS5 O 1;
			Goto Rest;
		Case6:
			CAS5 P 1;
			Goto Rest;
		Case7:
			CAS5 Q 1;
			Goto Rest;
		Case8:
			CAS5 R 1;
			Goto Rest;
		Case9:
			CAS5 S 1;
			Goto Rest;
		Case10:
			CAS5 T 1;
			Goto Rest;
		Rest:
			"####" "###########################################" 2 A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
			"####" "#" -1;
			Stop;
   }
}

Class ShotgunCasing3 : ShotgunCasing
{
   States
   {
		Spawn:
				TNT1 A 0 A_Jump(256,"SpinFast","SpinMedium","SpinSlow");
		SpinFast:
				CAS6 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
				A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				A_SetRoll(roll+frandom(-80,-120));
					}
		SpinMedium:
				CAS6 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
				A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				A_SetRoll(roll+frandom(-25,-90));
					}
		SpinSlow:
				CAS6 ABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJABCDEFGHIJ 2 {
				A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				A_SetRoll(roll+36);
					}
		
		Goto Death;
		
		Death:
		  TNT1 I 0 A_SetRoll(0);
		  TNT1 A 0 A_Jump(256,"Case1","Case2","Case3","Case4","Case5","Case6","Case7","Case8","Case9","Case10");
		Case1:
			CAS6 K 1;
			Goto Rest;
		Case2:
			CAS6 L 1;
			Goto Rest;
		Case3:
			CAS6 M 1;
			Goto Rest;
		Case4:
			CAS6 N 1;
			Goto Rest;
		Case5:
			CAS6 O 1;
			Goto Rest;
		Case6:
			CAS6 P 1;
			Goto Rest;
		Case7:
			CAS6 Q 1;
			Goto Rest;
		Case8:
			CAS6 R 1;
			Goto Rest;
		Case9:
			CAS6 S 1;
			Goto Rest;
		Case10:
			CAS6 T 1;
			Goto Rest;
		Rest:
			"####" "###########################################" 2 A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
			"####" "#" -1;
			Stop;
   }
}

Class EmptyClipMP40 : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   Default
   {Height 12;
   Radius 9;
   Speed 4;
   Scale 0.125;
   +DOOMBOUNCE;
   - NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   Mass 1;
   SeeSound "weapons/smallclip";
   }
   States
   {
   Spawn:
      CLP4 A 1;
	  
	  Exist:
      CLP4 ABCDEFGH 4;
      Goto Spawn+1;
   Death:
      CLP4 G 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
      loop;
	  
   	Disappear:
	  TNT1 A 1;
	  Stop;
   }
}

Class EmptyClip : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
  Default
  {Height 12;
   Radius 9;
   Speed 4;
   Scale 1.01;
   +DOOMBOUNCE;
   - NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   Mass 1;
   SeeSound "weapons/largemagdrop";
   }
   States
   {
   Spawn:
      ECLI A 1;
	  
	  Exist:
      ECLI ABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGH 4;
      Stop;
   Death:
      ECLI G 900;
	  TNT1 A 0 A_JumpIfInventory("CasingsJanitor", 1, "Disappear");
      loop;
	  
  Disappear:
	  TNT1 A 1;
	  Stop;
   }
}

Class EmptyBrassMP40 : Actor
{
	bool smoking;
	override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	
	Default
	{
	   Height 2;
	   Radius 2;
	   Speed 8;
	   Scale 0.1;
	   +DOOMBOUNCE;
	   - NOGRAVITY;
	   +WINDTHRUST;
	   +CLIENTSIDEONLY;
	   +MOVEWITHSECTOR;
	   +MISSILE;
	   +NOBLOCKMAP;
	   -DROPOFF;
	   +NOTELEPORT;
	   +FORCEXYBILLBOARD;
	   +NOTDMATCH;
	   +GHOST;
	   +RollSprite
	   BounceCount 4;
	   Mass 1;
	   SeeSound "weapons/smcasebounce";
	}
   States
   {
	   Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(16, "SpawnSmoking");
			CAS7 ABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGH 2 {
				A_SetRoll(roll+45);
			}
			Goto Death;
		SpawnSmoking:
			TNT1 A 0 { smoking = 1;}
			CAS7 ABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGH 2 {
				A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				A_SetRoll(roll+45);
			}
			Goto Death;
		Death:
			  TNT1 A 0 A_SetRoll(0);
			  TNT1 A 0 A_Jump(256,"Case1","Case2","Case3","Case4","Case5","Case6","Case7","Case8");
			Case1:
				CAS7 K 1;
				Goto Rest;
			Case2:
				CAS7 L 1;
				Goto Rest;
			Case3:
				CAS7 M 1;
				Goto Rest;
			Case4:
				CAS7 N 1;
				Goto Rest;
			Case5:
				CAS7 O 1;
				Goto Rest;
			Case6:
				CAS7 P 1;
				Goto Rest;
			Case7:
				CAS7 Q 1;
				Goto Rest;
			Case8:
				CAS7 R 1;
				Goto Rest;
			Rest:
				"####" "#" 0 A_JumpIf(smoking == 1, "Rest2");
				"####" "###########################################" 2;
				"####" "#" -1;
				Stop;
			Rest2:
				"####" "###########################################" 2 A_SpawnItemEx("CasingSmoke",frandom(0.3,0.2),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				"####" "#" -1;
				Stop;
		
		 Disappear:
			 TNT1 A 1;
			 Stop;
		 
	Splash:
	TNT1 A 0;
	TNT1 A 0 A_SpawnItem("UnderwaterEmptyBrass");
	Stop;
   }
}

Class EmptyBrassDeagle : EmptyBrassMP40 
{
   Default
   {Scale 0.15;       
   Speed 9;
   }           
}

Class EmptyBrassMagnum : EmptyBrassMP40 
{
   Default
   {Scale 0.16;       
   Speed 9;   
   }              
}

Class EmptyBrassPistol : EmptyBrassMP40 
{
  Default
  { Speed 10;}               
}

Class EmptyBrassSMG : EmptyBrassMP40 
{
  Default
  { Speed 10;}               
}

Class EmptyRocketChamber : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
  Default
  {Height 12;
   Radius 9;
   Speed 4;
   Scale 1.3;
   +DOOMBOUNCE;
   - NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   Mass 1;
   SeeSound "weapons/barrelpain";}
   States
   {
   Spawn:
      TNT1 A 0;
      
	  Exist:
      TNT1 A 7 A_PlaySound("NULL");
      RCSE ABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGH 4;
      Stop;
   Death:
      RCSE G 900;
	 TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("ToggleBulletJanitor")==1,"Disappear");
      loop;
   Disappear:
     TNT1 A 1;
     Stop;
   }
}

Class EmptyLMGMag : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   Default
   {Height 12;
   Radius 9;
   Speed 4;
   Scale 0.44;
   +DOOMBOUNCE;
   - NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   Mass 1;
   SeeSound "weapons/largemagdrop";
   }
   States
   {
   Spawn:
      TNT1 A 0;
      
	  Exist:
      TNT1 A 7 A_PlaySound("NULL");
      DRM9 ABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGH 4;
      Stop;
   Death:
      DRM9 A 900;
	 TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("ToggleBulletJanitor")==1,"Disappear");
      loop;
   Disappear:
     TNT1 A 1;
     Stop;
   }
}

Class EmptyASGDrum : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   Default
   {Height 12;
   Radius 9;
   Speed 4;
   Scale 0.57;
   +DOOMBOUNCE;
   - NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   Mass 1;
   SeeSound "weapons/largemagdrop";
   }
   States
   {
   Spawn:
      TNT1 A 0;
      
	  Exist:
      TNT1 A 7 A_PlaySound("NULL");
      DRM8 ABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGH 4;
      Stop;
   Death:
      DRM8 A 900;
	 TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("ToggleBulletJanitor")==1,"Disappear");
      loop;
   Disappear:
     TNT1 A 1;
     Stop;
   }
}

Class EmptyHMGDrum : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   Default
   {Height 12;
   Radius 9;
   Speed 4;
   Scale 0.65;
   +DOOMBOUNCE;
   - NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   Mass 1;
   SeeSound "weapons/largemagdrop";}
   States
   {
   Spawn:
      TNT1 A 0;
      
	  Exist:
      TNT1 A 7 A_PlaySound("NULL");
      DRM7 ABCDEFGHABCDEFGHABCDEFGHABCDEFGHABCDEFGH 4;
      Stop;
   Death:
	  TNT1 A 0 A_Jump(128, "Death2");
      DRM7 A 900;
	 TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("ToggleBulletJanitor")==1,"Disappear");
      loop;
   Death2:
      DRM7 I 900;
	 TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("ToggleBulletJanitor")==1,"Disappear");
      loop;
	  
   Disappear:
     TNT1 A 1;
     Stop;
   }
}


Class EmptyCell : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
  Default
  { Height 12;
   Radius 9;
   Speed 4;
   Scale 0.38;
   +DOOMBOUNCE;
   - NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   +ROLLSPRITE;
   Mass 1;
   SeeSound "weapons/largemagdrop";
   }
   States
   {
	   Spawn:
			ECEL ABCDEFG 3 {
				A_SetRoll(roll+36, SPF_INTERPOLATE);
				A_SpawnItemEx("CellSmoke",frandom(-1,1),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
			}
			lOOP;
		Death:
			  TNT1 A 0 A_SetRoll(0);
			  TNT1 A 0 A_Jump(256,"Case1","Case2","Case3");
			Case1:
				ECEL B 1;
				Goto Rest;
			Case2:
				ECEL D 1;
				Goto Rest;
			Case3:
				ECEL E 1;
				Goto Rest;
			Rest:
				"####" "###########################################" 2 A_SpawnItemEx("CellSmoke",frandom(-1,1),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				"####" "#" -1;
				Stop;
	  
   }
}


Class EmptyCellOL : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
  Default
  { Height 12;
   Radius 9;
   Speed 4;
   Scale 0.38;
   +DOOMBOUNCE;
   - NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   +ROLLSPRITE;
   Mass 1;
   SeeSound "weapons/largemagdrop";
   }
   States
   {
	   Spawn:
			ECEL ABCDEFG 3 {
				A_SetRoll(roll+36, SPF_INTERPOLATE);
				A_SpawnItemEx("CellSmoke",frandom(-1,1),random(0,-1.0),0,0,0,frandom(0.5,0.1),0,SXF_CLIENTSIDE,0);
				A_PlaySound("BEPBEP");
			}
			lOOP;
		Death:
			  TNT1 A 0 A_SetRoll(0);
			  TNT1 A 0 A_Jump(256,"Case1","Case2","Case3");
			Case1:
				ECEL B 1;
				Goto Rest1;
			Case2:
				ECEL D 1;
				Goto Rest2;
			Case3:
				ECEL E 1;
				Goto Rest3;
			Rest1:
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL B 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					goto Explode;
			Rest2:
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL D 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					goto Explode;
			Rest3:
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					TNT1 A 0 A_PlaySound("BEPBEP");
					ECEL E 10 A_SpawnItem("BarrelExplosionSmokeColumn");
					
	  Explode:
			TNT1 A 0 A_PlaySound("BEPBEP");
			TNT1 A 0 A_PlaySound("BEEEP");
			TNT1 A 5;
			TNT1 A 0 A_Stop;
			TNT1 A 0 A_StopSound(6);
			TNT1 A 0;
			TNT1 A 0; 
			TNT1 A 0 A_Explode(200,200, XF_HURTSOURCE);
			TNT1 A 0 A_SpawnItemEx ("HandGrenadeExplosion",0,0,30,0,0,0,0,SXF_NOCHECKPOSITION,0);
			TNT1 A 0 A_SpawnItem ("BigRicoChet", 0, -15);
			TNT1 A 0 A_SpawnProjectile("BigRicoChet");
			TNT1 A 0 A_SpawnItem("WhiteShockwave");
			TNT1 A 0 A_SpawnItemEx ("DetectFloorCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			TNT1 A 0 A_SpawnItemEx ("DetectCeilCrater",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			TNT1 A 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			TNT1 A 0 A_SpawnItemEx ("BarrelKaboom",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			TNT1 A 0 A_SpawnItemEx ("NewGroundExplosionSmoke",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0);
			TNT1 AAAAAAA 0 A_SpawnProjectile ("ExplosionFlames", 0, 0, random (0, 360), 2, random (0, 360));
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnProjectile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 180));
			TNT1 AAAAAA 0 A_SpawnProjectile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 180));
			EXPL A 0 Radius_Quake (2, 24, 0, 15, 0);
			BEXP B 0 BRIGHT A_Scream;
			TNT1 A 0 A_ALertMonsters;
			TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_SpawnProjectile ("ShrapnelParticle2", 0, 0, random (0, 360), 2, random (5, 90));
			TNT1 A 0 A_Playsound("excavator/explode");
			TNT1 A 0 A_PlaySound("FAREXPL", 3);
			TNT1 A 0 A_SpawnItem("BarrelExplosionSmokeColumn");
			TNT1 A 0 A_SpawnItem("FragGrenadeExplosionSmoke");
			Stop;
	  
   }
}


Class RocketCaseSpawn : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	Default
  {Speed 20;
	PROJECTILE;
	+NOCLIP;
	+CLIENTSIDEONLY;
  }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("EmptyRocketChamber",0,0,random(-80,-100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(40,60));
		Stop;
	}
} 

Class PlasmaCaseSpawn : RifleCaseSpawn
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 0 A_SpawnProjectile("EmptyCell",0,0,random(-80,-100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(40,60));
		Stop;
	}
}

Class PlasmaCaseOLSpawn : RifleCaseSpawn
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	States
	{
	Spawn:
        TNT1 A 0;
		//TNT1 A 1 A_SpawnItemEX("EmptyCellOL",2,12,0,frandom(2,6),frandom(20,35),-1,frandom(0,60));
		TNT1 A 0 A_SpawnProjectile("EmptyCellOL",0,0,random(-200,-250),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(30,40));
		Stop;
	}
}


 //the black metal piece that holds the bullets on belt! " -
                       // Dragonball1957
					   
Class MinigunBeltPiece : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
   Default
   {Height 2;
   Radius 2;
   Speed 8;
   Scale 0.25;
   +DOOMBOUNCE;
   - NOGRAVITY;
   +WINDTHRUST;
   +CLIENTSIDEONLY;
   +MOVEWITHSECTOR;
   +MISSILE;
   +NOBLOCKMAP;
   -DROPOFF;
   +NOTELEPORT;
   +FORCEXYBILLBOARD;
   +NOTDMATCH;
   +GHOST;
   -DONTSPLASH;
   -CANBOUNCEWATER;
   +FLOORCLIP;
   +THRUACTORS;
   Mass 4;
   SeeSound "weapons/casing";
   }
   States
   {
    Spawn:
      TNT1 A 0;
      
	  Exist:
      CL1N ABCDEFGH 3 A_JumpIf(waterlevel > 1, "Splash");
      Loop;

   Death:
      TNT1 A 0 A_StopSound(CHAN_AUTO);
	  TNT1 A 0 A_PlaySound("decasebounce");
      LCPJ A 0 A_Jump(256,"Rest1","Rest2");
      Goto Rest1;
    Rest1:
      CL1N F 900;
     TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("ToggleBulletJanitor")==1,"Disappear") ;
		Loop;
    Rest2:
      CL1N B 900;
     TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("ToggleBulletJanitor")==1,"Disappear") ;
		Loop;
	
     Disappear:
     TNT1 A 1;
     Stop;
	 
	Splash:
	TNT1 A 0;
	Stop;
   }
}

Class MiniBeltPieceSpawn : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	Default
  {Speed 20;
	PROJECTILE;
	+NOCLIP;
	+CLIENTSIDEONLY;
  }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("MinigunBeltPiece",-2,0,random(80,100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(40,80));
		Stop;
	}
}


Class MiniBeltPieceSpawn2 : Actor
{
		override void BeginPlay(void)
	{
		ChangeStatNum(STAT_PB_BULLETS);
		NashGoreStatics.QueueCasings();
		Super.BeginPlay();
	}
	Default
  {Speed 20;
	PROJECTILE;
	+NOCLIP;
	+CLIENTSIDEONLY;
  }
	States
	{
	Spawn:
        TNT1 A 0;
		TNT1 A 1 A_SpawnProjectile("MinigunBeltPiece",-2,0,-random(80,100),CMF_AIMDIRECTION|CMF_ABSOLUTEPITCH|CMF_OFFSETPITCH|CMF_BADPITCH|CMF_SAVEPITCH,random(40,80));
		Stop;
	}
}