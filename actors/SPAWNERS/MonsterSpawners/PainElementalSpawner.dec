Actor PainElementalSpawner replaces PainElemental
{
	//$Title Random Pain Elemental Spawner
	//$Sprite UDBGO0
	Scale 0.6 //So the editor sprite isn't massive.
	RenderStyle "Translucent"
	+LOOKALLAROUND
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_SpawnItemEx("PainElementalPackSpawner",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288,0,tid)
		TNT1 A 1 ACS_NamedExecuteAlways("SpawnerScript",0)
	Deciding:
		TNT1 A 1
		loop
	DiceRandom:
		TNT1 A 0 A_RadiusGive("IsPlayingChaoticRandom", 290, RGF_GIVESELF | RGF_MONSTERS | RGF_ITEMS | RGF_NOSIGHT, 1)
		Stop	
	DiceMain:	// Default spawn preset with a slight difficulty curve. Tier 1-4 Monster presets are contained here to provide more variety.
		EarlyLevelMob:
			TNT1 A 0 A_Jump(60,"SufferingElementalPack")
			TNT1 A 0 A_Jump(256,"PainElementalPack")
		LowLevelMob:
			TNT1 A 0 A_Jump(77,"SufferingElementalPack")
			TNT1 A 0 A_Jump(256,"PainElementalPack")	
		MidLevelMob:
			TNT1 A 0 A_Jump(96,"SufferingElementalPack")
			TNT1 A 0 A_Jump(256,"PainElementalPack")
		HighLevelMob:
			TNT1 A 0 A_Jump(80,"SufferingElementalPack")
			TNT1 A 0 A_Jump(256,"PainElementalPack")
	DiceProg:	// Progressive spawn preset enforces strict spawning rules by excluding monsters until they are presented in later levels.
		DiceTier1:
			TNT1 A 0 A_Jump(256,"PainElementalPack")
		DiceTier2:
			TNT1 A 0 A_Jump(64,"SufferingElementalPack")
			TNT1 A 0 A_Jump(256,"PainElementalPack")
		DiceTier3:
			TNT1 A 0 A_Jump(96,"SufferingElementalPack")
			TNT1 A 0 A_Jump(256,"PainElementalPack")
		DiceTier4:
			TNT1 A 0 A_Jump(96,"SufferingElementalPack")
			TNT1 A 0 A_Jump(256,"PainElementalPack")
		DiceDeathWish:
			TNT1 A 0 A_Jump(128,"SufferingElementalPack")
			TNT1 A 0 A_Jump(256,"PainElementalPack")
	SufferingElementalPack:
		TNT1 A 0 A_RadiusGive("IsSufferingElemental", 386, RGF_GIVESELF | RGF_MONSTERS | RGF_ITEMS | RGF_NOSIGHT, 1)
		Stop
	PainElementalPack:
		ReplaceVanilla:
		ReplaceVanilla:
		
		TNT1 A 0 A_RadiusGive("IsPainElemental", 386, RGF_GIVESELF | RGF_MONSTERS | RGF_ITEMS | RGF_NOSIGHT, 1)
		Stop
	}
}

Actor PainElementalPackSpawner : Demonpickup
{
	+LOOKALLAROUND
	States
	{
	Spawn: 	// Checks for the tokens distributed above and spawns the correct monster accordingly
		TNT1 A 3
		TNT1 A 0 A_JumpIfInventory("IsPlayingChaoticRandom", 1, "RandomSpawn")
		TNT1 A 0 A_JumpIfInventory("IsSufferingElemental", 1, "SpawnSufferingElemental")
		TNT1 A 0 A_JumpIfInventory("IsPainElemental", 1, "SpawnPainElemental")
		Loop
	RandomSpawn:
		TNT1 A 0 A_Jump(256, "SpawnPainElemental", "SpawnSufferingElemental")
	SpawnPainElemental:
		ReplaceToggle:
		TNT1 A 0 A_SpawnItemEx("PB_PainElemental",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288,0,tid)
		Stop
	SpawnSufferingElemental:
		TNT1 A 1 ACS_NamedExecuteAlways("ToggleSufferElemental",0)
		TNT1 A 0 A_SpawnItemEx("PB_SufferingElemental",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288,0,tid)
		Stop
	}
}