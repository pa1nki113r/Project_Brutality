Actor ImpSpawner replaces DoomImp
{
	+LOOKALLAROUND
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 0 A_SpawnItemEx("ImpPackSpawner",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288,0,tid)
		TNT1 A 1 ACS_NamedExecuteAlways("StarterPackDynamicProgressionFix",0)
		TNT1 A 1 ACS_NamedExecuteAlways("SpawnerScript",0)
	Deciding:
		TNT1 A 1
		loop
	DiceRandom:
		TNT1 A 0 A_RadiusGive("IsPlayingChaoticRandom", 290, RGF_GIVESELF | RGF_MONSTERS | RGF_ITEMS | RGF_NOSIGHT, 1)
		Stop
	DiceMain:	// Default spawn preset with a slight difficulty curve. Tier 1-4 Monster presets are contained here to provide more variety.
	EarlyLevelMob:
	LowLevelMob:
	MidLevelMob:
	HighLevelMob:	// Relatively even spawn chances across imps. Since there are so many of them, having a progression is pointless.
		TNT1 A 0 A_Jump(104,"MixedBrownImpPack")
		TNT1 A 0 A_Jump(100,"NormalImpPack")
		TNT1 A 0 A_Jump(100,"ImpVariant1Pack")
		TNT1 A 0 A_Jump(100,"ImpVariant2Pack")
		TNT1 A 0 A_Jump(100,"ImpVariant3Pack")
		TNT1 A 0 A_Jump(114,"SavageImpPack")
		TNT1 A 0 A_Jump(100,"STDarkImpPack")
		TNT1 A 0 A_Jump(100,"NamiDarkImpPack")
		TNT1 A 0 A_Jump(86,"VoidDarkImpPack")
		TNT1 A 0 A_Jump(72,"NetherDarkImpPack")
		TNT1 A 0 A_Jump(256,"MixedDarkImpPack")
	DiceProg:	// Progressive spawn preset enforces strict spawning rules by excluding monsters until they are presented in later levels.
		DiceTier1:
			TNT1 A 0 A_Jump(104,"NormalImpPack")
			TNT1 A 0 A_Jump(64,"ImpVariant2Pack")
			TNT1 A 0 A_Jump(66,"ImpVariant3Pack")
			TNT1 A 0 A_Jump(256,"MixedBrownImpPack")
		DiceTier2:
			TNT1 A 0 A_Jump(104,"NormalImpPack")
			TNT1 A 0 A_Jump(176,"ImpVariant1Pack")
			TNT1 A 0 A_Jump(64,"ImpVariant2Pack")
			TNT1 A 0 A_Jump(66,"ImpVariant3Pack")
			TNT1 A 0 A_Jump(256,"MixedBrownImpPack")
		DiceTier3:
			TNT1 A 0 A_Jump(100,"SavageImpPack")
			TNT1 A 0 A_Jump(64,"NormalImpPack")
			TNT1 A 0 A_Jump(64,"ImpVariant1Pack")
			TNT1 A 0 A_Jump(64,"ImpVariant2Pack")
			TNT1 A 0 A_Jump(64,"ImpVariant3Pack")
			TNT1 A 0 A_Jump(256,"MixedBrownImpPack")
		DiceTier4:
			TNT1 A 0 A_Jump(96,"MixedDarkImpPack")
			TNT1 A 0 A_Jump(24,"NormalImpPack")
			TNT1 A 0 A_Jump(24,"ImpVariant1Pack")
			TNT1 A 0 A_Jump(16,"ImpVariant2Pack")
			TNT1 A 0 A_Jump(16,"ImpVariant3Pack")
			TNT1 A 0 A_Jump(48,"SavageImpPack")
			TNT1 A 0 A_Jump(96,"STDarkImpPack")
			TNT1 A 0 A_Jump(96,"NamiDarkImpPack")
			TNT1 A 0 A_Jump(80,"VoidDarkImpPack")
			TNT1 A 0 A_Jump(256,"MixedBrownImpPack")
		DiceDeathWish:	//Not really in the mood to calculate this yet. Just bumped a couple numbers up
			TNT1 A 0 A_Jump(96,"MixedDarkImpPack")
			TNT1 A 0 A_Jump(24,"NormalImpPack")
			TNT1 A 0 A_Jump(24,"ImpVariant1Pack")
			TNT1 A 0 A_Jump(20,"ImpVariant2Pack")
			TNT1 A 0 A_Jump(20,"ImpVariant3Pack")
			TNT1 A 0 A_Jump(54,"SavageImpPack")
			TNT1 A 0 A_Jump(96,"STDarkImpPack")
			TNT1 A 0 A_Jump(96,"NamiDarkImpPack")
			TNT1 A 0 A_Jump(80,"VoidDarkImpPack")
			TNT1 A 0 A_Jump(256,"MixedBrownImpPack")			
	MixedDarkImpPack:	// This is where the pack tokens are distributed
		TNT1 A 0 A_RadiusGive("IsMixedDarkImp", 386, RGF_GIVESELF | RGF_MONSTERS | RGF_ITEMS | RGF_NOSIGHT, 1)
		Stop
	NetherDarkImpPack:
		TNT1 A 0 A_RadiusGive("IsNetherDarkImp", 386, RGF_GIVESELF | RGF_MONSTERS | RGF_ITEMS | RGF_NOSIGHT, 1)
		Stop
	VoidDarkImpPack:
		TNT1 A 0 A_RadiusGive("IsVoidDarkImp", 386, RGF_GIVESELF | RGF_MONSTERS | RGF_ITEMS | RGF_NOSIGHT, 1)
		Stop
	NamiDarkImpPack:
		TNT1 A 0 A_RadiusGive("IsNamiDarkImp", 386, RGF_GIVESELF | RGF_MONSTERS | RGF_ITEMS | RGF_NOSIGHT, 1)
		Stop
	STDarkImpPack:
		TNT1 A 0 A_RadiusGive("IsSTDarkImp", 386, RGF_GIVESELF | RGF_MONSTERS | RGF_ITEMS | RGF_NOSIGHT, 1)
		Stop
	SavageImpPack:
		TNT1 A 0 A_RadiusGive("IsSavageImp", 386, RGF_GIVESELF | RGF_MONSTERS | RGF_ITEMS | RGF_NOSIGHT, 1)
		Stop
	MixedBrownImpPack:
		TNT1 A 0 A_RadiusGive("IsMixedBrownImp", 386, RGF_GIVESELF | RGF_MONSTERS | RGF_ITEMS | RGF_NOSIGHT, 1)
		Stop
	ImpVariant3Pack:
		TNT1 A 0 A_RadiusGive("IsImpVariant3", 386, RGF_GIVESELF | RGF_MONSTERS | RGF_ITEMS | RGF_NOSIGHT, 1)
		Stop
	ImpVariant2Pack:
		TNT1 A 0 A_RadiusGive("IsImpVariant2", 386, RGF_GIVESELF | RGF_MONSTERS | RGF_ITEMS | RGF_NOSIGHT, 1)
		Stop
	ImpVariant1Pack:
		TNT1 A 0 A_RadiusGive("IsImpVariant1", 386, RGF_GIVESELF | RGF_MONSTERS | RGF_ITEMS | RGF_NOSIGHT, 1)
		Stop
	NormalImpPack:
		ReplaceBrutalOnly:
		ReplaceVanilla:
		ReplaceTraditional:
		TNT1 A 0 A_RadiusGive("IsNormalImp", 386, RGF_GIVESELF | RGF_MONSTERS | RGF_ITEMS | RGF_NOSIGHT, 1)
		Stop
	}
}

Actor ImpPackSpawner : Demonpickup
{
	+LOOKALLAROUND
	renderstyle none
	States
	{
	Spawn: 	// Checks for the tokens distributed above and spawns the correct monster accordingly
		TNT1 A 3
		TNT1 A 0 A_JumpIfInventory("IsPlayingChaoticRandom", 1, "RandomSpawn")
		TNT1 A 0 A_JumpIfInventory("IsNetherDarkImp", 1, "SpawnNetherDarkImp")
		TNT1 A 0 A_JumpIfInventory("IsVoidDarkImp", 1, "SpawnNetherDarkImp")
		TNT1 A 0 A_JumpIfInventory("IsNamiDarkImp", 1, "SpawnVoidDarkImp")
		TNT1 A 0 A_JumpIfInventory("IsSTDarkImp", 1, "SpawnSTDarkImp")
		TNT1 A 0 A_JumpIfInventory("IsMixedDarkImp", 1, "SpawnMixedDarkImp")
		TNT1 A 0 A_JumpIfInventory("IsSavageImp", 1, "SpawnSavageImp")	
		TNT1 A 0 A_JumpIfInventory("IsImpVariant3", 1, "SpawnImpVariant3")
		TNT1 A 0 A_JumpIfInventory("IsImpVariant2", 1, "SpawnImpVariant2")
		TNT1 A 0 A_JumpIfInventory("IsImpVariant1", 1, "SpawnImpVariant1")
		TNT1 A 0 A_JumpIfInventory("IsNormalImp", 1, "SpawnImpNormal")
		TNT1 A 0 A_JumpIfInventory("IsMixedBrownImp", 1, "SpawnMixedBrownImp")
		Loop
	RandomSpawn:
		TNT1 A 0 A_Jump(256, "SpawnImpNormal", "SpawnImpVariant1", "SpawnImpVariant2", "SpawnImpVariant3", "SpawnMixedBrownImp", "SpawnMixedBrownImp", "SpawnSavageImp", "SpawnMixedDarkImp", "SpawnSTDarkImp", "SpawnNamiDarkImp", "SpawnVoidDarkImp", "SpawnNetherDarkImp")
	SpawnImpNormal:
		ReplaceToggle:
		//TNT1 A 0 A_SpawnItemEx("PB_ZombieMan",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288,0,tid)
		TNT1 A 0 A_SpawnItemEx("Imp",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288,0,tid)
		Stop
	SpawnImpVariant1:
		TNT1 A 1 ACS_NamedExecuteAlways("ToggleBrownImps",0)
		TNT1 A 0 A_SpawnItemEx("DNImpVariant1",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288,0,tid)
		Stop
	SpawnImpVariant2:
		TNT1 A 1 ACS_NamedExecuteAlways("ToggleBrownImps",0)
		TNT1 A 0 A_SpawnItemEx("DNImpVariant2",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288,0,tid)
		Stop
	SpawnImpVariant3:
		TNT1 A 1 ACS_NamedExecuteAlways("ToggleBrownImps",0)
		TNT1 A 0 A_SpawnItemEx("DNImpVariant3",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288,0,tid)
		Stop
	SpawnMixedBrownImp:	
		TNT1 A 0 A_Jump(64,"SpawnImpVariant1")
		TNT1 A 0 A_Jump(64,"SpawnImpVariant2")
		TNT1 A 0 A_Jump(64,"SpawnImpVariant3")
		TNT1 A 0 A_Jump(256,"SpawnImpNormal")
	SpawnSavageImp:
		TNT1 A 1 ACS_NamedExecuteAlways("ToggleSavageImps",0)
		TNT1 A 0 A_SpawnItemEx("SavageImp",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288,0,tid)
		Stop
	SpawnMixedDarkImp:
		TNT1 A 0 A_Jump(64,"SpawnVoidDarkImp")
		TNT1 A 0 A_Jump(64,"SpawnNetherDarkImp")
		TNT1 A 0 A_Jump(64,"SpawnNamiDarkImp")
		TNT1 A 0 A_Jump(256,"SpawnSTDarkImp")	
	SpawnSTDarkImp:
		TNT1 A 1 ACS_NamedExecuteAlways("ToggleDarkImps",0)
		TNT1 A 0 A_SpawnItemEx("STDarkImp",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288,0,tid)
		Stop
	SpawnNamiDarkImp:
		TNT1 A 1 ACS_NamedExecuteAlways("ToggleDarkImps",0)
		TNT1 A 0 A_SpawnItemEx("NamiDarkImp",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288,0,tid)
		Stop
	SpawnVoidDarkImp:
		TNT1 A 1 ACS_NamedExecuteAlways("ToggleDarkImps",0)
		TNT1 A 0 A_SpawnItemEx("VoidDarkImp",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288,0,tid)
		Stop
	SpawnNetherDarkImp:
		TNT1 A 1 ACS_NamedExecuteAlways("ToggleDarkImps",0)
		TNT1 A 0 A_SpawnItemEx("NetherDarkImp",0,0,0,0,0,0,0,SXF_TRANSFERSPECIAL | SXF_TRANSFERAMBUSHFLAG | SXF_TRANSFERPOINTERS | 288,0,tid)
		Stop
	}
}