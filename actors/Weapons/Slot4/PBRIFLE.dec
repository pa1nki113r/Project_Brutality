Actor Reloading : Inventory
{
inventory.maxamount 1
}

Actor ADSMode : Inventory
{
inventory.maxamount 1
}

Actor RifleWasEmpty : Inventory
{
inventory.maxamount 1
}

Actor Unloading : Inventory
{
inventory.maxamount 1
}

//I think we should consider using this (HasUnloaded) as a base for future 
//unloaded weapon tokens, so we don't have to to put inventory.maxamount 1 
//every single damn time. Unless it can cause issues idk, this was a suggestion
//I thought about because I inherited HasUnloaded for the left Carbine 
//unloaded token.
// -JMartinez2098
Actor HasUnloaded : Inventory
{
inventory.maxamount 1
}

Actor HasUnloadedDMR : Inventory
{
inventory.maxamount 1
}

Actor DMRUpgraded : Inventory
{
inventory.maxamount 1
}

Actor UnderBarrelGrenadeLoaded : Inventory
{
inventory.maxamount 1
}


Actor DualWieldingDMRs : Inventory
{
inventory.maxamount 1
}

Actor PB_DMRFireAnimation1: Inventory
{
Inventory.maxamount 1
}
Actor PB_DMRFireAnimation2: Inventory
{
Inventory.maxamount 1
}

Actor FiredSecondary : Inventory
{
inventory.maxamount 1
}

Actor FiredPrimary : Inventory
{
inventory.maxamount 1
}

Actor StopDualWield : Inventory
{
inventory.maxamount 1
}

Actor IsFiringSecondary : Inventory
{
inventory.maxamount 1
}

Actor IsReloading : Inventory
{
inventory.maxamount 1
}

Actor SelectDualWieldRifles: Inventory
{
inventory.maxamount 1
}

Actor SelectRifleGrenade: Inventory
{
inventory.maxamount 1
}

Actor SelectSingleRifle: Inventory
{
inventory.maxamount 1
}

ACTOR HalfTicCounter : Inventory { Inventory.MaxAmount 1 }

//This will be disabled for now due to the HDMR being incomplete.
//This actor can be uncommented when it's completed.
/*Actor RifleUpgrade: Custominventory
{
//$Category Ammunition
	Game Doom
	//SpawnID 9410
	Height 24
	//-COUNTITEM
	+INVENTORY.ALWAYSPICKUP
	+COUNTITEM
	Inventory.Pickupsound "misc/rockboxa"
	Inventory.PickupMessage "You got the DMR Grenade Launcher Upgrade!!!"
	States
	{
	Spawn:
		RWGL ABCDEDCB 2 BRIGHT Light("WeaponUpgradeSpawner")
		Loop
	
    Pickup:
	  TNT1 A 0
	  TNT1 A 0 A_GiveInventory("UnderBarrelGrenadeLoaded", 1)
	  TNT1 A 0 A_GiveInventory("DMRUpgraded", 1)
      Stop
	}
}*/

//Placing the helmet on Doomguy's head
Actor IntroductionSequence : Inventory
{
inventory.maxamount 1
}
Actor RespectRifle : Inventory
{
inventory.maxamount 1
}

ACTOR ADS_Firing_Animation_Token : Inventory { Inventory.MaxAmount 1 }


Actor DMRBarrelHeat: Inventory
{Inventory.maxamount 200}


Actor UpgradeInspect: Inventory
{inventory.maxamount 1}

// --------------------------------------------------------------------------

// UAC DMR

// --------------------------------------------------------------------------
ACTOR Rifle : PB_Weapon
{
	SpawnID 9420
	Weapon.BobRangeX 0.3
	Weapon.BobRangeY 0.5
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 2.4
	Weapon.AmmoUse1 0
	Weapon.AmmoGive1 10
	Weapon.AmmoUse2 0
	Weapon.AmmoGive2 0
	Weapon.AmmoType1 "NewClip"
	Weapon.AmmoType2 "RifleAmmo"
	Inventory.MaxAmount 3
	Inventory.Amount 1
	+FLOORCLIP
	+DONTGIB
	Obituary "%o was shot down by %k's DMR."
    AttackSound "None"
    Inventory.PickupSound "CLIPIN"
	Inventory.Pickupmessage "You got the UAC-30 DMR! (Slot 4)"
	+WEAPON.WIMPY_WEAPON
    +WEAPON.NOAUTOAIM
    +WEAPON.NOALERT
    +WEAPON.NOAUTOFIRE
	+WEAPON.NO_AUTO_SWITCH
    Scale 0.43
	Tag "UAC-30 DMR"
	PB_WeaponBase.UnloaderToken "HasUnloadedDMR"
	Inventory.AltHUDIcon "RIFLA0"
	PB_WeaponBase.respectItem "RespectRifle"
	
	States
	{
		Steady:
		TNT1 A 1
		Goto Ready
		
		InspectUpgrade:
			TNT1 A 0 {
				A_SetCrosshair(5);
				A_GiveInventory("UpgradeInspect");
				A_GiveInventory("PB_LockScreenTilt",1);
				A_PlaySoundEx("weapons/carbine/up", "Auto");
				A_SetCurrentRifleMode("NormalMode");
			}
			R5F4 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			R5F5 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			R5F6 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			R5F7 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			R5F8 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			R5F9 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			R6F1 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			R6F2 ABCDEFGHIJKLMNOP 1 A_DoPBWeaponAction
			Goto Ready3
			
			
		
		Ready:
			H0F0 ABCDE 0 // Load Upgrades sprites into memory
			
			TNT1 A 0 A_GiveInventory("RifleSelected",1)
			TNT1 A 0 PB_RespectIfNeeded
		WeaponRespect:
			TNT1 A 0 A_SetCurrentRifleMode("NormalMode")
			TNT1 A 0 {
				A_SetCrosshair(5);
				A_GiveInventory("RespectRifle");
				A_GiveInventory("PB_LockScreenTilt",1);
				A_PlaySoundEx("weapons/carbine/up", "Auto");
			}
			R0F0 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			R0F1 ABCDEF 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("LIGHTON", "Auto")
			R0F1 GHIJKLMNOPQRS 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			R0F1 TUVWXYZ 1 A_DoPBWeaponAction
			R0F2 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			R0F3 AB 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			R0F3 CDEFGHIJKLM 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			R0F3 NOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			R0F4 ABCDE 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			R0F4 FGHIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("RIFCL_CK", "auto")
			R0F5 ABCDEFGHIJKLMNOPQR 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			R0F5 STUVWXY 1 A_DoPBWeaponAction
			Goto Ready3
		SelectAnimation:
			TNT1 A 0 A_PlaySoundEx("weapons/rifle/up", "Auto")
			TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1, "SelectAnimationDualWield")
			R0F6 ABCD 1 {
				if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F0");}
			}
		Ready3:
			TNT1 A 0 {
				A_TakeInventory("PB_LockScreenTilt",1);
				PB_HandleCrosshair(58);
				}
			TNT1 A 0 A_JumpIf(CountInv("UpgradeInspect") == 0 && CountInv("DMRUpgraded") == 1, "InspectUpgrade")
			TNT1 A 0 A_JumpIf(A_GetCurrentRifleMode() == "NormalMode", "ReallyReady")
			TNT1 A 0 A_JumpIf(A_GetCurrentRifleMode() == "GrenadeMode", "ReadyGrenade")
			TNT1 A 0 A_JumpIf(A_GetCurrentRifleMode() == "DualWieldMode", "ReadyDualWield")
			TNT1 A 0 A_JumpIfInventory("Zoomed",1,"Ready2")
		ReallyReady:
			TNT1 A 0 A_JumpIf(CountInv("UpgradeInspect") == 0 && CountInv("DMRUpgraded") == 1, "InspectUpgrade")
			
			R0F6 E 1 {
				if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F0");}
				
				
				if (CountInv("DMRBarrelHeat") >= 60) {
					A_Gunflash("BarrelSmoke1");
				}
				if (PressingFire() && CountInv("RifleAmmo") > 0){
						return state("Fire");
				}
				return A_DoPBWeaponAction(WRF_ALLOWRELOAD);
			}
			Loop
		BarrelSmoke1:
			TNT1 A 1 {
				A_FireCustomMissile("GunBarrelSmoke", 0, 0, 0, 0, 0, 0);
				A_Takeinventory("DMRBarrelHeat",1);
			}
			Stop
			
		Ready2:
			H0F2 F 0 
			R0F7 F 1 {
				
				if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F2");}
			
				//Updated code for far superior smooth gameplay
				if(GetCvar("pb_toggle_aim_hold")) {
					if(!PressingAltfire() || JustReleased(BT_ALTATTACK)){
						return state("Zoomout");
					}
			
					if (PressingFire() && PressingAltfire() && CountInv("RifleAmmo") > 0){
							return state("Fire2");
					}
					
					
					return A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE);
					
				}
				else {
					if (PressingFire() && CountInv("RifleAmmo") > 0){
						return state("Fire");
					}
					return A_DoPBWeaponAction(WRF_ALLOWRELOAD);
				}
				return state("");
			}
			Loop
		ReadyGrenade:
			R1GF C 1 {
				if (PressingFire() && CountInv("UnderBarrelGrenadeLoaded") > 0){
						return state("Fire");
				}
				return A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOSECONDARY);
			}
			Loop
			
		IdleLeft_Overlay:
			P2SG B 1 {
				// Full-Auto
				if(CountInv("HasUnloadedDMR") == 1) {
					A_SetOverlaySprite(10, "P2SU");
					}
				if(CountInv("LeftRifleAmmo")<=0 && CountInv("RifleAmmo")>0){
					A_GiveInventory("DualFiring",1);
				}
				if(CountInv("DualFiring")==0 || CountInv("RifleAmmo")<=0 || GetCvar("SingleDualFire")==1){
					if(PressingFire() || JustPressed(BT_ATTACK)){
						if(CountInv("LeftRifleAmmo") > 0){
							return state("FireLeft_Overlay");
						}
						else {
							A_PlaySoundEx("weapons/empty", "Auto");
							return state("");
						}
					}
				}
				return state("");
			}
			Loop
		IdleRight_Overlay:
			P2SG A 1 {
				// Full-Auto
				if(CountInv("HasUnloadedDMR") == 1) {
					A_SetOverlaySprite(11, "P2SU");
					}
				if(CountInv("LeftRifleAmmo")>0 && CountInv("RifleAmmo")<=0){
					A_TakeInventory("DualFiring",1);
				}
				if(CountInv("DualFiring")==1 || CountInv("LeftRifleAmmo")<=0){
					if((PressingFire() || JustPressed(BT_ATTACK)) && GetCvar("SingleDualFire")==0){
						if(CountInv("RifleAmmo") > 0){
							return state("FireRight_Overlay");
						}
						else {
							A_PlaySoundEx("weapons/empty", "Auto");
							return state("");
						}
					}
				}
				if((PressingAltFire() || JustPressed(BT_ALTATTACK)) && GetCvar("SingleDualFire")==1){
					if(CountInv("RifleAmmo") > 0){
						return state("FireRight_Overlay");
					}
					else {
						A_PlaySoundEx("weapons/empty", "Auto");
						return state("");
					}
				}
				return state("");
			}
			Loop
	
	
	FireLeft_Overlay:
		R2F4 A 1 BRIGHT {
			A_FireBullets (0.1, 0.1, -1, 22, "HitPuff", FBF_NORANDOM,8192,"Tracer", -2,0);
			A_PlaySoundEx("weapons/rifle", "Weapon");
			A_FireCustomMissile("GunFireSmoke", 0, 0, -4, 0, 0, 0);
			A_FireCustomMissile("RifleCaseSpawn",0,0,-6,4);
			A_AlertMonsters;
			A_ZoomFactor(0.98);
			A_Takeinventory("LeftRifleAmmo",1);
			A_GunFlash;
			A_Overlay(-40,"DualLeftMuzzleFlashHandler");
            PB_WeaponRecoil(-1.4,+0.8);
			}
		R2F4 B 1 BRIGHT {
			A_ZoomFactor(0.99);
            PB_WeaponRecoil(-1.4,+0.8);
			}
		R2F4 C 1 A_ZoomFactor(1.0)
		TNT1 A 0 {
			if(CountInv("LeftRifleAmmo")<=0 || CountInv("RifleAmmo")>0 ){
				A_GiveInventory("DualFiring",1);
			}
		}
		R2F4 DD 1 
		TNT1 A 0 {
			if(CountInv("LeftRifleAmmo")<=0){
				A_GiveInventory("DualFireReload",1);
			}
		}
		Goto IdleLeft_Overlay
		
	FireRight_Overlay:
		R2F5 A 1 BRIGHT {
			A_FireBullets (0.1, 0.1, -1, 22, "HitPuff", FBF_NORANDOM,8192,"Tracer", -2,0);
			A_PlaySoundEx("weapons/rifle", "Weapon");
			A_FireCustomMissile("GunFireSmoke", 0, 0, 4, 0, 0, 0);
			A_FireCustomMissile("RifleCaseSpawn",0,0,6,4);
			A_AlertMonsters;
			A_ZoomFactor(0.98);
			A_Takeinventory("RifleAmmo",1);
			A_GunFlash;
			A_Overlay(-41,"DualRightMuzzleFlashHandler");
            PB_WeaponRecoil(-1.4,-0.8);
			}
		R2F5 B 1 BRIGHT {
			A_ZoomFactor(0.99);
            PB_WeaponRecoil(-1.4,-0.8);
			}
		R2F5 C 1 A_ZoomFactor(1.0)
		TNT1 A 0 {
			if(CountInv("LeftRifleAmmo")>0 || CountInv("RifleAmmo")<=0 ){
				A_TakeInventory("DualFiring",1);
			}
		}
		R2F5 DD 1 
		TNT1 A 0 {
			if(CountInv("RifleAmmo")<=0){
				A_GiveInventory("DualFireReload",1);
			}
		}
		Goto IdleRight_Overlay
		
	DualLeftMuzzleFlashHandler:
		TNT1 A 0 A_Jump(256, "LeftFlash1", "LeftFlash2", "LeftFlash3")
	LeftFlash1:
		MZ12 A 1 BRIGHT
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1", "LeftFlashEnd2", "LeftFlashEnd3", "LeftFlashEnd4")
		stop
	LeftFlash2:
		MZ12 B 1 BRIGHT
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1", "LeftFlashEnd2", "LeftFlashEnd3", "LeftFlashEnd4")
		stop
	LeftFlash3:
		MZ12 C 1 BRIGHT
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1", "LeftFlashEnd2", "LeftFlashEnd3", "LeftFlashEnd4")
		stop
	LeftFlashEnd1:
		MZ12 D 1 BRIGHT
		stop
	LeftFlashEnd2:
		MZ12 E 1 BRIGHT
		stop
	LeftFlashEnd3:
		MZ12 F 1 BRIGHT
		stop
	LeftFlashEnd4:
		MZ12 G 1 BRIGHT
		stop
	
	DualRightMuzzleFlashHandler:
		TNT1 A 0 A_Jump(256, "RightFlash1", "RightFlash2", "RightFlash3")
	RightFlash1:
		MZ13 A 1 BRIGHT
		TNT1 A 0 A_Jump(256, "RightFlashEnd1", "RightFlashEnd2", "RightFlashEnd3", "RightFlashEnd4")
		stop
	RightFlash2:
		MZ13 B 1 BRIGHT
		TNT1 A 0 A_Jump(256, "RightFlashEnd1", "RightFlashEnd2", "RightFlashEnd3", "RightFlashEnd4")
		stop
	RightFlash3:
		MZ13 C 1 BRIGHT
		TNT1 A 0 A_Jump(256, "RightFlashEnd1", "RightFlashEnd2", "RightFlashEnd3", "RightFlashEnd4")
		stop
	RightFlashEnd1:
		MZ13 D 1 BRIGHT
		stop
	RightFlashEnd2:
		MZ13 E 1 BRIGHT
		stop
	RightFlashEnd3:
		MZ13 F 1 BRIGHT
		stop
	RightFlashEnd4:
		MZ13 G 1 BRIGHT
		stop
		
	SelectAnimationDualWield:
		R2FU CD 0
		R2F6 AB 1
		R2F6 CD 1 {
			if(CountInv("DualWieldingDMRs") == 1) {A_SetWeaponSprite("R2FU");}
		}
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/up", "Auto")
	ReadyDualWield:
		P2SU AB 0 //Loads unloaded dual sprites into memory
		TNT1 A 0 {
			A_SetRoll(0);
			PB_HandleCrosshair(58);
			A_TakeInventory("PB_LockScreenTilt",1);
			A_SetFiringRightWeapon(False);
			A_SetFiringLeftWeapon(False);
			A_TakeInventory("DualFiring",1);
			if(CountInv("LeftRifleAmmo") < CountInv("RifleAmmo")){
				A_GiveInventory("DualFiring",1);
			}
			if(CountInv("NewClip")>0){
				if(CountInv("LeftRifleAmmo")<=0){
					A_GiveInventory("DualFireReload",1);
				}
				if(CountInv("RifleAmmo")<=0){
					A_GiveInventory("DualFireReload",1);
				}
			}
			A_Overlay(10, "IdleLeft_Overlay", true);
			A_Overlay(11, "IdleRight_Overlay", true);
			}
	ReadyToFireDualWield:
		TNT1 A 0 A_JumpIf(CountInv("UpgradeInspect") == 0 && CountInv("DMRUpgraded") == 1, "InspectUpgrade")
		TNT1 A 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE)
		Loop
		
	Deselect:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(58);
			A_TakeInventory("PB_LockScreenTilt",1);
			A_ClearOverlays(10,11);
		}
		TNT1 A 0 {	
			//A_Takeinventory("HasUnloadedDMR",1);
			A_Takeinventory("Unloading",1);
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			A_ZoomFactor(1.0);
			A_PlaySoundEx("weapons/changing", "Auto");
			}
		TNT1 A 0 A_JumpIfInventory("GotMeatShield", 1, "GrabEnemy")
        TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs",1,"DeselectAnimationDualWield")
		H0F4 ABCD 0
		R0F9 ABCD 1 {
			if (CountInv("DMRUpgraded") == 1) {
				A_SetWeaponSprite("H0F4");
			}
		}	
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait
	DeselectAnimationDualWield:
		R2FD AB 0
		R2F7 AB 1 {
			if(CountInv("DualWieldingDMRs") == 1) {A_SetWeaponSprite("R2FD");}
		}
		R2F7 CD 1
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait
	WeaponSpecial:
		TNT1 A 0 {
			A_Takeinventory("GoWeaponSpecialAbility",1);
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			A_GiveInventory("PB_LockScreenTilt",1);
			PB_HandleCrosshair(58);
			A_ZoomFactor(1.0);
			A_ClearOverlays(10,11);
			}
		TNT1 A 0 A_JumpIf(CountInv("DMRUpgraded") < 1, "HandleDualWield")
		
		TNT1 A 0 {
			if ((CountInv("SelectSingleRifle") == 1) && A_GetCurrentRifleMode() == "NormalMode") {
				A_TakeInventory("CantWeaponSpecial" ,1 );
				A_Takeinventory("SelectDualWieldRifles",1);
				A_Takeinventory("SelectRifleGrenade",1);
				A_Takeinventory("SelectSingleRifle",1);
				return state("Ready3");
			}
			if ((CountInv("SelectRifleGrenade") == 1) && A_GetCurrentRifleMode() == "GrenadeMode") {
				A_TakeInventory("CantWeaponSpecial" ,1 );
				A_Takeinventory("SelectDualWieldRifles",1);
				A_Takeinventory("SelectRifleGrenade",1);
				A_Takeinventory("SelectSingleRifle",1);
				return state("Ready3");
			}
			if ((CountInv("SelectDualWieldRifles") == 1) && A_GetCurrentRifleMode() == "DualwieldMode") {
				A_TakeInventory("CantWeaponSpecial" ,1 );
				A_Takeinventory("SelectDualWieldRifles",1);
				A_Takeinventory("SelectRifleGrenade",1);
				A_Takeinventory("SelectSingleRifle",1);
				return state("Ready3");
			}
			return state("");
		}
		
		TNT1 A 0 A_JumpIfInventory("SelectDualWieldRifles", 1, "HandleDualWield")
		TNT1 A 0 A_JumpIfInventory("SelectRifleGrenade", 1, "SwitchToRifleGrenade")
		TNT1 A 0 A_JumpIfInventory("SelectSingleRifle", 1, "SwitchToSingle")
	SwitchToSingle:
		TNT1 A 0 {
			A_Takeinventory("SelectDualWieldRifles",1);
			A_Takeinventory("SelectRifleGrenade",1);
			A_Takeinventory("SelectSingleRifle",1);
		}
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1,"HandleDualWield")
		R1F0 FEDC 1 A_Setroll(roll+0.5, SPF_INTERPOLATE)
		R1F0 BA 1 A_Setroll(roll-1.0, SPF_INTERPOLATE)
		TNT1 A 0 A_SetCurrentRifleMode("NormalMode")
		Goto Ready3
		
	SwitchToRifleGrenade:
		TNT1 A 0 {
			A_Takeinventory("SelectDualWieldRifles",1);
			A_Takeinventory("SelectRifleGrenade",1);
			A_Takeinventory("SelectSingleRifle",1);
		}
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1,"SwitchToRifleGrenade_DW")
		R1GF ABC 1
		TNT1 A 0 A_PlaySoundEx("LIGHTON", "Auto")
		TNT1 A 0 A_SetCurrentRifleMode("GrenadeMode")
		Goto Ready3
	SwitchToRifleGrenade_DW:
		TNT1 A 0 A_TakeInventory("DualWieldingDMRs", 1)
		TNT1 A 0 A_PlaySoundEx("Ironsights", "Auto")
		R2F1 KJ 1
		R2F1 IHGFED 1 A_Setroll(roll+0.5, SPF_INTERPOLATE)
		R2F1 CBA 1 A_Setroll(roll-1.0, SPF_INTERPOLATE)
		R1GF ABC 1
		TNT1 A 0 A_PlaySoundEx("LIGHTON", "Auto")
		TNT1 A 0 A_SetCurrentRifleMode("GrenadeMode")
		Goto Ready3
			
	HandleDualWield:
		TNT1 A 0 A_PlaySoundEx("Ironsights", "Auto")
		TNT1 A 0 {
			A_Takeinventory("SelectDualWieldRifles",1);
			A_Takeinventory("SelectRifleGrenade",1);
			A_Takeinventory("SelectSingleRifle",1);
		}
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1,"StopDualWield")
		TNT1 A 0 A_JumpIfINventory("Rifle", 2, "SwitchToDualWield")
		TNT1 A 0 A_Print("You need two rifles to dual wield!")
		Goto Ready3
	SwitchToDualWield:
		R1F0 ABCD 1 A_Setroll(roll-0.5, SPF_INTERPOLATE)
		R1F0 EF 1 A_Setroll(roll+1.0, SPF_INTERPOLATE)
		TNT1 A 0 A_GiveInventory("DualWieldingDMRs",1)
		TNT1 A 0 A_SetCurrentRifleMode("DualwieldMode")
		Goto ReadyDualWield
	StopDualWield:
		R1F0 FEDC 1 A_Setroll(roll+0.5, SPF_INTERPOLATE)
		R1F0 BA 1 A_Setroll(roll-1.0, SPF_INTERPOLATE)
		TNT1 A 0 A_TakeInventory("DualWieldingDMRs", 1)
		TNT1 A 0 A_SetCurrentRifleMode("NormalMode")
		Goto Ready3
		
	Select:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(58);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		Goto SelectFirstPersonLegs
		SelectContinue:
		TNT1 A 1 ACS_NamedExecuteAlways("ToggleCarbineUpgraded",0) //For people who want this weapon to replace another
		//TNT1 A 0 A_Takeinventory("HasUnloadedDMR",1)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		TNT1 A 0 A_TakeInventory("FistsSelected",1)
		TNT1 A 0 A_TakeInventory("SawSelected",1)
		TNT1 A 0 A_TakeInventory("SledgeSelected",1)
		TNT1 A 0 A_TakeInventory("CarbineSelected",1)
		TNT1 A 0 A_TakeInventory("HandgunSelected",1)
		TNT1 A 0 A_TakeInventory("DualHandgunSelected",1)
		TNT1 A 0 A_TakeInventory("RevolverSelected",1)
		TNT1 A 0 A_TakeInventory("ShotgunSelected",1)
		TNT1 A 0 A_TakeInventory("SSGSelected",1)
		TNT1 A 0 A_TakeInventory("ASGSelected",1)
		TNT1 A 0 A_TakeInventory("QSGSelected",1)
		TNT1 A 0 A_TakeInventory("MinigunSelected",1)
		TNT1 A 0 A_TakeInventory("NewChaingunSelected",1)		
		TNT1 A 0 A_TakeInventory("RocketLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("GrenadeLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("SGLSelected",1)
		TNT1 A 0 A_TakeInventory("PlasmaGunSelected",1)
		TNT1 A 0 A_TakeInventory("M2Selected",1)	
		TNT1 A 0 A_TakeInventory("FreezerSelected",1)
		TNT1 A 0 A_TakeInventory("RailGunSelected",1)
		TNT1 A 0 A_TakeInventory("BFGSelected",1)
		TNT1 A 0 A_TakeInventory("BFGBeamSelected",1)
		TNT1 A 0 A_TakeInventory("BHCSelected",1)
		TNT1 A 0 A_TakeInventory("RevenantLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("FlameCannonSelected",1)
		TNT1 A 0 A_TakeInventory("HellRifleSelected",1)
		TNT1 A 0 A_TakeInventory("LandMineSelected",1)
		TNT1 A 0 A_TakeInventory("UACSMGSelected",1)
		TNT1 A 0 A_TakeInventory("SubMachineGunSelected",1)
		TNT1 A 0 A_TakeInventory("LostSoulSelected",1)
		TNT1 A 0 A_TakeInventory("HasBarrel",1)
		TNT1 A 0 A_TakeInventory("HasBurningBarrel",1)
		TNT1 A 0 A_TakeInventory("HasIncendiaryWeapon", 1)
		TNT1 A 0 A_GiveInventory("RifleSelected",1)
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Raise
		TNT1 AAAAAAAA 1 A_Raise
		Wait
		
	//This code will be reworked since the new equipment system breaks it
	FireGrenadeLauncher:
		TNT1 A 0 A_WeaponOffset(0,32)
        TNT1 A 0 A_JumpIfInventory("UnderBarrelGrenadeLoaded",1,1)
        Goto ReloadGrenadeLauncher
		TNT1 A 0 {
			A_PlaySound("RFGLLCH");
			A_ZoomFactor(0.985);
			A_TakeInventory("UnderBarrelGrenadeLoaded", 1);
			A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
			A_FireCustomMissile("ShakeYourAssMinor", 0, 0, 0, 0);
			A_FireCustomMissile("YellowFlareSpawn",0,0,0,0);
			A_FireCustomMissile("PB_FragGrenade", 0, 0, 0, 0);
			A_AlertMonsters;
		}
		TNT1 AAAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-16,16), 0, -1, random(-9,9))
		R1GF DE 1 BRIGHT
		TNT1 A 0 A_GunFlash
		TNT1 A 0 A_ZoomFactor(0.980)
		R1GF FG 1
		TNT1 A 0 A_ZoomFactor(0.985)
		R1GF CB 1
		TNT1 A 0 A_ZoomFactor(0.99)
		R1GF A 1 
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("DoGrenade", 1)
        TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,"ReloadGrenadeLauncher")
		Goto Ready3
	
	MuzzleFlashHandler:
		TNT1 A 0 A_JumpIfInventory("DMRUpgraded",1,1)
		Goto NormalMuzzleFlashHandler
	MuzzleFlash1:
		MZ01 AB 1 BRIGHT
		Stop
//Unupgraded Muzzle Flash handler
	NormalMuzzleFlashHandler:
		TNT1 A 0 A_Jump(256, "NormalMuzzle1", "NormalMuzzle2", "NormalMuzzle3", "NormalMuzzle4", "BigFlashHandler")
	NormalMuzzle1:
		MZ02 AB 1 BRIGHT
		Stop
	NormalMuzzle2:
		MZ02 AC 1 Bright
		Stop
	NormalMuzzle3:
		MZ02 DE 1 BRIGHT
		Stop
	NormalMuzzle4:
		MZ02 DF 1 BRIGHT
		Stop
	BigFlashHandler:
		TNT1 A 0 A_Jump(256, "BigFlash1", "BigFlash2", "BigFlash3", "BigFlash4", "BigFlash5", "BigFlash6")
	BigFlash1:
		MZ02 GH 1 BRIGHT
		Stop
	BigFlash2:
		MZ02 GI 1 BRIGHT
		Stop
	BigFlash3:
		MZ02 GJ 1 BRIGHT
		Stop
	BigFlash4:
		MZ02 KL 1 BRIGHT
		Stop
	BigFlash5:
		MZ02 KM 1 BRIGHT
		Stop
	BigFlash6:
		MZ02 KN 1 BRIGHT
		Stop
		
    Fire:
		"####" "#" 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(58);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		"####" "#" 0 A_JumpIf(A_GetCurrentRifleMode() == "GrenadeMode", "FireGrenadeLauncher")
		"####" "#" 0 A_JumpIfInventory("DualWieldingDMRs", 1, "FireDualWield")
		"####" "#" 0 A_JumpIfInventory("Zoomed",1,"Fire2")
        "####" "#" 0 A_JumpIfInventory("RifleAmmo",1,2)
		"####" "#" 0 A_PlaySoundEx("weapons/empty", "Auto")
        Goto Reload
		H0F1 ABCDE 0
		R0F8 A 1 BRIGHT {
			
			A_Overlay(-40, "MuzzleFlashHandler");
			
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F1");}

			if(GetCvar("PB_alttracer") >=1)
				{
				 A_RailAttack(0, 0, 0, none,none, RGF_SILENT|RGF_NOPIERCING|RGF_EXPLICITANGLE, 0, none,0.1,0.1,700,0,1,1.0,"Tracer_Trail",-6,0,0);
				 A_FireBullets (0.1, 0.1, -1, 22, "HitPuff", FBF_NORANDOM,8192,none, -2,0);
				}
			else {A_FireBullets (0.1, 0.1, -1, 22, "HitPuff", FBF_NORANDOM,8192,"Tracer", -2,0);}
			A_PlaySoundEx("weapons/rifle", "Weapon");
			A_FireCustomMissile("YellowFlareSpawn",0,0,0,0);
			A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
			//A_FireCustomMissile("RifleCaseSpawn",5,0,8,-9);
			PB_SpawnCasing("EmptyBrass",28,0,30,3,Frandom(5,8),Frandom(1,4));
			A_Takeinventory("RifleAmmo",1);
			A_AlertMonsters;
			A_ZoomFactor(0.98);
			A_WeaponReady(WRF_NOPRIMARY);
			A_Giveinventory("DMRBarrelHeat",10);
			A_GunFlash;
            PB_WeaponRecoil(-0.36,-0.02);
			}
		R0F8 B 1 BRIGHT {
			if (CountInv("DMRUpgraded") == 1) {
				A_SetWeaponSprite("H0F1");
			}
			
			A_ZoomFactor(0.99);
			A_WeaponReady(WRF_NOPRIMARY);
            PB_WeaponRecoil(-0.36,-0.02);
			}
		R0F8 C 1{
			if (CountInv("DMRUpgraded") == 1) {
				A_SetWeaponSprite("H0F1");
			}
			A_ZoomFactor(1.0);
			A_WeaponReady(WRF_NOPRIMARY);
			}
		R0F8 D 1 { 
			if (CountInv("DMRUpgraded") == 1) {
				A_SetWeaponSprite("H0F1");
			}
			A_WeaponReady(WRF_NOPRIMARY);
		}
		R0F6 E 1 { 
			if (CountInv("DMRUpgraded") == 1) {
				A_SetWeaponSprite("H0F1");
			}
			A_WeaponReady(WRF_NOPRIMARY);
		}
		TNT1 A 0 A_Refire
		Goto Ready3
		
	
	 Fire2:
		"####" "#" 0 {
			A_WeaponOffset(0,32);
			A_SetCrosshair(5);
			}
        "####" "#" 0 A_JumpIfInventory("RifleAmmo",1,2)
		"####" "#" 0 A_PlaySoundEx("weapons/empty", "Auto")
        Goto Reload
		R1F1 AB 0
		R1F2 AB 0
		H0F3 ABCD 0
		R1F1 A 1 BRIGHT {
			//A_WeaponReady(WRF_NOPRIMARY);
			//int chance = (random(1,256));
			
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F3");}
			
			
			if(GetCvar("PB_alttracer") >=1)
				{
				 A_RailAttack(0, 0, 0, none,none, RGF_SILENT|RGF_NOPIERCING|RGF_EXPLICITANGLE, 0, none,0.1,0.1,700,0,1,1.0,"Tracer_Trail",-6,0,0);
				 A_FireBullets (0.1, 0.1, -1, 22, "HitPuff", FBF_NORANDOM,8192,none, -2,0);
				}
			else {A_FireBullets (0.1, 0.1, -1, 22, "HitPuff", FBF_NORANDOM,8192,"Tracer", -2,0);}
			A_PlaySoundEx("weapons/rifle", "Weapon");
			A_AlertMonsters;
			A_Takeinventory("RifleAmmo",1);
			A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 3, 0, 0);
			A_FireCustomMissile("YellowFlareSpawn",0,0,0,0);
			A_FireCustomMissile("RifleCaseSpawn",1,0,8,0);
			A_ZoomFactor(2.485);
			A_Giveinventory("DMRBarrelHeat",10);
            PB_WeaponRecoil(-0.2,-0.02);
		}
		R1F1 B 1 BRIGHT {
			//int chance = (random(1,256));
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F3");}
			A_ZoomFactor(2.49);
			//A_WeaponReady(WRF_NOPRIMARY);
			PB_WeaponRecoil(-0.2,-0.02);
			}
        R1F1 C 1 {
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F3");}
			A_ZoomFactor(2.5);
			//A_WeaponReady(WRF_NOPRIMARY);
			}
		R1F1 D 1 {
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F3");}
		}
		R0F7 F 1 {
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F2");}
			if(GetCvar("pb_toggle_aim_hold")) {
				if(JustReleased(BT_ALTATTACK)){
					return state("Zoomout");
				}
		
				if (JustPressed(BT_ATTACK) && PressingAltfire()){
						return state("Fire2");
				}
			}
			else {
				if(PressingAltfire()){
					return state("Zoomout");
				}
				
				if (JustPressed(BT_ATTACK)){
						return state("Fire2");
				}
				
			}
			return state("");
		}
		Goto Ready2
		
    AltFire:
	
	
		TNT1 A 0 {
			A_GunFlash("LightDone",GFF_NOEXTCHANGE);
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(58);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1, "ReadyToFireDualWield")
		TNT1 A 0 A_StartSound("IronSights", 0)
		TNT1 A 0 A_JumpIfInventory("Zoomed",1,"Zoomout")
		TNT1 A 0 A_ZoomFactor(2.5)
		H0F2 ABCDE 0
        R0F7 ABCDE 1 {
				if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F2");}
		}
		TNT1 A 0 {
			A_Giveinventory("Zoomed",1);
			A_Giveinventory("ADSmode",1);
			A_SetCrosshair(5);
			A_WeaponReady(WRF_NOSECONDARY);
			}
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY)
        Goto Ready2
	Zoomout:
		TNT1 A 0 {	
			A_GunFlash("LightDone",GFF_NOEXTCHANGE);
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			PB_HandleCrosshair(58);
			A_ZoomFactor(1.0);
			}
        R0F7 EDCBA 1
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY)
        Goto Ready3
	
	NoAmmo:
		"####" "#" 1 
		Goto Ready3
		
	
	ReloadGrenadeLauncher:
		TNT1 A 0 A_WeaponReady
		TNT1 A 0 A_JumpIfInventory("RocketAmmo",1,2)	
		TNT1 A 0 A_PlaySoundEx("weapons/empty", "Auto")
		Goto Ready3
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_Takeinventory("Reloading",1)
		TNT1 A 0 A_Takeinventory("ADSmode",1)
		TNT1 A 0 A_Takeinventory("Zoomed",1)
        TNT1 A 0 A_JumpIfInventory("UnderBarrelGrenadeLoaded",1,"Ready3")
        RIGR BATS 1  A_JumpIfInventory("Kicking",1,"DoKick")
		TNT1 A 0 A_GiveInventory("UnderBarrelGrenadeLoaded", 1)
		RGLR A 4
		RGLR BCD 2
		TNT1 A 0 A_PlaySound("Weapons/GrenadeOpen", 1)
		TNT1 AAAA 0 A_FireCustomMissile("SmokeSpawner",4,0,0,2)	
		TNT1 A 0 A_FireCustomMissile("GrenadeCaseSpawn",5,0,-10,-5)
		RGLR EFG 2
		RGLR HIJKLMMMMM 1
		RGLR NOP 2
		TNT1 A 0 A_TakeInventory("RocketAmmo",1)
		TNT1 A 0 A_PlaySound("Weapons/GrenadeLoad", 2)
		RGLR QQRRSSS 1
		RGLR TUVWXY 1
		TNT1 A 0 A_TakeInventory("DoGrenade", 1)
		RGLR A 1
		TNT1 A 0 A_TakeInventory("DoGrenade", 1)
        RIGR STBA 1  A_JumpIfInventory("Kicking",1,"DoKick")
		TNT1 A 0 A_TakeInventory("DoGrenade", 1)
		Goto Ready3
		
	BarrelSmoke3:
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, 0, 0, 0, 0)
		TNT1 B 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -1, 0, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 0, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 0, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 1, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 2, 0, 0)
		TNT1 A 0 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 2, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -3, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -3, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -3, 3, 0, 0)
		
		TNT1 AAAAAAA 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 3, 0, 0)
		
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 3, 0, 0)
		
		TNT1 AAAAAAAAAAAA 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -3, 3, 0, 0)
		
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -3, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 3, 0, 0)
		TNT1 AAA 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -1, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -1, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -1, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -1, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -1, 3, 0, 0)
		Stop
		
	ReloadUnloaded:
		R5F3 ABCDEFGHIJKL 1
		Goto ResumeReload
    Reload:
		"####" "#" 0 {
			A_ZoomFactor(1.0);
			A_Takeinventory("ADSmode",1);
			A_Takeinventory("Zoomed",1);
		}
		"####" "#" 0 A_JumpIfInventory("DualWieldingDMRs", 1, "ReloadDualWield")
		"####" "#" 0 A_JumpIfInventory("RifleAmmo",31,"Ready3")
        "####" "#" 0 A_JumpIfInventory("NewClip",1,1)
        Goto NoAmmo
		TNT1 A 0 {
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			A_ZoomFactor(1.0);
			A_Giveinventory("PB_LockScreenTilt",1);
			A_SetCrosshair(5);
			A_PlaySoundEx("Ironsights", "Auto");
			A_ClearOverlays(10,11);
			
			
			if (CountInv("DMRBarrelHeat") >= 60) {
					A_Gunflash("BarrelSmoke3");
			}
		}
		H0F5 ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H0F6 ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H0F7 ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H0F8 ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		
		TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR", 1, "ReloadUnloaded")
		R2F0 ABCDEFGHIJKLMNOPQR 1 {
				if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F5");}
		}
		R2F0 S 1 {
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F5");}
			A_PlaySoundEx("weapons/rifle/magout", "Auto");
		}
		R2F0 TUV 1 {
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F5");}
		}
		R2F0 W 1  {
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F5");}
			A_PlaySoundEx("weapons/rifle/magchange", "Auto");
		}
		TNT1 A 0 {
			if(CountInv("RifleAmmo") < 1 && CountInv("DMRUpgraded") != 1) {
				PB_SpawnCasing("EmptyDMRMag",38,26,7,frandom(0, 3.5),frandom(-7.2, -3.3),frandom(3,7));
				}
			}
		R2F0 XYZ 1 {
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F5");}
		}
		TNT1 A 0 A_PlaySoundEx("Ironsights", "Auto")
	ResumeReload:
		TNT1 A 0 A_TakeInventory("HasUnloadedDMR", 1)
		R2F1 ABC 1 {
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F6");}
		}
		R2F1 D 1 {
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F6");}
			A_PlaySoundEx("weapons/rifle/magin", "Auto");
		}
		R2F1 EFGHIJKL 1 {
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F6");}
		}
		R2F1 M 1 {
			A_PlaySoundEx("weapons/rifle/magslap", "Auto");
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F6");}
		}
		TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
		R2F1 NOPQRS 1 {
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F6");}
		}
		R2F1 TUVWXYZ 1 {
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F6");}
		}
 		TNT1 A 0 A_JumpIfInventory("RifleAmmo",1,"NormalReload")
	LoadChamber:
		TNT1 A 0 A_PlaySoundEx("Ironsights", "Auto")
		R2F3 ABCD 1 {
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F8");}
		}
		TNT1 A 0 A_PlaySoundEx("RIFCL_CK", "auto")
		R2F3 EFGHIJKLMNOPQRSTUV 1 {
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F8");}
		}
		Goto InsertBullets
	NormalReload:
		R2F2 ABCDEFG 1 {
			if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F7");}
		}
 		TNT1 A 0 A_JumpIfInventory("RifleAmmo",1,"InsertBullets2")
		Goto InsertBullets2
	SkipLeftReload:
		R2F6 ABCD 1
 		Goto InsertBullets4
		
		
	SkipRightReload:
		R2F7 ABCD 1
		Goto ReloadLeftGun
	ReloadDualWield:
        TNT1 A 0 A_JumpIfInventory("NewClip",1,1)
        Goto ReadyDualWield
		TNT1 A 0 {
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			A_ZoomFactor(1.0);
			A_Giveinventory("PB_LockScreenTilt",1);
			A_SetCrosshair(5);
			A_PlaySoundEx("Ironsights", "Auto");
			A_ClearOverlays(10,11);
			}
		TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR", 1, "DWReloadUnloaded")
		
		TNT1 A 0 {
			if (CountInv("RifleAmmo") >= 31 && CountInv("LeftRifleAmmo") >= 31) {
				return state("ReadyDualWield");
			}
			return state("");
		}
 		TNT1 A 0 A_JumpIfInventory("RifleAmmo",31,"SkipRightReload")
		R3F0 ABCDEFGHIJKLMN 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magout", "Auto")
		R3F0 OPQRSTUVW 1
		TNT1 A 0 {
			if(CountInv("RifleAmmo") < 1 && CountInv("DMRUpgraded") != 1) {
				PB_SpawnCasing("EmptyDMRMag",38,26,7,frandom(0, 3.5),frandom(-7.2, -3.3),frandom(3,7));
				}
			}
		R3F0 XYZ 1
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magchange", "Auto")
		R3F1 ABCD 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magin", "Auto")
		R3F1 EFGHIJKLMN 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magslap", "Auto")
		TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
		R3F1 OPQRSTUVWXYZ 1
		R3F2 A 1
	ReloadLeftGun:
		TNT1 A 3
 		TNT1 A 0 A_JumpIfInventory("LeftRifleAmmo",31,"SkipLeftReload")
		R3F2 BCDEFGHIJKLMN 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magout", "Auto")
		R3F2 OPQR 1
		TNT1 A 0 {
			if(CountInv("LeftRifleAmmo") < 1 && CountInv("DMRUpgraded") != 1) {
				PB_SpawnCasing("EmptyDMRMag",38,-20,7,frandom(0, 3.5),frandom(3.3, 7.2),frandom(3,7));
				}
			}
		R3F2 ST 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magchange", "Auto")
		R3F2 UVWX 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magin", "Auto")
		R3F2 YZ 1
		R3F3 ABCDEFGHI 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magslap", "Auto")
		TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
		R3F3 JKLMN 1 
		R3F3 OPQRSTUVWXYZ 1
 		Goto InsertBullets4
		

	DWReloadUnloaded:
		R8F3 ABCDEFGHI 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magchange", "Auto")
		R8F3 JKL 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magin", "Auto")
		R8F3 MNOPQRSTUV 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magslap", "Auto")
		TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
		R8F3 WXYZ 1
		R8F4 ABCDEFGHIJKL 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magchange", "Auto")
		R8F4 MNO 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magin", "Auto")
		R8F4 PQRSTUVWXY 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magslap", "Auto")
		TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
		R8F4 Z 1
		R8F5 ABCDEFGHIJKLMNO 1
 		Goto InsertBullets4

	InsertBullets:
		TNT1 A 0 A_JumpIfInventory("RifleAmmo",30,"Ready3")
		TNT1 A 0 A_JumpIfInventory("NewCLip",1,1)
		Goto FinishInsertBullets
		TNT1 A 0 {
			A_Giveinventory("RifleAmmo",1);
			A_Takeinventory("NewCLip",1);
			}
		Goto InsertBullets
	InsertBullets2:
		TNT1 A 0 A_JumpIfInventory("RifleAmmo",31,"Ready3")
		TNT1 A 0 A_JumpIfInventory("NewCLip",1,1)
		Goto FinishInsertBullets 
		TNT1 A 0 {
			A_Giveinventory("RifleAmmo",1);
			A_Takeinventory("NewCLip",1);
		}
		Goto InsertBullets2
		
	InsertBullets3:
		TNT1 A 0 A_JumpIfInventory("RifleAmmo",30,"InsertBullets6")
		TNT1 A 0 A_JumpIfInventory("NewCLip",1,1)
		Goto InsertBullets6
		TNT1 A 0 {
			A_Giveinventory("RifleAmmo",1);
			A_Takeinventory("NewCLip",1);
		}
		Goto InsertBullets3
		
	InsertBullets4:
		TNT1 A 0 A_JumpIfInventory("RifleAmmo",31,"InsertBullets5")
		TNT1 A 0 A_JumpIfInventory("NewCLip",1,1)
		Goto InsertBullets5
		TNT1 A 0 {
			A_Takeinventory("NewCLip",1);
			A_Giveinventory("RifleAmmo",1);
		}
		Goto InsertBullets4
	
	InsertBullets5:
		TNT1 A 0 A_JumpIfInventory("LeftRifleAmmo",31,"FinishInsertBullets")
		TNT1 A 0 A_JumpIfInventory("NewCLip",1,1)
		Goto FinishInsertBullets
		TNT1 A 0 {
			A_Giveinventory("LeftRifleAmmo",1);
			A_Takeinventory("NewCLip",1);
		}
		Goto InsertBullets5
		
	InsertBullets6:
		TNT1 A 0 A_JumpIfInventory("LeftRifleAmmo",30,"FinishInsertBullets")
		TNT1 A 0 A_JumpIfInventory("NewCLip",1,1)
		Goto FinishInsertBullets
		TNT1 A 0 {
			A_Giveinventory("LeftRifleAmmo",1);
			A_Takeinventory("NewCLip",1);
		}
		Goto InsertBullets6
		
	FinishInsertBullets:
		TNT1 A 0 A_Takeinventory("RifleWasEmpty",1)
		TNT1 A 0 A_Takeinventory("HasUnloadedDMR",1)
		Goto Ready3
	
	
	
	Unload:
		TNT1 A 0 A_Takeinventory("Unloading",1)
		TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR", 1, "Ready3")
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1, "UnloadDualWield")
		TNT1 A 0 a_JumpIfInventory("RifleAmmo", 1, 1)
        Goto Ready3
		TNT1 A 0 {
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			A_Takeinventory("Unloading",1);
			A_ZoomFactor(1.0);
			A_Giveinventory("PB_LockScreenTilt",1);
			A_SetCrosshair(5);
			A_PlaySoundEx("Ironsights", "Auto");			
			}
		
		R5F0 ABCDEFGHIJKLMNOP 1 
		R5F0 Q 1 A_PlaySoundEx("weapons/rifle/magout", "Auto")
		R5F0 RSTUVWXYZ 1
		R5F1 ABCD 1
		TNT1 A 0 a_JumpIfInventory("RifleAmmo", 1, "UnloadWithAmmo")
		R5F2 ABCDEFGHIJKLMN 1
		Goto RemoveBullets
	UnloadWithAmmo:
		R5F1 EFGH 1 
		TNT1 A 0 A_PlaySoundEx("RIFCL_CK", "auto")
		R5F1 IJKLMNOPQRSTUVWXYZ 1
		
	RemoveBullets:
		TNT1 A 0 A_JumpIfInventory("RifleAmmo",1,1)
		Goto FinishUnload
		TNT1 A 0 
		{
			A_Takeinventory("RifleAmmo",1);
			A_Giveinventory("NewClip",1);
		}
		Goto RemoveBullets
	
	FInishUnload:
		TNT1 A 0 A_GiveInventory("HasUnloadedDMR", 1)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		Goto Ready3
		
	UnloadDualWield:
		TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR", 1, "AlreadyUnloaded")
		TNT1 A 0 {
			if (CountInv("RifleAmmo") <= 0 && CountInv("LeftRifleAmmo") <= 0) {
				return state("ReadyDualWield");
			}
			return state("");
		}
        TNT1 A 0 A_JumpIfInventory("RifleAmmo",1,1)
        Goto ReadyDualWield
		TNT1 A 0 {
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			A_ZoomFactor(1.0);
			A_Giveinventory("PB_LockScreenTilt",1);
			A_SetCrosshair(5);
			A_PlaySoundEx("Ironsights", "Auto");
			A_ClearOverlays(10,11);
			}
		R8F0 ABCDEFGHIJKLMNOPQR 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magout", "Auto")
		R8F0 STUVWXYZ 1
		R8F1 ABCDEFGHIJKLMNO 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magout", "Auto")
		R8F1 PQRSTUVWXYZ 1
		R8F2 AB 1
	RemoveBulletsDualWield:
		TNT1 A 0 A_JumpIfInventory("RifleAmmo",1,1)
		Goto RemoveBulletsDualWield2
		TNT1 A 0 
		{
			A_Takeinventory("RifleAmmo",1);
			A_Giveinventory("NewClip",1);
		}
		Goto RemoveBulletsDualWield
		
	RemoveBulletsDualWield2:
		TNT1 A 0 A_JumpIfInventory("LeftRifleAmmo",1,1)
		Goto FinishUnloadDualWield
		TNT1 A 0 
		{
			A_Takeinventory("LeftRifleAmmo",1);
			A_Giveinventory("NewClip",1);
		}
		Goto RemoveBulletsDualWield2
	FinishUnloadDualWield:
		TNT1 A 0 A_GiveInventory("HasUnloadedDMR", 1)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		Goto Ready3

	Spawn.V5:
		VIFL A 10 {
			IF( A_CHECKRANGE( V5_MDist , "NULL", TRUE) ) {A_SetSpawnSprite("RIFL");}
			}
	Spawn:
		TNT1 A 0 NoDelay A_jumpif( V5_MODELS == 1 && V5_Cull == 1, "Spawn.V5")
		RIFL A 10 {
				if ( GetCvar( "V5_MODELS" ) == 1 && GetCVar( "V5_Cull" ) == 0 ) {A_SetSpawnSprite("VIFL");}
		}
		LOOP

			
	FlashKicking:
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1, "FlashKicking2")
		R4F0 ABCDEFGGHIJKLM 1
		Stop
	FlashKicking2:
		R7F2 ALM 0
		R7F0 A 1 {
			if(CountInv("HasUnloadedDMR") == 1) {A_SetFlashWeaponSprite("R7F2");}
			}
		R7F0 BCDEFGGHIJK 1
		R7F0 LM 1 {
			if(CountInv("HasUnloadedDMR") == 1) {A_SetFlashWeaponSprite("R7F2");}
			}
		Stop

	FlashAirKicking:
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1, "FlashAirKicking2")
		R4F0 ABCDEFGGGGHIJKLM 1
		Stop
	FlashAirKicking2:
		R7F0 A 1 {
			if(CountInv("HasUnloadedDMR") == 1) {A_SetFlashWeaponSprite("R7F2");}
			}
		R7F0 BCDEFGGGGHIJK 1
		R7F0 LM 1 {
			if(CountInv("HasUnloadedDMR") == 1) {A_SetFlashWeaponSprite("R7F2");}
			}
		Stop
	
	FlashSlideKicking:
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs",1,"FlashSlideKicking2")
		R4F3 ABCDEFGHIJKLMNOPQRSTUVWX 1
		Stop
	FlashSlideKicking2:
		R7F3 ABWX 0
		R7F1 AB 1 {
			if(CountInv("HasUnloadedDMR") == 1) {A_SetFlashWeaponSprite("R7F3");}
			}
		R7F1 CDEFGHIJKLMNOPQRSTUV 1
		R7F1 WX 1 {
			if(CountInv("HasUnloadedDMR") == 1) {A_SetFlashWeaponSprite("R7F3");}
			}
		Stop
		
	FlashSlideKickingStop:
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1, "FlashSlideKickingStop2")
		R4F3 RSTUVWX 1
		Stop
	FlashSlideKickingStop2:
		R7F1 RSTUV 1
		R7F1 WX 1 {
			if(CountInv("HasUnloadedDMR") == 1) {A_SetFlashWeaponSprite("R7F3");}
			}
		Stop
		
	FlashPunching:
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1, "FlashPunching2")
		R4F2 ABCDEFGHIJKLMN 1
		Stop
	FlashPunching2:
		TNT1 A 14
		Stop
	}
}

Actor Zoomed : Inventory
{
inventory.maxamount 1
}

ACTOR RifleAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 31
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 30
   Inventory.Icon "RIFLA0"
}


ACTOR LeftRifleAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 31
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 30
   Inventory.Icon "RIFLA0"
}

ACTOR MeatshieldGunAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 30
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 30
   Inventory.Icon "RIFLA0"
}

ACTOR MeatshieldPistolAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 15
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 15
   Inventory.Icon "DEGTA0"
}

ACTOR MeatshieldASGAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 12
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 12
   Inventory.Icon "AUSCA0"
}

ACTOR MeatshieldCarbineAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 40
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 40
   Inventory.Icon "CB00Z0"
}

ACTOR MeatshieldPlasmaAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 50
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 50
   Inventory.Icon "PLASA0"
}

ACTOR MeatAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 100
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 100
   Inventory.Icon "5DUNA0"
}
