Actor Reloading : Inventory
{
inventory.maxamount 1
}

Actor ADSMode : Inventory
{
inventory.maxamount 1
}

Actor RifleWasEmpty : Inventory
{
inventory.maxamount 1
}

Actor Unloading : Inventory
{
inventory.maxamount 1
}

//I think we should consider using this (HasUnloaded) as a base for future 
//unloaded weapon tokens, so we don't have to to put inventory.maxamount 1 
//every single damn time. Unless it can cause issues idk, this was a suggestion
//I thought about because I inherited HasUnloaded for the left Carbine 
//unloaded token.
// -JMartinez2098
Actor HasUnloaded : Inventory
{
inventory.maxamount 1
}

Actor HasUnloadedDMR : Inventory
{
inventory.maxamount 1
}

Actor DMRUpgraded : Inventory
{
inventory.maxamount 1
}

Actor UnderBarrelGrenadeLoaded : Inventory
{
inventory.maxamount 1
}


Actor DualWieldingDMRs : Inventory
{
inventory.maxamount 1
}

Actor PB_DMRFireAnimation1: Inventory
{
Inventory.maxamount 1
}
Actor PB_DMRFireAnimation2: Inventory
{
Inventory.maxamount 1
}

Actor FiredSecondary : Inventory
{
inventory.maxamount 1
}

Actor FiredPrimary : Inventory
{
inventory.maxamount 1
}

Actor StopDualWield : Inventory
{
inventory.maxamount 1
}

Actor IsFiringSecondary : Inventory
{
inventory.maxamount 1
}

Actor IsReloading : Inventory
{
inventory.maxamount 1
}

Actor SelectDualWieldRifles: Inventory
{
inventory.maxamount 1
}

Actor SelectHDMRGrenade: Inventory
{
inventory.maxamount 1
}

Actor SelectSingleRifle: Inventory
{
inventory.maxamount 1
}

Actor SelectHDMRMode: Inventory
{
inventory.maxamount 1
}

Actor HDMRGrenadeMode: Inventory
{
inventory.maxamount 1
}

Actor HDMRSniperMode: Inventory
{
inventory.maxamount 1
}


Actor FiringUnderBarrelGrenadeLauncher: Inventory
{
inventory.maxamount 1
}


Actor SniperFiringCooldown: Inventory
{
inventory.maxamount 1
}

Actor LeftSniperFiringCooldown: Inventory
{
inventory.maxamount 1
}

ACTOR HalfTicCounter : Inventory { Inventory.MaxAmount 1 }

//This will be disabled for now due to the HDMR being incomplete.
//This actor can be uncommented when it's completed.
Actor RifleUpgrade: PB_UpgradeItem
{
	//$Title Heavy DMR Upgrade
	//$Category Project Brutality - Weapon Upgrades
	//$Sprite HIFLA0
	Game Doom
	//SpawnID 9410
	Height 24
	//-COUNTITEM
	Scale 0.43
	+INVENTORY.ALWAYSPICKUP
	+COUNTITEM
	Inventory.Pickupsound "weapons/rifle/up"
	Inventory.PickupMessage "Heavy DMR (Slot 4, Upgrade)"
	Tag "Heavy DMR"
	States
	{
		Spawn:
			VHFL A 0 NODELAY
			HIFL A 10 A_PBVPFramework("VHFL")
			"####" "#" 0 A_PbvpInterpolate()
			Loop
		Pickup:
			TNT1 A 0
			TNT1 A 0 A_SetInventory("UnderBarrelGrenadeLoaded", 1)
			TNT1 A 0 A_GiveInventory("Rifle", 1)
			TNT1 A 0 A_SetInventory("DMRUpgraded", 1)
			Stop
	}
}

//Placing the helmet on Doomguy's head
Actor IntroductionSequence : Inventory
{
inventory.maxamount 1
}
Actor RespectRifle : Inventory
{
inventory.maxamount 1
}

ACTOR ADS_Firing_Animation_Token : Inventory { Inventory.MaxAmount 1 }


Actor UpgradeInspect: Inventory
{inventory.maxamount 1}

// --------------------------------------------------------------------------

// UAC DMR

// --------------------------------------------------------------------------
ACTOR Rifle : PB_Weapon
{
	//$Category Project Brutality - Weapons
	//$Sprite RIFLA0
	SpawnID 9420
	Weapon.AmmoUse1 0
	Weapon.AmmoGive1 10
	Weapon.AmmoUse2 0
	Weapon.AmmoGive2 0
	Weapon.AmmoType1 "PB_HighCalMag"
	Weapon.AmmoType2 "RifleAmmo"
	PB_WeaponBase.AmmoTypeLeft "LeftRifleAmmo"
	Inventory.MaxAmount 3
	Inventory.Amount 1
	+FLOORCLIP
	+DONTGIB
	Obituary "%o was shot down by %k's DMR."
    AttackSound "None"
    Inventory.PickupSound "CLIPIN"
	Inventory.Pickupmessage "UAC-30 DMR (Slot 4)"
	+WEAPON.WIMPY_WEAPON
    +WEAPON.NOAUTOAIM
    +WEAPON.NOALERT
    +WEAPON.NOAUTOFIRE
	+WEAPON.NO_AUTO_SWITCH
    Scale 0.43
	Tag "UAC-30 DMR"
	PB_WeaponBase.UnloaderToken "HasUnloadedDMR"
	Inventory.AltHUDIcon "RIFLA0"
	PB_WeaponBase.respectItem "RespectRifle"
	PB_WeaponBase.OffsetRecoilX 2.5
	PB_WeaponBase.OffsetRecoilY 3
	PB_WeaponBase.UsesWheel 0
	PB_WeaponBase.WheelInfo "PB_RifleWheel"
	PB_WeaponBase.TailPitch 0.5
	PB_WeaponBase.DualWieldToken "DualWieldingDMRs"
	States
	{
		Steady:
		TNT1 A 1
		Goto Ready
		
		InspectUpgrade:
			TNT1 A 0 {
				A_SetCrosshair(5);
				A_GiveInventory("UpgradeInspect");
				A_GiveInventory("PB_LockScreenTilt",1);
				A_PlaySoundEx("weapons/carbine/up", "Auto");
				A_TakeInventory("DualWieldingDMRs", 1);
				
				if(CountInv("DualWieldingDMRs") == 1) {
					A_ClearOverlays(10,11);
				}
			}
			R5F4 ABCDEFGHIJKL 1 A_DoPBWeaponAction
		InspectUpgradeContinue:
			TNT1 A 0 {
				A_SetCrosshair(5);
				A_GiveInventory("UpgradeInspect");
				A_GiveInventory("PB_LockScreenTilt",1);
				A_TakeInventory("DualWieldingDMRs", 1);
				
				if(CountInv("DualWieldingDMRs") == 1) {
					A_ClearOverlays(10,11);
				}
			}
			R5F4 MNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			R5F5 ABCDEF 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("MP4DGG", "Auto")
			R5F5 GHIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("MP4DGT", "Auto")
			R5F6 ABCDEF 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("MP4DG2", "Auto")
			R5F6 GHIJKLMNOPQRSTU 1 A_DoPBWeaponAction
			TNT1 A 0 {
				A_PlaySoundEx("IronSights", "Auto");
				A_PlaySoundEx("weapons/rifle/up", "Auto");
				A_PlaySoundEx("MP4DG2", "Auto");
			}
			R5F6 VWXYZ 1 A_DoPBWeaponAction
			R5F7 ABCDEFG 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("MP4DGT", "Auto")
			R5F7 HIJKLMNOPQ 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("MP4DGG", "Auto")
			R5F7 RSTUVWXYZ 1 A_DoPBWeaponAction
			R5F8 ABCDE 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("MP4DG2", "Auto")
			R5F8 FGHIJK 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			R5F8 LMNOP 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("weapons/rifle/scopebig", "Auto")
			R5F8 QRSTUVWXY 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			R5F8 Z 1 A_DoPBWeaponAction
			R5F9 ABCDE 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			R5F9 FGHIJKLM 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("weapons/rifle/magin", "Auto")
			R5F9 NOPQRSTUV 1 A_DoPBWeaponAction
			TNT1 A 0 {
				A_PlaySoundEx("weapons/rifle/magslap", "Auto");
				A_PlaySoundEx("weapons/riflemagslap", "Auto");
			}
			R5F9 WXYZ 1 A_DoPBWeaponAction
			R6F1 ABCDEF 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			R6F1 GHIJK 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("Weapons/GrenadeOpen", CHAN_AUTO)
			R6F1 LMNOP 1 A_DoPBWeaponAction
			TNT1 A 0  A_PlaySoundEx("Weapons/GrenadeLoad", CHAN_AUTO)
			R6F1 QRSTUVWXYZ 1 A_DoPBWeaponAction
			R6F2 A 1 A_PlaySoundEx("LMGCLK", CHAN_AUTO)
			R6F2 BCDEFG 1 
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			R6F2 HIJKLMNOP 1 A_DoPBWeaponAction
			Goto Ready3
			
			
		
		Ready:
			H0F0 ABCDE 0 // Load Upgrades sprites into memory
			H3F0 ABCDE 0 // Load Upgrades sprites into memory
			TNT1 A 0 A_TakeInventory("SniperFiringCooldown", 1)
			TNT1 A 0 PB_WeapTokenSwitch("RifleSelected")
			TNT1 A 0 PB_RespectIfNeeded
		WeaponRespect:
			TNT1 A 0 {
				A_SetCrosshair(5);
				A_GiveInventory("RespectRifle");
				A_GiveInventory("PB_LockScreenTilt",1);
				A_PlaySoundEx("weapons/carbine/up", "Auto");
			}
			TNT1 A 0 A_JumpIfInventory("DMRUpgraded",1,"InspectUpgrade")
			R0F0 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			R0F1 ABCDEF 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("LIGHTON", "Auto")
			R0F1 GHIJKLMNOPQRS 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			R0F1 TUVWXYZ 1 A_DoPBWeaponAction 
			TNT1 A 0 A_PlaySoundEx("MP4DGT", "Auto")
			R0F2 ABCD 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("MP4DGG", "Auto")
			R0F2 EFGHIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			R0F3 AB 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			R0F3 CDE 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("MP4DG2", "Auto")
			R0F3 FGHIJKLM 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			TNT1 A 0 A_PlaySoundEx("MP4DGG", "Auto")
			R0F3 NOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			R0F4 ABCDE 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("MP4DGG", "Auto")
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			R0F4 FGHIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("RIFCL_CK", "auto")
			R0F5 ABCDEFGHIJKLMNOPQR 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("IronSights", "Auto")
			R0F5 STUVWXY 1 A_DoPBWeaponAction
			Goto Ready3
		SelectAnimation:
			TNT1 A 0 A_TakeInventory("Zoomed",1)
			TNT1 A 0 A_JumpIfInventory("UpgradeInspect",1,2)
			TNT1 A 0 A_JumpIfInventory("DMRUpgraded",1,"InspectUpgrade")
			TNT1 A 0 A_PlaySoundEx("weapons/rifle/up", "Auto")
			TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1, "SelectAnimationDualWield")
			R0F6 ABCD 1 {
				if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F0");}
				if (CountInv("HDMRSniperMode") == 1) {A_SetWeaponSprite("H3F0");}
			}
		Ready3:
			TNT1 A 0 {
				A_TakeInventory("PB_LockScreenTilt",1);
				PB_HandleCrosshair(58);
				}
			TNT1 A 0 PB_SetUsableWheel(CountInv("DMRUpgraded") > 0)
			TNT1 A 0 A_JumpIf(CountInv("UpgradeInspect") == 0 && CountInv("DMRUpgraded") == 1, "InspectUpgradeContinue")
			TNT1 A 0 A_JumpIfInventory("Zoomed",1,"Ready2")
			TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1, "ReadyDualWield")
			
		ReallyReady:
			TNT1 A 0 A_JumpIf(CountInv("UpgradeInspect") == 0 && CountInv("DMRUpgraded") == 1, "InspectUpgradeContinue")
			
			R0F6 E 1 {
				if (CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H3F0");
					PB_CoolDownBarrel(0, 0, 4.7);
				}
				else if (CountInv("DMRUpgraded") == 1) {
					A_SetWeaponSprite("H0F0");
					PB_CoolDownBarrel(0, 0, 4.7);
				}
				else {PB_CoolDownBarrel;}
				
				if (PressingFire() && CountInv("RifleAmmo") > 0){
						return state("Fire");
				}
				return A_DoPBWeaponAction(WRF_ALLOWRELOAD);
			}
			Loop
			
//Overlays for complex reticle.  Will add more for the sniper mode later

			Reticle3:
				M4GT A 1 BRIGHT Offset(162,42)
				Stop
			Reticle4:
				TNT1 A 0 A_JumpIfInventory("UnderBarrelGrenadeLoaded",1,"LoadedGrenade")
			NotLoadedGrenade:
				LOAD G 1 BRIGHT Offset(137,42)
				Stop
			LoadedGrenade:
				LOAD D 1 BRIGHT Offset(140,42)
				Stop
			Reticle5:
				NUM0 A 0
				NUM1 A 0
				NUM2 A 0
				NUM3 A 0
				NUM4 A 0
				NUM5 A 0
				NUM6 A 0
				NUM7 A 0
				NUM8 A 0
				NUM9 A 0
					NUM0 A 1 BRIGHT Offset(175,42)
						{
							if(CountInv("RifleAmmo") >=30) {A_SetOverlaySprite(-5,"NUM3");}
							else if(CountInv("RifleAmmo") >=20) {A_SetOverlaySprite(-5,"NUM2");}
							else if(CountInv("RifleAmmo") >=10) {A_SetOverlaySprite(-5,"NUM1");}
						}
					//RETC A 1 BRIGHT Offset(150,60)
					Stop
			Reticle6:
				NUM0 A 0
				NUM1 A 0
				NUM2 A 0
				NUM3 A 0
				NUM4 A 0
				NUM5 A 0
				NUM6 A 0
				NUM7 A 0
				NUM8 A 0
				NUM9 A 0
				NUM0 A 1 BRIGHT Offset(179,42)
					{
						if((CountInv("RifleAmmo") == 39) || (CountInv("RifleAmmo") == 29) || (CountInv("RifleAmmo") == 19) || (CountInv("RifleAmmo") == 9)) {A_SetOverlaySprite(-6,"NUM9");}
						if((CountInv("RifleAmmo") == 38) || (CountInv("RifleAmmo") == 28) || (CountInv("RifleAmmo") == 18) || (CountInv("RifleAmmo") == 8)) {A_SetOverlaySprite(-6,"NUM8");}
						if((CountInv("RifleAmmo") == 37) || (CountInv("RifleAmmo") == 27) || (CountInv("RifleAmmo") == 17) || (CountInv("RifleAmmo") == 7)) {A_SetOverlaySprite(-6,"NUM7");}
						if((CountInv("RifleAmmo") == 36) || (CountInv("RifleAmmo") == 26) || (CountInv("RifleAmmo") == 16) || (CountInv("RifleAmmo") == 6)) {A_SetOverlaySprite(-6,"NUM6");}
						if((CountInv("RifleAmmo") == 35) || (CountInv("RifleAmmo") == 25) || (CountInv("RifleAmmo") == 15) || (CountInv("RifleAmmo") == 5)) {A_SetOverlaySprite(-6,"NUM5");}
						if((CountInv("RifleAmmo") == 34) || (CountInv("RifleAmmo") == 24) || (CountInv("RifleAmmo") == 14) || (CountInv("RifleAmmo") == 4)) {A_SetOverlaySprite(-6,"NUM4");}
						if((CountInv("RifleAmmo") == 33) || (CountInv("RifleAmmo") == 23) || (CountInv("RifleAmmo") == 13) || (CountInv("RifleAmmo") == 3)) {A_SetOverlaySprite(-6,"NUM3");}
						if((CountInv("RifleAmmo") == 32) || (CountInv("RifleAmmo") == 22) || (CountInv("RifleAmmo") == 12) || (CountInv("RifleAmmo") == 2)) {A_SetOverlaySprite(-6,"NUM2");}
						if((CountInv("RifleAmmo") == 31) || (CountInv("RifleAmmo") == 21) || (CountInv("RifleAmmo") == 11) || (CountInv("RifleAmmo") == 1)) {A_SetOverlaySprite(-6,"NUM1");}
					}
				Stop
		
		Reticle7:
			//TNT1 A 0 A_JumpIf(GetCvar("ReticleStyle")==1,"Stop_Overlay") //For ACS reticle.  To enable (other than the ACS code obviously.  There are three lines in menudef and one in cvarinfo that need to be turned on.
			TNT1 A 0 A_JumpIfInventory("DMRUpgraded",1,"HDMR_Reticle")
		DMR_Reticle:
			RETC B 1 BRIGHT Offset(140,56)
			Stop
		HDMR_Reticle:
			RETC C 1 BRIGHT Offset(135,53)
			Stop
		Stop_Overlay:
			TNT1 A 0 
			Stop
			
		Ready2_Sniper:
			
			H4F6 G 1 BRIGHT {
				
				//Updated code for far superior smooth gameplay
				if(GetCvar("pb_toggle_aim_hold")) {
					if(!PressingAltfire() || JustReleased(BT_ALTATTACK)){
						return state("Zoomout_Sniper");
					}
			
					if (PressingFire() && PressingAltfire() && CountInv("RifleAmmo") > 0){
							return state("Fire2");
					}
					
					
					return A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE);
					
				}
				else {
					if (PressingFire() && CountInv("RifleAmmo") > 0){
						return state("Fire");
					}
					return A_DoPBWeaponAction(WRF_ALLOWRELOAD);
				}
				return state("");
			}
			Loop
			
		Ready2:
			TNT1 A 0 PB_CoolDownBarrel
			H0F2 F 0 A_JumpIf(CountInv("HDMRSniperMode") == 1, "Ready2_Sniper")
			
			R0F7 F 1 {				
				A_Overlay(-7, "Reticle7");
				if (CountInv("DMRUpgraded") == 1) 
					{
						A_SetWeaponSprite("H0F2");
						A_Overlay(-3, "Reticle3");
						//A_Overlay(-4, "Reticle4");	//This is to show if the grenade launcher is loaded or not.  It looks like the GL is not running currently with ADS
						A_Overlay(-5, "Reticle5");
						A_Overlay(-6, "Reticle6");
					}
				
				//Updated code for far superior smooth gameplay
				if(GetCvar("pb_toggle_aim_hold")) {
					if(!PressingAltfire() || JustReleased(BT_ALTATTACK)){
						return state("Zoomout");
					}
			
					if (PressingFire() && PressingAltfire() && CountInv("RifleAmmo") > 0){
							return state("Fire2");
					}
					
					
					return A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE);
					
				}
				else {
					if (PressingFire() && CountInv("RifleAmmo") > 0){
						return state("Fire");
					}
					return A_DoPBWeaponAction(WRF_ALLOWRELOAD);
				}
				return state("");
			}
			Loop
			
		IdleLeft_Overlay:
			H7F2 B 0
			H7F3 B 0
			P2SG B 1 {
				// Full-Auto
				if(CountInv("HasUnloadedDMR") == 1) {
					A_SetOverlaySprite(10, "P2SU");
					}
					
				
				if (CountInv("DMRUpgraded") == 1) {
					if(CountInv("HDMRSniperMode") == 1) {
						A_SetOverlaySprite(10, "H7F3");
						PB_CoolDownBarrel(10, 0, 6);
					}
					else {
						A_SetOverlaySprite(10, "H7F2");
						PB_CoolDownBarrel(10, 0, 6);
					}
				}
				else
				{
					PB_CoolDownBarrel(10, 0, 0);
				}
						
				if(CountInv("LeftRifleAmmo")<=0 && CountInv("RifleAmmo")>0){
					A_GiveInventory("DualFiring",1);
				}
				if((PressingAltFire() || JustPressed(BT_ALTATTACK)) && GetCvar("SingleDualFire") == 2){
					if(CountInv("HDMRSniperMode") == 1 && CountInv("LeftRifleAmmo") > 0) {
							return state("FireLeft_Sniper_Overlay");
					}
					if(CountInv("LeftRifleAmmo") > 0){
						return state("FireLeft_Overlay");
					}
					else {
						A_PlaySoundEx("weapons/empty", "Auto");
						return state("");
					}
				}
				if(CountInv("DualFiring")==0  || CountInv("DualFiring")==0 && CountInv("RifleAmmo")<=0 || GetCvar("SingleDualFire")==1){
					if((PressingFire() || JustPressed(BT_ATTACK)) && GetCvar("SingleDualFire") < 2){
						if(CountInv("HDMRSniperMode") == 1 && CountInv("LeftRifleAmmo") > 0 ) {
							return state("FireLeft_Sniper_Overlay");
						}
						if(CountInv("LeftRifleAmmo") > 0){
							return state("FireLeft_Overlay");
						}
						
						else {
							A_PlaySoundEx("weapons/empty", "Auto");
							return state("");
						}
					}
				}
				if(CountInv("DualWieldingDMRs") == 0) {
					return state("CancelOverlay");
				}
				return state("");
			}
			Loop
		IdleRight_Overlay:
			H7F2 A 0
			H7F3 A 0
			P2SG A 1 {
				// Full-Auto
				if(CountInv("HasUnloadedDMR") == 1) {
					A_SetOverlaySprite(11, "P2SU");
					}
					
				
				if (CountInv("DMRUpgraded") == 1) {
					if(CountInv("HDMRSniperMode") == 1) {
						A_SetOverlaySprite(11, "H7F3");
						PB_CoolDownBarrel(-10, 0, 6);
					}
					else {
						A_SetOverlaySprite(11, "H7F2");
						PB_CoolDownBarrel(-10, 0, 6);
					}
				}
				else
				{
					PB_CoolDownBarrel(-10, 0, 0);
				}
					
				if(CountInv("LeftRifleAmmo")>0 && CountInv("RifleAmmo")<=0){
					A_TakeInventory("DualFiring",1);
				}
				if(CountInv("DualFiring")==1 || (CountInv("DualFiring")==1 && CountInv("LeftRifleAmmo")<=0 || GetCvar("SingleDualFire")==1)){
					if((PressingFire() || JustPressed(BT_ATTACK)) && GetCvar("SingleDualFire")==0){
						if(CountInv("HDMRSniperMode") == 1 && CountInv("RifleAmmo") > 0) {
							return state("FireRight_Sniper_Overlay");
						}
						if(CountInv("RifleAmmo") > 0){
							return state("FireRight_Overlay");
						}
						else {
							A_PlaySoundEx("weapons/empty", "Auto");
							return state("");
						}
					}
				}
				if((PressingAltFire() || JustPressed(BT_ALTATTACK)) && GetCvar("SingleDualFire")==1){
					if(CountInv("HDMRSniperMode") == 1 && CountInv("RifleAmmo") > 0) {
						return state("FireRight_Sniper_Overlay");
					}
					if(CountInv("RifleAmmo") > 0){
						return state("FireRight_Overlay");
					}
					else {
						A_PlaySoundEx("weapons/empty", "Auto");
						return state("");
					}
				}
				if((PressingFire() || JustPressed(BT_ATTACK)) && GetCvar("SingleDualFire")==2){
					if(CountInv("HDMRSniperMode") == 1 && CountInv("RifleAmmo") > 0) {
						return state("FireRight_Sniper_Overlay");
					}
					if(CountInv("RifleAmmo") > 0){
						return state("FireRight_Overlay");
					}
					else {
						A_PlaySoundEx("weapons/empty", "Auto");
						return state("");
					}
				}	
				if(CountInv("DualWieldingDMRs") == 0) {
					return state("CancelOverlay");
				}
				return state("");
			}
			Loop
	
	
	FireLeft_Overlay:
		H7F4 ABCDE 0
	
		R2F4 A 1 BRIGHT {
			PB_IncrementHeat(1, true);
			if (CountInv("DMRUpgraded") == 1) {
				A_SetOverlaySprite(10, "H7F4");
				A_StartSound("weapons/hdmr/fire", CHAN_Weapon, CHANF_DEFAULT, 1.0);
		  PB_DynamicTail("lmg", "lmg");
				A_Overlay(-40,"DualLeftMuzzleFlashHandler_Upgraded");
				PB_SpawnCasing("LMGCasingStandard", 22.5, -23, 20.5,3,frandom(5,6),random(8,9));
			}
			else {
				A_StartSound("weapons/rifle", CHAN_Weapon, CHANF_DEFAULT, 1.0);
		  PB_DynamicTail("lmg", "br");
				A_Overlay(-40,"DualLeftMuzzleFlashHandler");
// 				PB_SpawnCasing("EmptyBrass",28,0,30,3,Frandom(5,8),Frandom(1,4));
				PB_SpawnCasing("PB_EmptyBrass",26,-16,30,0,Frandom(5,8),Frandom(1,4));
			}
		
			
			if(CountInv("DMRUpgraded") == 1) {
				PB_FireBullets("PB_762x51mm",1, 1, 0, 0, 1);
				PB_LowAmmoSoundWarning("hdmr", "LeftRifleAmmo");
			}
			else { 
				PB_FireBullets("PB_556x45mm",1, 1, 0, 0, 1);
				PB_LowAmmoSoundWarning("default", "LeftRifleAmmo");
			}
			
			//A_FireCustomMissile("GunFireSmoke", 0, 0, -4, 0, 0, 0);
			PB_GunSmoke(4,0,0);
			A_AlertMonsters;
			A_ZoomFactor(0.98);
			A_Takeinventory("LeftRifleAmmo",1);
			A_GunFlash;
            PB_WeaponRecoil(-1.4,+0.8);
			}
		R2F4 B 1 BRIGHT {
			if (CountInv("DMRUpgraded") == 1) {
				A_SetOverlaySprite(10, "H7F4");
			}
			A_ZoomFactor(0.99);
            PB_WeaponRecoil(-1.4,+0.8);
			}
		R2F4 C 1 {
			if (CountInv("DMRUpgraded") == 1) {
				A_SetOverlaySprite(10, "H7F4");
			}
			A_ZoomFactor(1.0);
		}
		TNT1 A 0 {
			if(CountInv("LeftRifleAmmo")<=0 || CountInv("RifleAmmo")>0 ){
				A_GiveInventory("DualFiring",1);
			}
		}
		R2F4 DE 1 {
			if (CountInv("DMRUpgraded") == 1) {
				A_SetOverlaySprite(10, "H7F4");
			}
		}
		TNT1 A 0 {
			if(CountInv("LeftRifleAmmo")<=0){
				A_GiveInventory("DualFireReload",1);
			}
		}
		Goto IdleLeft_Overlay
		
	FireRight_Overlay:
		H7F5 ABCDE 0
		R2F5 A 1 BRIGHT {
			PB_IncrementHeat;
			if (CountInv("DMRUpgraded") == 1) {
				A_SetOverlaySprite(11, "H7F5");
				A_StartSound("weapons/hdmr/fire", CHAN_Weapon, CHANF_DEFAULT, 1.0);
		  PB_DynamicTail("lmg", "lmg");
				A_Overlay(-41,"DualRightMuzzleFlashHandler_Upgraded", true);
				PB_SpawnCasing("LMGCasingStandard",  22.5, 10, 20.5,3,frandom(6,7),random(8,9));
			}
			else {
				A_StartSound("weapons/rifle", CHAN_Weapon, CHANF_DEFAULT, 1.0);
		  PB_DynamicTail("lmg", "br");
				A_Overlay(-41,"DualRightMuzzleFlashHandler", true);
				PB_SpawnCasing("PB_EmptyBrass",26,19,30,0,Frandom(5,8),Frandom(1,4));
			}
			
			
			
			if (CountInv("DMRUpgraded") == 1) {
				PB_FireBullets("PB_762x51mm",1, 1, 0, 0, 1);
				PB_LowAmmoSoundWarning(hdmr);
			}
			else { 
				PB_FireBullets("PB_556x45mm",1, 1, 0, 0, 1);
				PB_LowAmmoSoundWarning;
			}
			
			//A_FireCustomMissile("GunFireSmoke", 0, 0, 4, 0, 0, 0);
			PB_GunSmoke(-4,0,0);
			A_AlertMonsters;
			A_ZoomFactor(0.98);
			A_Takeinventory("RifleAmmo",1);
			A_GunFlash;
            PB_WeaponRecoil(-1.4,-0.8);
			}
		R2F5 B 1 BRIGHT {
			if (CountInv("DMRUpgraded") == 1) {
				A_SetOverlaySprite(11, "H7F5");
			}
			A_ZoomFactor(0.99);
            PB_WeaponRecoil(-1.4,-0.8);
			}
		R2F5 C 1 {
			if (CountInv("DMRUpgraded") == 1) {
				A_SetOverlaySprite(11, "H7F5");
			}
			A_ZoomFactor(1.0);
		}
		TNT1 A 0 {
			if(CountInv("LeftRifleAmmo")>0 || CountInv("RifleAmmo")<=0 ){
				A_TakeInventory("DualFiring",1);
			}
		}
		R2F5 DE 1 {
			if (CountInv("DMRUpgraded") == 1) {
				A_SetOverlaySprite(11, "H7F5");
			}
		}
		TNT1 A 0 {
			if(CountInv("RifleAmmo")<=0){
				A_GiveInventory("DualFireReload",1);
			}
		}
		Goto IdleRight_Overlay
		
	FireRight_Sniper_Overlay:
		TNT1 A 0 A_JumpIfInventory("SniperFiringCooldown", 1, "FireRight_Sniper_Cooldown")
		H7F7 A 1 BRIGHT {
			PB_IncrementHeat;
			A_ZoomFactor(0.98);
			A_StartSound("weapons/rifle/sniperfire", CHAN_Weapon, CHANF_DEFAULT, 1.0);
		  PB_DynamicTail("sniper", "sniper");
			
			if(GetCvar("PB_alttracer") >=1) {
				A_RailAttack(0, 0, 0, none,none, RGF_SILENT|RGF_NOPIERCING|RGF_EXPLICITANGLE, 0, none,0.1,0.1,700,0,1,1.0,"Tracer_Trail",-6,0,0);
				A_FireProjectile("PB_762x51mmAP", frandom(-0.1,0.1),0,0,0, FPF_NOAUTOAIM, frandom(-0.1,0.1));
			}
			else { 
				A_FireProjectile("PB_762x51mmAP", frandom(-0.1,0.1),0,0,0, FPF_NOAUTOAIM, frandom(-0.1,0.1));
			}
			A_AlertMonsters;
			PB_LowAmmoSoundWarning("sniper", "SuperMario64ForTheXboxOne", 2);
			A_Takeinventory("RifleAmmo",2);
			PB_SpawnCasing("LMGCasingStandard",26,2,28,0,Frandom(5,8),Frandom(1,4));
			A_Giveinventory("SniperFiringCooldown",1);
			A_FireCustomMissile("ShakeYourAssQuad", 0, 0, 0, 0);
			//A_FireCustomMissile("GunFireSmoke", 0, 0, 4, 0, 0, 0);
			PB_GunSmoke(4,0,0);
			//A_FireCustomMissile("GunFireSmoke", 0, 0, 4, 0, 0, 0);
			PB_GunSmoke(4,0,0);
			//A_FireCustomMissile("GunFireSmoke", 0, 0, 4, 0, 0, 0);
			PB_GunSmoke(4,0,0);
			A_FireCustomMissile("YellowFlareSpawn",0,0,4,0);
			//A_Overlay(-51, "SniperFireCooldown");
			A_Overlay(-42,"DualRightMuzzleFlashHandler_Sniper");
            PB_WeaponRecoil(-6.4,-1.2);
			
			
		}
		H7F7 B 1 BRIGHT {
			A_ZoomFactor(0.99);
            PB_WeaponRecoil(-6.4,-1.2);
			}
		H7F7 CEGIJKKK 1 A_ZoomFactor(1)
		TNT1 A 0 {
			if(CountInv("LeftRifleAmmo")>0 || CountInv("RifleAmmo")<=0 ){
				A_TakeInventory("DualFiring",1);
			}
		}
		H7F7 KKJJHGFEDC 1 A_ZoomFactor(1.0)
		TNT1 A 0 {
				if(CountInv("LeftRifleAmmo")<=0){
					A_GiveInventory("DualFireReload",1);
				}
		}
	//	H7F7 DE 1
	//FireRight_Sniper_Cooldown:
	//	H7F3 A 1 
	//	TNT1 A 0 {
	//		if(CountInv("RifleAmmo")<=0){
	//			A_GiveInventory("DualFireReload",1);
	//		}
	//	}
		Goto IdleRight_Overlay
	
	
	FireLeft_Sniper_Overlay:
		TNT1 A 0 A_JumpIfInventory("LeftSniperFiringCooldown", 1, "FireLeft_Sniper_Cooldown")
		H7F6 A 1 BRIGHT {
			PB_IncrementHeat(1, true);
			A_ZoomFactor(0.98);
			A_StartSound("weapons/rifle/sniperfire", CHAN_Weapon, CHANF_DEFAULT, 1.0);
		  PB_DynamicTail("sniper", "sniper");
			PB_LowAmmoSoundWarning("sniper", "LeftRifleAmmo", 2);
			if(GetCvar("PB_alttracer") >=1) {
				A_RailAttack(0, 0, 0, none,none, RGF_SILENT|RGF_NOPIERCING|RGF_EXPLICITANGLE, 0, none,0.1,0.1,700,0,1,1.0,"Tracer_Trail",-6,0,0);
				A_FireProjectile("PB_762x51mmAP", frandom(-0.1,0.1),0,0,0, FPF_NOAUTOAIM, frandom(-0.1,0.1));
			}
			else { 
				A_FireProjectile("PB_762x51mmAP", frandom(-0.1,0.1),0,0,0, FPF_NOAUTOAIM, frandom(-0.1,0.1));
			}
			A_AlertMonsters;
			A_Takeinventory("LeftRifleAmmo",2);
			PB_SpawnCasing("LMGCasingStandard",26,2,28,0,Frandom(5,8),Frandom(1,4));
			A_Giveinventory("LeftSniperFiringCooldown",1);
			A_FireCustomMissile("ShakeYourAssQuad", 0, 0, 0, 0);
			//A_FireCustomMissile("GunFireSmoke", 0, 0, -4, 0, 0, 0);
			//A_FireCustomMissile("GunFireSmoke", 0, 0, -4, 0, 0, 0);
			//A_FireCustomMissile("GunFireSmoke", 0, 0, -4, 0, 0, 0);
			PB_GunSmoke(-4,0,0);
			PB_GunSmoke(-4,0,0);
			PB_GunSmoke(-4,0,0);
			A_FireCustomMissile("YellowFlareSpawn",0,0,-4,0);
			A_Overlay(-41,"DualLeftMuzzleFlashHandler_Sniper");
			//A_Overlay(-52, "LeftSniperFireCooldown");
            PB_WeaponRecoil(-6.4,1.2);
			
		}
		H7F6 B 1 BRIGHT {
			A_ZoomFactor(0.99);
            PB_WeaponRecoil(-6.4,-1.2);
			}
		H7F6 CEGIJKKK 1 A_ZoomFactor(1.0)
		TNT1 A 0 {
			if(CountInv("LeftRifleAmmo")<=0 || CountInv("RifleAmmo")>0 ){
				A_GiveInventory("DualFiring",1);
			}
		}
		H7F6 KKJJHGFEDL 1 A_ZoomFactor(1.0)
		TNT1 A 0 {
				if(CountInv("LeftRifleAmmo")<=0){
					A_GiveInventory("DualFireReload",1);
				}
			}
	//	  H7F6 DE 1
	//FireLeft_Sniper_Cooldown:
		//H7F3 B 1 
		//TNT1 A 0 {
			//if(CountInv("LeftRifleAmmo")<=0){
			//	A_GiveInventory("DualFireReload",1);
			//}
		//}
		Goto IdleLeft_Overlay
	
	CancelOverlay:
		TNT1 A 0 
		Stop
		
	//CountInv("DMRUpgraded") == 1
	//Left HDMR Sniper flash
	DualLeftMuzzleFlashHandler_Sniper:
		TNT1 A 0 A_Jump(256, "LeftFlash1_Sniper", "LeftFlash2_Sniper", "LeftFlash3_Sniper", "LeftFlash4_Sniper", "LeftFlash5_Sniper")
	LeftFlash1_Sniper:
		MZ42 F 1 BRIGHT
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1_Sniper", "LeftFlashEnd2_Sniper", "LeftFlashEnd3_Sniper", "LeftFlashEnd4_Sniper", "LeftFlashEnd5_Sniper")
		stop
	LeftFlash2_Sniper:
		MZ42 G 1 BRIGHT
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1_Sniper", "LeftFlashEnd2_Sniper", "LeftFlashEnd3_Sniper", "LeftFlashEnd4_Sniper", "LeftFlashEnd5_Sniper")
		stop
	LeftFlash3_Sniper:
		MZ42 H 1 BRIGHT
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1_Sniper", "LeftFlashEnd2_Sniper", "LeftFlashEnd3_Sniper", "LeftFlashEnd4_Sniper", "LeftFlashEnd5_Sniper")
		stop
	LeftFlash4_Sniper:
		MZ42 I 1 BRIGHT
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1_Sniper", "LeftFlashEnd2_Sniper", "LeftFlashEnd3_Sniper", "LeftFlashEnd4_Sniper", "LeftFlashEnd5_Sniper")
		stop
	LeftFlash5_Sniper:
		MZ42 J 1 BRIGHT
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1_Sniper", "LeftFlashEnd2_Sniper", "LeftFlashEnd3_Sniper", "LeftFlashEnd4_Sniper", "LeftFlashEnd5_Sniper")
		stop
	LeftFlashEnd1_Sniper:
		MZ42 K 1 BRIGHT
		stop
	LeftFlashEnd2_Sniper:
		MZ42 L 1 BRIGHT
		stop
	LeftFlashEnd3_Sniper:
		MZ42 M 1 BRIGHT
		stop
	LeftFlashEnd4_Sniper:
		MZ42 N 1 BRIGHT
		stop
	LeftFlashEnd5_Sniper:
		MZ42 O 1 BRIGHT
		stop
		
	//Left HDMR flash
	DualLeftMuzzleFlashHandler_Upgraded:
		TNT1 A 0 A_Jump(256, "LeftFlash1_Upgraded", "LeftFlash2_Upgraded", "LeftFlash3_Upgraded", "LeftFlash4_Upgraded", "LeftFlash5_Upgraded")
	LeftFlash1_Upgraded:
		MZ42 A 1 BRIGHT 
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1_Upgraded", "LeftFlashEnd2_Upgraded", "LeftFlashEnd3_Upgraded", "LeftFlashEnd4_Upgraded", "LeftFlashEnd5_Upgraded")
		stop
	LeftFlash2_Upgraded:
		MZ42 B 1 BRIGHT
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1_Upgraded", "LeftFlashEnd2_Upgraded", "LeftFlashEnd3_Upgraded", "LeftFlashEnd4_Upgraded", "LeftFlashEnd5_Upgraded")
		stop
	LeftFlash3_Upgraded:
		MZ42 C 1 BRIGHT
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1_Upgraded", "LeftFlashEnd2_Upgraded", "LeftFlashEnd3_Upgraded", "LeftFlashEnd4_Upgraded", "LeftFlashEnd5_Upgraded")
		stop
	LeftFlash4_Upgraded:
		MZ42 D 1 BRIGHT
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1_Upgraded", "LeftFlashEnd2_Upgraded", "LeftFlashEnd3_Upgraded", "LeftFlashEnd4_Upgraded", "LeftFlashEnd5_Upgraded")
		stop
	LeftFlash5_Upgraded:
		MZ42 E 1 BRIGHT
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1_Upgraded", "LeftFlashEnd2_Upgraded", "LeftFlashEnd3_Upgraded", "LeftFlashEnd4_Upgraded", "LeftFlashEnd5_Upgraded")
		stop
	LeftFlashEnd1_Upgraded:
		MZ42 F 1 BRIGHT
		stop
	LeftFlashEnd2_Upgraded:
		MZ42 G 1 BRIGHT
		stop
	LeftFlashEnd3_Upgraded:
		MZ42 H 1 BRIGHT
		stop
	LeftFlashEnd4_Upgraded:
		MZ42 I 1 BRIGHT
		stop
	LeftFlashEnd5_Upgraded:
		MZ42 J 1 BRIGHT
		stop
		
	//Left DMR flash
	DualLeftMuzzleFlashHandler:
		TNT1 A 0 A_Jump(256, "LeftFlash1", "LeftFlash2", "LeftFlash3")
	LeftFlash1:
		MZ12 A 1 BRIGHT
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1", "LeftFlashEnd2", "LeftFlashEnd3", "LeftFlashEnd4")
		stop
	LeftFlash2:
		MZ12 B 1 BRIGHT
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1", "LeftFlashEnd2", "LeftFlashEnd3", "LeftFlashEnd4")
		stop
	LeftFlash3:
		MZ12 C 1 BRIGHT
		TNT1 A 0 A_Jump(256, "LeftFlashEnd1", "LeftFlashEnd2", "LeftFlashEnd3", "LeftFlashEnd4")
		stop
	LeftFlashEnd1:
		MZ12 D 1 BRIGHT
		stop
	LeftFlashEnd2:
		MZ12 E 1 BRIGHT
		stop
	LeftFlashEnd3:
		MZ12 F 1 BRIGHT
		stop
	LeftFlashEnd4:
		MZ12 G 1 BRIGHT
		stop
		
	//Right HDMR Sniper flash
	DualRightMuzzleFlashHandler_Sniper:
		TNT1 A 0 A_Jump(256, "RightFlash1_Sniper", "RightFlash2_Sniper", "RightFlash3_Sniper", "RightFlash4_Sniper", "RightFlash5_Sniper")
	RightFlash1_Sniper:
		MZ43 F 1 BRIGHT
		TNT1 A 0 A_Jump(256, "RightFlashEnd1_Sniper", "RightFlashEnd2_Sniper", "RightFlashEnd3_Sniper", "RightFlashEnd4_Sniper", "RightFlashEnd5_Sniper")
		stop
	RightFlash2_Sniper:
		MZ43 G 1 BRIGHT
		TNT1 A 0 A_Jump(256, "RightFlashEnd1_Sniper", "RightFlashEnd2_Sniper", "RightFlashEnd3_Sniper", "RightFlashEnd4_Sniper", "RightFlashEnd5_Sniper")
		stop
	RightFlash3_Sniper:
		MZ43 H 1 BRIGHT
		TNT1 A 0 A_Jump(256, "RightFlashEnd1_Sniper", "RightFlashEnd2_Sniper", "RightFlashEnd3_Sniper", "RightFlashEnd4_Sniper", "RightFlashEnd5_Sniper")
		stop
	RightFlash4_Sniper:
		MZ43 I 1 BRIGHT
		TNT1 A 0 A_Jump(256, "RightFlashEnd1_Sniper", "RightFlashEnd2_Sniper", "RightFlashEnd3_Sniper", "RightFlashEnd4_Sniper", "RightFlashEnd5_Sniper")
		stop
	RightFlash5_Sniper:
		MZ43 J 1 BRIGHT
		TNT1 A 0 A_Jump(256, "RightFlashEnd1_Sniper", "RightFlashEnd2_Sniper", "RightFlashEnd3_Sniper", "RightFlashEnd4_Sniper", "RightFlashEnd5_Sniper")
		stop
	RightFlashEnd1_Sniper:
		MZ43 K 1 BRIGHT
		stop
	RightFlashEnd2_Sniper:
		MZ43 L 1 BRIGHT
		stop
	RightFlashEnd3_Sniper:
		MZ43 M 1 BRIGHT
		stop
	RightFlashEnd4_Sniper:
		MZ43 N 1 BRIGHT
		stop
	RightFlashEnd5_Sniper:
		MZ43 O 1 BRIGHT
		stop
		
	//Right HDMR flash
	DualRightMuzzleFlashHandler_Upgraded:
		TNT1 A 0 A_Jump(256, "RightFlash1_Upgraded", "RightFlash2_Upgraded", "RightFlash3_Upgraded", "RightFlash4_Upgraded", "RightFlash5_Upgraded")
	RightFlash1_Upgraded:
		MZ43 A 1 BRIGHT 
		TNT1 A 0 A_Jump(256, "RightFlashEnd1_Upgraded", "RightFlashEnd2_Upgraded", "RightFlashEnd3_Upgraded", "RightFlashEnd4_Upgraded", "RightFlashEnd5_Upgraded")
		stop
	RightFlash2_Upgraded:
		MZ43 B 1 BRIGHT
		TNT1 A 0 A_Jump(256, "RightFlashEnd1_Upgraded", "RightFlashEnd2_Upgraded", "RightFlashEnd3_Upgraded", "RightFlashEnd4_Upgraded", "RightFlashEnd5_Upgraded")
		stop
	RightFlash3_Upgraded:
		MZ43 C 1 BRIGHT
		TNT1 A 0 A_Jump(256, "RightFlashEnd1_Upgraded", "RightFlashEnd2_Upgraded", "RightFlashEnd3_Upgraded", "RightFlashEnd4_Upgraded", "RightFlashEnd5_Upgraded")
		stop
	RightFlash4_Upgraded:
		MZ43 D 1 BRIGHT
		TNT1 A 0 A_Jump(256, "RightFlashEnd1_Upgraded", "RightFlashEnd2_Upgraded", "RightFlashEnd3_Upgraded", "RightFlashEnd4_Upgraded", "RightFlashEnd5_Upgraded")
		stop
	RightFlash5_Upgraded:
		MZ43 E 1 BRIGHT
		TNT1 A 0 A_Jump(256, "RightFlashEnd1_Upgraded", "RightFlashEnd2_Upgraded", "RightFlashEnd3_Upgraded", "RightFlashEnd4_Upgraded", "RightFlashEnd5_Upgraded")
		stop
	RightFlashEnd1_Upgraded:
		MZ43 F 1 BRIGHT
		stop
	RightFlashEnd2_Upgraded:
		MZ43 G 1 BRIGHT
		stop
	RightFlashEnd3_Upgraded:
		MZ43 H 1 BRIGHT
		stop
	RightFlashEnd4_Upgraded:
		MZ43 I 1 BRIGHT
		stop
	RightFlashEnd5_Upgraded:
		MZ43 J 1 BRIGHT
		stop
		
	//Right DMR flash
	DualRightMuzzleFlashHandler:
		TNT1 A 0 A_Jump(256, "RightFlash1", "RightFlash2", "RightFlash3")
	RightFlash1:
		MZ13 A 1 BRIGHT 
		TNT1 A 0 A_Jump(256, "RightFlashEnd1", "RightFlashEnd2", "RightFlashEnd3", "RightFlashEnd4")
		stop
	RightFlash2:
		MZ13 B 1 BRIGHT
		TNT1 A 0 A_Jump(256, "RightFlashEnd1", "RightFlashEnd2", "RightFlashEnd3", "RightFlashEnd4")
		stop
	RightFlash3:
		MZ13 C 1 BRIGHT
		TNT1 A 0 A_Jump(256, "RightFlashEnd1", "RightFlashEnd2", "RightFlashEnd3", "RightFlashEnd4")
		stop
	RightFlashEnd1:
		MZ13 D 1 BRIGHT
		stop
	RightFlashEnd2:
		MZ13 E 1 BRIGHT
		stop
	RightFlashEnd3:
		MZ13 F 1 BRIGHT
		stop
	RightFlashEnd4:
		MZ13 G 1 BRIGHT
		stop
		
	SelectAnimationDualWield:
		R2FU CD 0
		H6F3 ABCD 0 // HDMR Normal
		H6F4 ABCD 0 // HDMR Sniper
		
		R2F6 AB 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H6F4");
				}
				else {
					A_SetWeaponSprite("H6F3");
				}
			}
		}
		R2F6 CD 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H6F4");
				}
				else {
					A_SetWeaponSprite("H6F3");
				}
			}
			//if(CountInv("HasUnloadedDMR") == 1) {A_SetWeaponSprite("R2FU");}
		}
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/up", "Auto")
	ReadyDualWield:
		P2SU AB 0 //Loads unloaded dual sprites into memory
		TNT1 A 0 {
			A_SetRoll(0);
			PB_HandleCrosshair(58);
			A_TakeInventory("PB_LockScreenTilt",1);
			A_SetFiringRightWeapon(False);
			A_SetFiringLeftWeapon(False);
			A_TakeInventory("DualFiring",1);
			if(CountInv("LeftRifleAmmo") < CountInv("RifleAmmo")){
				A_GiveInventory("DualFiring",1);
			}
// 			if(CountInv("PB_HighCalMag")>0){
// 				if(CountInv("LeftRifleAmmo")<=0){
// 					A_GiveInventory("DualFireReload",1);
// 				}
// 				if(CountInv("RifleAmmo")<=0){
// 					A_GiveInventory("DualFireReload",1);
// 				}
// 			}
			
			// ******** IMPORTANT, SET NOOVERRIDE TO FALSE ********
			A_Overlay(10, "IdleLeft_Overlay", false);
			A_Overlay(11, "IdleRight_Overlay", false);
			}
	ReadyToFireDualWield:
		TNT1 A 0 A_JumpIf(CountInv("UpgradeInspect") == 0 && CountInv("DMRUpgraded") == 1, "InspectUpgrade")
		TNT1 A 1 {
			if(CountInv("PB_HighCalMag")>0){
				if(CountInv("LeftRifleAmmo")<=0 || CountInv("Rifle")<=0){
					if(CountInv("LeftRifleAmmo")<=0 && CountInv("RifleAmmo")<=0){
						A_SetInventory("DualFireReload",2);
					}
					else{
						A_SetInventory("DualFireReload",1);
					}
				}
			}
			if(!PB_CanDualWield())
				{
					A_ClearOverlays(10,11);
					A_setAkimbo(false);
					return state("StopDualWield");
				}
			return A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE);
		}
		Loop
		
	Deselect:
		TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "PlaceBarrel")
		TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "PlaceFlameBarrel")
		TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "PlaceIceBarrel")
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(58);
			A_TakeInventory("PB_LockScreenTilt",1);
			A_ClearOverlays(10,11);
			A_TakeInventory("SniperFiringCooldown",1);
		}
		TNT1 A 0 {	
			A_Takeinventory("Unloading",1);
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			A_ZoomFactor(1.0);
			A_PlaySoundEx("weapons/changing", "Auto");
			}
		
        TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs",1,"DeselectAnimationDualWield")
		H0F4 ABCD 0
		H3F4 ABCD 0
		R0F9 ABCD 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H3F4");
				}
				else {
					A_SetWeaponSprite("H0F4");
				}
			}
		}	
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait
	DeselectAnimationDualWield:
		R2FD AB 0
		H6F5 ABCD 0
		H6F6 ABCD 0
		R2F7 AB 1 {				
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H6F6");
				}
				else {
					A_SetWeaponSprite("H6F5");
				}
			}
			//if(CountInv("HasUnloadedDMR") == 1) {A_SetWeaponSprite("R2FD");}
		}
		R2F7 CD 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H6F6");
				}
				else {
					A_SetWeaponSprite("H6F5");
				}
			}
		}
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait
		
	WeaponSpecial:
		TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "IdleBarrel")
		TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "IdleFlameBarrel")
		TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "IdleIceBarrel")
		TNT1 A 0 {
			A_Takeinventory("GoWeaponSpecialAbility",1);
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			A_GiveInventory("PB_LockScreenTilt",1);
			PB_HandleCrosshair(58);
			A_ZoomFactor(1.0);
			A_ClearOverlays(10,11);
			A_Takeinventory("SniperFiringCooldown",1);
			}
			
		// If no upgrade, skip the wheel
		TNT1 A 0 A_JumpIf(CountInv("DMRUpgraded") < 1, "HandleDualWield")
		// Else, jump state based on wheel selection
		TNT1 A 0 A_JumpIfInventory("SelectDualWieldRifles", 1, "HandleDualWield")
		TNT1 A 0 A_JumpIfInventory("SelectHDMRMode", 1, "HandleHDMRMode")
		TNT1 A 0 A_JumpIfInventory("SelectHDMRGrenade", 1, "HandleRifleGrenade")
		Goto Ready3
	
	
	// ToDo: Implement Mode Switch Animations
	HandleHDMRMode:
		TNT1 A 0 {
			A_Takeinventory("SelectDualWieldRifles",1);
			A_Takeinventory("SelectHDMRMode",1);
			A_Takeinventory("SelectHDMRGrenade",1);
		}
		TNT1 A 0 A_JumpIf(CountInv("HDMRSniperMode") == 1, "HandleHDMRMode_StoN")
	HandleHDMRMode_NtoS:
		TNT1 A 0 {
			A_PlaySoundEx("Ironsights", "Auto");
			A_GiveInventory("HDMRSniperMode",1);
			
			// If 30+1 round chamber, recover the extra round
			if(CountInv("RifleAmmo") >= 31) {
				A_TakeInventory("RifleAmmo", 1);
				A_GiveInventory("PB_HighCalMag", 1);
			}
			if(CountInv("LeftRifleAmmo") >= 31) {
				A_TakeInventory("LeftRifleAmmo", 1);
				A_GiveInventory("PB_HighCalMag", 1);
			}
		}
	RefreshAmmo_NtoS:
		TNT1 A 0 A_JumpIfInventory("RifleAmmo",30,"Continue_NtoS")
		TNT1 A 0 A_JumpIfInventory("PB_HighCalMag",1,1)
		Goto Continue_NtoS
		TNT1 A 0 {
			A_Giveinventory("RifleAmmo",1);
			A_Takeinventory("PB_HighCalMag",1);
			}
		Goto RefreshAmmo_NtoS
	Continue_NtoS:
		H9F0 ABCDEF 0
	
		H2F0 ABCDEF 1 {
			if(CountInv("DualWieldingDMRs") == 1) {
					A_SetWeaponSprite("H9F0");
			}
		}
		
		H2F0 GHIJKLM 1 
		
		TNT1 A 0 A_PlaySoundEx("LIGHTON", "Auto")
		H2F0 NOPQRSTUVWXYZ 1
		H2F1 AB 1 
		
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magout", "Auto")
		H2F1 CDEF 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magchange", "Auto")
		H2F1 GHIJKLM 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magin", "Auto")
		H2F1 NOPQRSTUV 1 
		TNT1 A 0 {
			A_PlaySoundEx("weapons/rifle/magslap", "Auto");
			A_PlaySoundEx("weapons/riflemagslap", "Auto");
		}
		H2F1 WXYZ 1
		
		H2F2 ABCDE 1 
		TNT1 A 0 A_PlaySoundEx("Ironsights", "Auto")
		H2F2 FG 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/scopesmall", "Auto")
		
		
		H2F2 HIJKLM 1 
		H2F2 NOPQRSTUVWXYZ 1
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/scopebig", "Auto")
		H2F3 ABCDEFGHIJKLMNOPQ 1 
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs",1,"NtoS_DW")
		
		H2F3 RSTUVWXYZ 1
		H2F4 AB 1
		Goto Ready3
	NtoS_DW:
		H9F1 ABCDE 1
		Goto ReadyDualWield
	HandleHDMRMode_StoN:
		TNT1 A 0 {
			A_PlaySoundEx("Ironsights", "Auto");
			A_TakeInventory("HDMRSniperMode",1);
		}
	RefreshAmmo_StoN:
		TNT1 A 0 A_JumpIfInventory("RifleAmmo",30,"Continue_StoN")
		TNT1 A 0 A_JumpIfInventory("PB_HighCalMag",1,1)
		Goto Continue_StoN
		TNT1 A 0 {
			A_Giveinventory("RifleAmmo",1);
			A_Takeinventory("PB_HighCalMag",1);
			}
		Goto RefreshAmmo_StoN
	Continue_StoN:
		H9F2 ABCDEF 0
		
		H4F0 ABCDEF 1 {
			if(CountInv("DualWieldingDMRs") == 1) {
					A_SetWeaponSprite("H9F2");
			}
		}
		
		
		H4F0 GHIJKLM 1 
		
		TNT1 A 0 A_PlaySoundEx("LIGHTON", "Auto")
		H4F0 NOPQRSTUVWXYZ 1
		H4F1 AB 1 
		
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magout", "Auto")
		H4F1 CDEF 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magchange", "Auto")
		H4F1 GHIJKLM 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magin", "Auto")
		H4F1 NOPQRSTUV 1 
		TNT1 A 0 {
			A_PlaySoundEx("weapons/rifle/magslap", "Auto");
			A_PlaySoundEx("weapons/riflemagslap", "Auto");
		}
		H4F1 WXYZ 1
		
		H4F2 ABCDE 1 
		TNT1 A 0 A_PlaySoundEx("Ironsights", "Auto")
		H4F2 FG 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/scopebig", "Auto")
		
		
		H4F2 HIJKLM 1 
		H4F2 NOPQRSTUVWXYZ 1
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/scopesmall", "Auto")
		H4F3 ABCDEFGHIJKLMNOPQ 1 
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs",1,"StoN_DW")
		H4F3 RSTUVWXYZ 1
		Goto Ready3
	StoN_DW:
		H9F3 ABCDE 1
		Goto ReadyDualWield
		
	HandleRifleGrenade:
		TNT1 A 0 {
			A_Takeinventory("SelectDualWieldRifles",1);
			A_Takeinventory("SelectHDMRMode",1);
			A_Takeinventory("SelectHDMRGrenade",1);
		}
		TNT1 A 0 {
			A_PlaySoundEx("LIGHTON", "Auto");
			if(CountInv("HDMRGrenadeMode") == 1) {
				A_Print("$PB_HDMRAIM");
				A_TakeInventory("HDMRGrenadeMode",1);
				A_TakeInventory("FiringUnderBarrelGrenadeLauncher");
			}
			else {
				A_Print("$PB_HDMRGRN");
				A_GiveInventory("HDMRGrenadeMode",1);
				A_Overlay(-80,"StopScopeOverlay");
			}
			return state("");
		}
		Goto Ready3
	
	// ToDo: Update sprites based on HDMR mode
	HandleDualWield:
		TNT1 A 0 {
			A_PlaySoundEx("Ironsights", "Auto");
			A_Takeinventory("SelectDualWieldRifles",1);
			A_Takeinventory("SelectHDMRMode",1);
			A_Takeinventory("SelectSingleRifle",1);
		}
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1,"StopDualWield")
		TNT1 A 0 A_JumpIfINventory("Rifle", 2, "SwitchToDualWield")
		TNT1 A 0 A_Print("You need two rifles to dual wield!")
		Goto Ready3
	SwitchToDualWield:
		H6F7 ABCDEF 0
		H6F8 ABCDEF 0
		H7F0 ABCDEF 0
		H7F1 ABCDEF 0
		
		R1F0 ABCD 1 {
			A_Setroll(roll-0.5, SPF_INTERPOLATE);
			
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H7F0");
				}
				else {
					A_SetWeaponSprite("H6F7");
				}
			}
		}
		R1F0 EF 1  {
			A_Setroll(roll+1.0, SPF_INTERPOLATE);
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H7F0");
				}
				else {
					A_SetWeaponSprite("H6F7");
				}
			}
		}
		TNT1 A 0 A_GiveInventory("DualWieldingDMRs",1)
		Goto ReadyDualWield
	StopDualWield:
		H6F7 ABCDEF 0
		H6F8 ABCDEF 0
		H7F0 ABCDEF 0
		H7F1 ABCDEF 0
		R1F0 FEDC 1 {
			A_Setroll(roll+0.5, SPF_INTERPOLATE);
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H7F0");
				}
				else {
					A_SetWeaponSprite("H6F7");
				}
			}
			
		}
		R1F0 BA 1 {
			A_Setroll(roll-1.0, SPF_INTERPOLATE);
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H7F0");
				}
				else {
					A_SetWeaponSprite("H6F7");
				}
			}
		}
			
		TNT1 A 0 A_TakeInventory("DualWieldingDMRs", 1)
		TNT1 A 0 A_TakeInventory("SniperFiringCooldown",1)
		Goto Ready3
		
	Select:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(58);
			A_TakeInventory("PB_LockScreenTilt",1);
			A_ZoomFactor(1);
		}
		TNT1 A 0 A_TakeInventory("HasBarrel",1)
		TNT1 A 0 A_TakeInventory("HasIceBarrel",1)
		TNT1 A 0 A_TakeInventory("HasFlameBarrel",1)
		TNT1 A 0 A_TakeInventory("GrabbedBarrel",1)
		TNT1 A 0 A_TakeInventory("GrabbedIceBarrel",1)
		TNT1 A 0 A_TakeInventory("GrabbedFlameBarrel",1)
		Goto SelectFirstPersonLegs
		SelectContinue:
		TNT1 A 1 ACS_NamedExecuteAlways("ToggleCarbineUpgraded",0) //For people who want this weapon to replace another
		TNT1 A 0 A_Takeinventory("SniperFiringCooldown",1)
		TNT1 A 0 PB_WeapTokenSwitch("RifleSelected")
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Raise
		TNT1 AAAAAAAA 1 A_Raise
		Wait
		
	//This code will be reworked since the new equipment system breaks it
	FireGrenade:
		
		H4F4 ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H4F5 ABCDEFGHIJKLMNOPQRSTUV 0
		
		
		H0F0 E 1 {
			if (CountInv("HDMRSniperMode") == 1) {A_SetWeaponSprite("H4F4");}
	
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
        TNT1 A 0 A_JumpIfInventory("UnderBarrelGrenadeLoaded",1,1)
        Goto ReloadGrenadeLauncher
		TNT1 A 0 {
			A_AlertMonsters;
			A_PlaySound("RFGLLCH");
			A_TakeInventory("UnderBarrelGrenadeLoaded", 1);
			if(GetCvar("pb_toggle_aim_hold")) {
				A_TakeInventory("FiringUnderBarrelGrenadeLauncher",1);
				}
			A_Overlay(-40, "MuzzleFlash1");
			A_ZoomFactor(1.0);
			//A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
			PB_GunSmoke(0,0,0);
			A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
			A_FireCustomMissile("YellowFlareSpawn",0,0,0,0);
			A_FireCustomMissile("PB_FragGrenade", 0, 0, 0, 0);
		}
		
		TNT1 AAAAAA 0 BRIGHT A_FireCustomMissile("ShotgunParticles", random(-16,16), 0, -1, random(-9,9))
		H1F3 AB 1 BRIGHT { 
			if (CountInv("HDMRSniperMode") == 1) {A_SetWeaponSprite("H4F4");}
		}
		TNT1 A 0 A_ZoomFactor(1.0)
		H1F3 CDEFG 1 { 
			if (CountInv("HDMRSniperMode") == 1) {A_SetWeaponSprite("H4F4");}
		}
		Goto ReloadGrenadeLauncher
	ReloadGrenadeLauncher:
        TNT1 A 0 A_JumpIfInventory("UnderBarrelGrenadeLoaded",1,"Ready3")
		TNT1 A 0 A_JumpIfInventory("PB_RocketAmmo",1,3)
		TNT1 A 0 {
			if(GetCvar("pb_toggle_aim_hold")) {
				A_TakeInventory("FiringUnderBarrelGrenadeLauncher",1);
			}
		}
		TNT1 A 0 A_PlaySoundEx("weapons/empty", "Auto")
		Goto Ready3
		H0F0 E 1 {
			if (CountInv("HDMRSniperMode") == 1) {A_SetWeaponSprite("H4F4");}
			
			A_ZoomFactor(1.0);
			A_Takeinventory("ADSmode",1);
			A_Takeinventory("Zoomed",1);
			A_TakeInventory("PB_RocketAmmo",1);
			A_PlaySoundEx("Ironsights", CHAN_AUTO);
		}
		H1F3 HIJKLMNOPQ 1 { 
			if (CountInv("HDMRSniperMode") == 1) {A_SetWeaponSprite("H4F4");}
		}
		TNT1 AAAA 0 A_FireCustomMissile("SmokeSpawner",4,0,0,2)	
		TNT1 A 0 PB_SpawnCasing("EmptyGrenadeBrass",28, -2, 38.25,frandom(-1,0),0,-1)
		TNT1 A 0 A_PlaySoundEx("Weapons/GrenadeOpen", CHAN_AUTO)
		H1F3 RSTUVWX 1 { 
			if (CountInv("HDMRSniperMode") == 1) {A_SetWeaponSprite("H4F4");}
		}
		TNT1 A 0 {
			A_GiveInventory("UnderBarrelGrenadeLoaded", 1);
			A_PlaySoundEx("Weapons/GrenadeLoad", CHAN_AUTO);
		}
			
		H1F3 YZ 1 { 
			if (CountInv("HDMRSniperMode") == 1) {A_SetWeaponSprite("H4F4");}
		}
		H1F4 ABCDE 1 { 
			if (CountInv("HDMRSniperMode") == 1) {A_SetWeaponSprite("H4F5");}
		}
		TNT1 A 0 A_PlaySoundEx("LMGCLK", CHAN_AUTO)
		H1F4 FGHIJKLMNOPQRSTUV 1 { 
			if (CountInv("HDMRSniperMode") == 1) {A_SetWeaponSprite("H4F5");}
		}
		TNT1 A 0 PB_ReFire("FireGrenade")
		Goto Ready3
	
	MuzzleFlashHandler:
		TNT1 A 0 A_JumpIfInventory("DMRUpgraded",1,1)
		Goto NormalMuzzleFlashHandler
	MuzzleFlash1:
		TNT1 A 0 A_Jump(256, "MuzzleFlash1a", "MuzzleFlash1b")
	MuzzleFlash1a:
		MZ01 ABC 1 BRIGHT
		Stop	
	MuzzleFlash1b:
		MZ01 DEF 1 BRIGHT
		Stop
//Unupgraded Muzzle Flash handler
	NormalMuzzleFlashHandler:
		TNT1 A 0 A_Jump(256, "NormalMuzzle1", "NormalMuzzle2", "NormalMuzzle3", "NormalMuzzle4", "BigFlashHandler")
	NormalMuzzle1:
		MZ02 AB 1 BRIGHT
		Stop
	NormalMuzzle2:
		MZ02 AC 1 Bright
		Stop
	NormalMuzzle3:
		MZ02 DE 1 BRIGHT
		Stop
	NormalMuzzle4:
		MZ02 DF 1 BRIGHT
		Stop
	BigFlashHandler:
		TNT1 A 0 A_Jump(256, "BigFlash1", "BigFlash2", "BigFlash3", "BigFlash4", "BigFlash5", "BigFlash6")
	BigFlash1:
		MZ02 GH 1 BRIGHT
		Stop
	BigFlash2:
		MZ02 GI 1 BRIGHT
		Stop
	BigFlash3:
		MZ02 GJ 1 BRIGHT
		Stop
	BigFlash4:
		MZ02 KL 1 BRIGHT
		Stop
	BigFlash5:
		MZ02 KM 1 BRIGHT
		Stop
	BigFlash6:
		MZ02 KN 1 BRIGHT
		Stop
	BiggerMuzzleFlash:
        TNT1 A 0 A_Jump(256, "BiggerMuzzleFlash1Start", "BiggerMuzzleFlash2Start")
    BiggerMuzzleFlash1Start:
        MZ00 A 1 BRIGHT
        //This will jump to the end flash states, so less work is done.
        TNT1 A 0 A_Jump(256, "BiggerMuzzleFlashEnd1", "BiggerMuzzleFlashEnd2", "BiggerMuzzleFlashEnd3", "BiggerMuzzleFlashEnd4", "BiggerMuzzleFlashEnd5", "BiggerMuzzleFlashEnd6")
        Stop
    BiggerMuzzleFlash2Start:
        MZ00 B 1 BRIGHT
        //This will jump to the end flash states, so less work is done.
        TNT1 A 0 A_Jump(256, "BiggerMuzzleFlashEnd1", "BiggerMuzzleFlashEnd2", "BiggerMuzzleFlashEnd3", "BiggerMuzzleFlashEnd4", "BiggerMuzzleFlashEnd5", "BiggerMuzzleFlashEnd6")
        STOP
    BiggerMuzzleFlashEnd1:
        MZ00 C 1 BRIGHT
        STOP
    BiggerMuzzleFlashEnd2:
        MZ00 D 1 BRIGHT
        STOP
    BiggerMuzzleFlashEnd3:
        MZ00 E 1 BRIGHT
        STOP
    BiggerMuzzleFlashEnd4:
        MZ00 F 1 BRIGHT
        STOP
    BiggerMuzzleFlashEnd5:
        MZ00 G 1 BRIGHT
        STOP
	BiggerMuzzleFlashEnd6:
        MZ00 H 1 BRIGHT
        STOP
	BiggestMuzzleFlash:
		TNT1 A 0 A_Jump(256, "BiggestMuzzleFlash1Start", "BiggestMuzzleFlash2Start", "BiggestMuzzleFlash3Start", "BiggestMuzzleFlash4Start", "BiggestMuzzleFlash5Start","BiggestMuzzleFlash6Start")
	BiggestMuzzleFlashStart1:
        MZ00 C 1 BRIGHT
		TNT1 A 0 A_Jump(256, "BiggestMuzzleFlashEnd1", "BiggestMuzzleFlashEnd2")
        STOP
    BiggestMuzzleFlashStart2:
        MZ00 D 1 BRIGHT
		TNT1 A 0 A_Jump(256, "BiggestMuzzleFlashEnd1", "BiggestMuzzleFlashEnd2")
        STOP
    BiggestMuzzleFlashStart3:
        MZ00 E 1 BRIGHT
		TNT1 A 0 A_Jump(256, "BiggestMuzzleFlashEnd1", "BiggestMuzzleFlashEnd2")
        STOP
    BiggestMuzzleFlashStart4:
        MZ00 F 1 BRIGHT
		TNT1 A 0 A_Jump(256, "BiggestMuzzleFlashEnd1", "BiggestMuzzleFlashEnd2")
        STOP
    BiggestMuzzleFlashStart5:
        MZ00 G 1 BRIGHT
		TNT1 A 0 A_Jump(256, "BiggestMuzzleFlashEnd1", "BiggestMuzzleFlashEnd2")
        STOP
	BiggestMuzzleFlashStart6:
        MZ00 H 1 BRIGHT
		TNT1 A 0 A_Jump(256, "BiggestMuzzleFlashEnd1", "BiggestMuzzleFlashEnd2")
        STOP
	BiggestMuzzleFlashEnd1:
		MZ00 JK 1 BRIGHT
		STOP
	BiggestMuzzleFlashEnd2:
		MZ00 IL 1 BRIGHT
		STOP
	
		
    Fire:
		"####" "#" 0 A_JumpIfInventory ("GrabbedBarrel", 1, "ThrowBarrel")
		"####" "#" 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "ThrowFlameBarrel")
		"####" "#" 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "ThrowIceBarrel")
		"####" "#" 0 A_JumpIfInventory("FiringUnderBarrelGrenadeLauncher", 1, "FireGrenade")
		"####" "#" 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(58);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		"####" "#" 0 A_JumpIfInventory("DualWieldingDMRs", 1, "FireDualWield")
		"####" "#" 0 A_JumpIfInventory("Zoomed",1,"Fire2")
		"####" "#" 0 A_JumpIfInventory("HDMRSniperMode",1,"Fire_Sniper")
        "####" "#" 0 A_JumpIfInventory("RifleAmmo",1,2)
		"####" "#" 0 A_PlaySoundEx("weapons/empty", "Auto")
        Goto Reload
		TNT1 A 0 PB_IncrementHeat
		TNT1 A 0 PB_FireOffset
		H0F1 ABCDE 0
		
		R0F8 A 1 BRIGHT {
			
			if (CountInv("DMRUpgraded") == 1) {
				A_Overlay(-40, "BiggerMuzzleFlash");
				A_SetWeaponSprite("H0F1");
				
				
				A_StartSound("weapons/hdmr/fire", CHAN_Weapon, CHANF_DEFAULT, 1.0);
		  PB_DynamicTail("lmg", "lmg");
				
				
				PB_SpawnCasing("LMGCasingStandard",26,2,28,0,Frandom(5,8),Frandom(1,4));
			}
			else {
				A_Overlay(-40, "MuzzleFlashHandler");
				A_StartSound("weapons/rifle", CHAN_Weapon, CHANF_DEFAULT, 1.0);
		  PB_DynamicTail("lmg", "br");
				PB_SpawnCasing("PB_EmptyBrass",26,2,28,0,Frandom(5,8),Frandom(1,4));
			}
		
			if(GetCvar("PB_alttracer") >=1) {
				 A_RailAttack(0, 0, 0, none,none, RGF_SILENT|RGF_NOPIERCING|RGF_EXPLICITANGLE, 0, none,0.1,0.1,700,0,1,1.0,"Tracer_Trail",-6,0,0);
				 
				if (CountInv("DMRUpgraded") == 1) {
					PB_FireBullets("PB_762x51mm",1, 1, 0, 0, 1);
					PB_LowAmmoSoundWarning(hdmr);
					PB_GunSmoke_CompensatorHDMR(0,0,0);
				}
				else { 
					PB_FireBullets("PB_556x45mm",1, 1, 0, 0, 1);
					PB_LowAmmoSoundWarning;
					PB_GunSmoke(0,0,0);
				}
			}
			else {
				
				if (CountInv("DMRUpgraded") == 1) {
					PB_FireBullets("PB_762x51mm",1, 1, 0, 0, 1);
					PB_LowAmmoSoundWarning(hdmr);
					PB_GunSmoke_CompensatorHDMR(0,0,0);
				}
				else { 
					PB_FireBullets("PB_556x45mm",1, 1, 0, 0, 1);
					PB_LowAmmoSoundWarning;
					PB_GunSmoke(0,0,0);
				}
			}

			A_FireCustomMissile("YellowFlareSpawn",0,0,0,0);
			//A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, FPF_NOAUTOAIM, 0);
			//A_FireCustomMissile("RifleCaseSpawn",5,0,8,-9);
			A_Takeinventory("RifleAmmo",1);
			A_AlertMonsters;
			A_ZoomFactor(0.98);
			A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOPRIMARY|WRF_NOBOB);
			A_GunFlash;
            PB_WeaponRecoil(-0.36,-0.02);
			}
		R0F8 B 1 BRIGHT {
			if (CountInv("DMRUpgraded") == 1) {
				A_SetWeaponSprite("H0F1");
			}
			
			A_ZoomFactor(0.99);
			A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOPRIMARY|WRF_NOBOB);
            PB_WeaponRecoil(-0.36,-0.02);
			}
		R0F8 C 1{
			if (CountInv("DMRUpgraded") == 1) {
				A_SetWeaponSprite("H0F1");
			}
			A_ZoomFactor(1.0);
			A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOPRIMARY|WRF_NOBOB);
			}
		R0F8 D 1 { 
			if (CountInv("DMRUpgraded") == 1) {
				A_SetWeaponSprite("H0F1");
			}
			A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOPRIMARY|WRF_NOBOB);
		}
		R0F6 E 1 { 
			if (CountInv("DMRUpgraded") == 1) {
				A_SetWeaponSprite("H0F1");
			}
			A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOPRIMARY|WRF_NOBOB);
		}
		TNT1 A 0 PB_ReFire
		Goto Ready3
	
	SniperFireCooldown:
		TNT1 A 23
		TNT1 A 0 A_Takeinventory("SniperFiringCooldown",1)
		Stop
	//LeftSniperFireCooldown:
		//TNT1 A 18
		//TNT1 A 0 A_Takeinventory("LeftSniperFiringCooldown",1)
		//Stop
		
	
	Fire_Sniper:
		//TNT1 A 0 A_JumpIfInventory("SniperFiringCooldown", 1, "Fire_Cooldown")
        "####" "#" 0 A_JumpIfInventory("RifleAmmo",2,2)
		"####" "#" 0 A_PlaySoundEx("weapons/empty", "Auto")
        Goto Reload
		TNT1 A 0 PB_IncrementHeat
		H4F8 A 1 BRIGHT {
			A_AlertMonsters;
			A_Overlay(-40, "BiggestMuzzleFlash");
			//A_Overlay(-41, "SniperFireCooldown");
			A_StartSound("weapons/rifle/sniperfire", CHAN_Weapon, CHANF_DEFAULT, 1.0);
		  PB_DynamicTail("sniper", "sniper");
			
			if(GetCvar("PB_alttracer") >=1) {
				A_RailAttack(0, 0, 0, none,none, RGF_SILENT|RGF_NOPIERCING|RGF_EXPLICITANGLE, 0, none,0.1,0.1,700,0,1,1.0,"Tracer_Trail",-6,0,0);
				
				A_FireProjectile("PB_762x51mmAP", frandom(-0.1,0.1),0,0,0, FPF_NOAUTOAIM, frandom(-0.1,0.1));
			}
			else { 				
				A_FireProjectile("PB_762x51mmAP", frandom(-0.1,0.1),0,0,0, FPF_NOAUTOAIM, frandom(-0.1,0.1));
			}
			PB_SpawnCasing("LMGCasingStandard",26,2,28,0,Frandom(5,8),Frandom(1,4));
			PB_LowAmmoSoundWarning("sniper", "SuperMario64ForTheXboxOne", 2);
			A_Takeinventory("RifleAmmo",2);
			//A_Giveinventory("SniperFiringCooldown",1);
			A_FireCustomMissile("ShakeYourAssQuad", 0, 0, 0, 0);
			//A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
			//A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
			//A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
			PB_GunSmoke_CompensatorHDMR(0,0,0);
			A_FireCustomMissile("YellowFlareSpawn",0,0,0,0);
			PB_WeaponRecoil(-15.65,-0.22);
		}
		H4F8 B 1 BRIGHT 
		H4F8 CEGIK 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOPRIMARY|WRF_NOBOB)
		H4F8 K 1 Offset(0,34)
		H4F8 K 2 Offset(0,36)
		H4F8 K 3 Offset(0,38)
		H4F8 K 1 Offset(0,34)
		H4F8 JJIHGFED 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOPRIMARY|WRF_NOBOB)
		Goto Ready3
	//Fire_Cooldown:
		//H3F0 E 1 
		//Goto Ready3
	
	Fire2_Sniper:
		TNT1 A 0 A_JumpIfInventory("SniperFiringCooldown", 1, "Fire2_Cooldown")
        TNT1 A 0 A_JumpIfInventory("RifleAmmo",2,2)
		TNT1 A 0 A_PlaySoundEx("weapons/empty", "Auto")
        Goto Reload
		H4F6 G 1 BRIGHT {
			A_AlertMonsters;
		//	A_Overlay(-40, "BigFlashHandler");
			A_Overlay(-41, "SniperFireCooldown");
			A_StartSound("weapons/rifle/sniperfire", CHAN_Weapon, CHANF_DEFAULT, 1.0);
		  PB_DynamicTail("sniper", "sniper");
			
			if(GetCvar("PB_alttracer") >=1) {
				A_RailAttack(0, 0, 0, none,none, RGF_SILENT|RGF_NOPIERCING|RGF_EXPLICITANGLE, 0, none,0.1,0.1,700,0,1,1.0,"Tracer_Trail",-6,0,0);
				A_FireProjectile("PB_762x51mmAP", frandom(-0.1,0.1),0,0,0, FPF_NOAUTOAIM, frandom(-0.1,0.1));
			}
			else { 
// 				A_FireBullets (0, 0, -1, 0, "HitPuff", FBF_NORANDOM,8192,none, 0,0);
				A_FireProjectile("PB_762x51mmAP", frandom(-0.1,0.1),0,0,0, FPF_NOAUTOAIM, frandom(-0.1,0.1));
			}
			PB_SpawnCasing("LMGCasingStandard",26,2,28,0,Frandom(5,8),Frandom(1,4));
			PB_LowAmmoSoundWarning("sniper", "SuperMario64ForTheXboxOne", 2);
			A_Takeinventory("RifleAmmo",2);
			A_Giveinventory("SniperFiringCooldown",1);
			A_FireCustomMissile("ShakeYourAssQuad", 0, 0, 0, 0);
			//A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
			//A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
			//A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
			
		}
		H4F6 G 1 BRIGHT Offset(0,34){
			PB_WeaponRecoil(-2.65,-0.22);
		}
			
		H4F6 G 1 BRIGHT Offset(0,36)
		H4F6 G 1 BRIGHT Offset(0,34)
		H4F6 G 1 BRIGHT Offset(0,32)
		Goto Ready2
	Fire2_Cooldown:
		H4F6 G 1 BRIGHT
		Goto Ready2
		
	
	 Fire2:
		"####" "#" 0 {
			A_WeaponOffset(0,32);
			A_SetCrosshair(5);
			}
		"####" "#" 0 A_JumpIfInventory("HDMRSniperMode",1,"Fire2_Sniper")
        "####" "#" 0 A_JumpIfInventory("RifleAmmo",1,5)
		"####" "#" 0 A_PlaySoundEx("weapons/empty", "Auto")
        Goto Reload
		TNT1 A 0 PB_FireOffset
		R1F1 AB 0
		R1F2 AB 0
		H0F3 ABCD 0
		R1F1 A 1 BRIGHT {
			PB_IncrementHeat;
			//A_WeaponReady(WRF_NOPRIMARY);
			//int chance = (random(1,256));
			A_Overlay(-7, "Reticle7");
			if (CountInv("DMRUpgraded") == 1) {
				A_SetWeaponSprite("H0F3");
				A_Overlay(-3, "Reticle3");
				//A_Overlay(-4, "Reticle4");	//This is to show if the grenade launcher is loaded or not.  It looks like the GL is not running currently with ADS
				A_Overlay(-5, "Reticle5");
				A_Overlay(-6, "Reticle6");
				A_StartSound("weapons/hdmr/fire", CHAN_Weapon, CHANF_DEFAULT, 1.0);
		  PB_DynamicTail("lmg", "lmg");
				PB_SpawnCasing("LMGCasingStandard",26,2,28,0,Frandom(5,8),Frandom(1,4));
				PB_GunSmoke_CompensatorHDMR(0,0,0);
			}
			else {
				A_StartSound("weapons/rifle", CHAN_Weapon, CHANF_DEFAULT, 1.0);
		  PB_DynamicTail("lmg", "br");
				PB_SpawnCasing("PB_EmptyBrass",28,0,30,3,Frandom(5,8),Frandom(1,4));
				PB_GunSmoke(0,0,0);
			}
			
			
			if(GetCvar("PB_alttracer") >=1)
				{
				 A_RailAttack(0, 0, 0, none,none, RGF_SILENT|RGF_NOPIERCING|RGF_EXPLICITANGLE, 0, none,0.1,0.1,700,0,1,1.0,"Tracer_Trail",-6,0,0);
				 
				if (CountInv("DMRUpgraded") == 1) {
					PB_FireBullets("PB_762x51mm",1, 0.1, 0, 0, 0.1);
					PB_LowAmmoSoundWarning(hdmr);
				}
				else { 
					PB_FireBullets("PB_556x45mm",1, 0.1, 0, 0, 0.1);
					PB_LowAmmoSoundWarning;
				}
			}
			else {
				if (CountInv("DMRUpgraded") == 1) {
					PB_FireBullets("PB_762x51mm",1, 0.1, 0, 0, 0.1);
					PB_LowAmmoSoundWarning(hdmr);
				}
				else { 
					PB_FireBullets("PB_556x45mm",1, 0.1, 0, 0, 0.1);
					PB_LowAmmoSoundWarning;
				}
			}
			A_AlertMonsters;
			A_Takeinventory("RifleAmmo",1);
			//A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 3, 0, 0);
			A_FireCustomMissile("YellowFlareSpawn",0,0,0,0);
			A_ZoomFactor(2.485);
            PB_WeaponRecoil(-0.2,-0.02);
		}
		R1F1 B 1 BRIGHT {
			//int chance = (random(1,256));
			A_Overlay(-7, "Reticle7");
			if (CountInv("DMRUpgraded") == 1) 
				{
					A_Overlay(-3, "Reticle3");
					//A_Overlay(-4, "Reticle4");	//This is to show if the grenade launcher is loaded or not.  It looks like the GL is not running currently with ADS
					A_Overlay(-5, "Reticle5");
					A_Overlay(-6, "Reticle6");
					A_SetWeaponSprite("H0F3");
				}
			A_ZoomFactor(2.49);
			//A_WeaponReady(WRF_NOPRIMARY);
			PB_WeaponRecoil(-0.2,-0.02);
			}
        R1F1 C 1 {
			A_Overlay(-7, "Reticle7");
			if (CountInv("DMRUpgraded") == 1) 
				{	
					A_Overlay(-3, "Reticle3");
					//A_Overlay(-4, "Reticle4");	//This is to show if the grenade launcher is loaded or not.  It looks like the GL is not running currently with ADS
					A_Overlay(-5, "Reticle5");
					A_Overlay(-6, "Reticle6");
					A_SetWeaponSprite("H0F3");
				}
			A_ZoomFactor(2.5);
			//A_WeaponReady(WRF_NOPRIMARY);
			}
		R1F1 D 1 {
			A_Overlay(-7, "Reticle7");
			if (CountInv("DMRUpgraded") == 1) 
				{
					A_Overlay(-3, "Reticle3");
					//A_Overlay(-4, "Reticle4");	//This is to show if the grenade launcher is loaded or not.  It looks like the GL is not running currently with ADS
					A_Overlay(-5, "Reticle5");
					A_Overlay(-6, "Reticle6");
					A_SetWeaponSprite("H0F3");
				}
		}
		R0F7 F 1 {
			A_Overlay(-7, "Reticle7");
			if (CountInv("DMRUpgraded") == 1) 
				{
					A_Overlay(-3, "Reticle3");
					//A_Overlay(-4, "Reticle4");	//This is to show if the grenade launcher is loaded or not.  It looks like the GL is not running currently with ADS
					A_Overlay(-5, "Reticle5");
					A_Overlay(-6, "Reticle6");
					A_SetWeaponSprite("H0F2");
				}
			if(GetCvar("pb_toggle_aim_hold")) {
				if(JustReleased(BT_ALTATTACK)){
					return state("Zoomout");
				}
		
				if (JustPressed(BT_ATTACK) && PressingAltfire()){
						return state("Fire2");
				}
			}
			else {
				if(PressingAltfire()){
					return state("Zoomout");
				}
				
				if (JustPressed(BT_ATTACK)){
						return state("Fire2");
				}
				
			}
			return state("");
		}
		Goto Ready2
		
	ZoomIn_Sniper:
		TNT1 A 0 A_StartSound("IronSights", 0)
		TNT1 A 0 A_JumpIfInventory("Zoomed",1,"Zoomout_Sniper")
		TNT1 A 0 {
			A_ZoomFactor(5.0);
			A_GunFlash("LightDone",GFF_NOEXTCHANGE);
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(58);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		H4F6 ABCDEF 1
		TNT1 A 0 {
			A_Giveinventory("Zoomed",1);
			A_Giveinventory("ADSmode",1);
			A_SetCrosshair(5);
			A_WeaponReady(WRF_NOSECONDARY);
			A_Overlay(-80,"ScopeOverlayPeriphery");
		}
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY)
		GoTo Ready2_Sniper
		
	ScopeOverlayPeriphery:
		H4F6 Z 1 
		H4F6 Z 0 A_JumpIf(CountInv("Zoomed") < 1, 1)
		Loop
		TNT1 A 0 
		Stop
	StopScopeOverlay:
		TNT1 A 5
		STOP
		
	Zoomout_Sniper:
		TNT1 A 0 {	
			A_GunFlash("LightDone",GFF_NOEXTCHANGE);
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			PB_HandleCrosshair(58);
			A_ZoomFactor(1.0);
		}
		H4F7 ABCDEF 1
		Goto Ready3
	
    AltFire:
		TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "PlaceBarrel")
		TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "PlaceFlameBarrel")
		TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "PlaceIceBarrel")
		TNT1 A 0 {
			A_GunFlash("LightDone",GFF_NOEXTCHANGE);
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(58);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		TNT1 A 0 A_JumpIfInventory("HDMRGrenadeMode", 1, "FireGrenade")
		TNT1 A 0 A_JumpIfInventory("HDMRSniperMode", 1, "ZoomIn_Sniper")
		
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1, "ReadyToFireDualWield")
		TNT1 A 0 A_StartSound("IronSights", 0)
		TNT1 A 0 A_JumpIfInventory("Zoomed",1,"Zoomout")
		TNT1 A 0 A_ZoomFactor(2.5)
		H0F2 ABCDE 0
        R0F7 ABCDE 1 {
				if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F2");}
		}
		TNT1 A 0 {
			A_Giveinventory("Zoomed",1);
			A_Giveinventory("ADSmode",1);
			A_SetCrosshair(5);
			A_WeaponReady(WRF_NOSECONDARY);
			}
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY)
        Goto Ready2
	Zoomout:
		TNT1 A 0 {	
			A_GunFlash("LightDone",GFF_NOEXTCHANGE);
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			PB_HandleCrosshair(58);
			A_ZoomFactor(1.0);
			}
        R0F7 EDCBA 1 {
				if (CountInv("DMRUpgraded") == 1) {A_SetWeaponSprite("H0F2");}
		}
		TNT1 A 0 A_WeaponReady(WRF_NOSECONDARY)
        Goto Ready3
	
	NoAmmo:
		"####" "#" 1 
		Goto Ready3
		
	
		
	BarrelSmoke3:
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, 0, 0, 0, 0)
		TNT1 B 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -1, 0, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 0, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 0, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 1, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 2, 0, 0)
		TNT1 A 0 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 2, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -3, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -3, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -3, 3, 0, 0)
		
		TNT1 AAAAAAA 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 3, 0, 0)
		
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 3, 0, 0)
		
		TNT1 AAAAAAAAAAAA 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -3, 3, 0, 0)
		
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -3, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -2, 3, 0, 0)
		TNT1 AAA 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -1, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -1, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -1, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -1, 3, 0, 0)
		TNT1 A 1 A_FireCustomMissile("GunBarrelSmoke", 0, 0, -1, 3, 0, 0)
		Stop
	
	HDMRReloadUnloaded:
		H5F4 ABCDEFGHIJKLMNOPQRSTUVWXY 0
		H0F9 ABCDEFGHIJKLM 1 {
			if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F4");
				}
			}
		TNT1 A 0 A_TakeInventory("HasUnloadedDMR", 1)
		H0F9 NO 1 {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F4");
				}
			}
		H0F9 P 1 {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F4");
				}
			A_PlaySoundEx("weapons/rifle/magin", "Auto");
		}
		H0F9 QRSTUVWXY 1 {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F4");
				}
			}
		Goto FinishingReload
		
	ReloadUnloaded:
		TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "IdleBarrel")
		TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "IdleFlameBarrel")
		TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "IdleIceBarrel")
		TNT1 A 0 A_JumpIfInventory("DMRUpgraded",1,"HDMRReloadUnloaded")
		R5F3 ABCDEFGHIJKL 1
		Goto ResumeReload
    Reload:
		"####" "#" 0 A_JumpIfInventory ("GrabbedBarrel", 1, "IdleBarrel")
		"####" "#" 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "IdleFlameBarrel")
		"####" "#" 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "IdleIceBarrel")
		"####" "#" 0 {
			A_ZoomFactor(1.0);
			A_Takeinventory("ADSmode",1);
			A_Takeinventory("Zoomed",1);
		}
		"####" "#" 0 A_JumpIfInventory("DualWieldingDMRs", 1, "ReloadDualWield")
		"####" "#" 0 A_JumpIfInventory("RifleAmmo",31,"Ready3")
        "####" "#" 0 {
			
			// Check rifle mode and if mag is already full
			if(CountInv("HDMRSniperMode") == 1 && CountInv("RifleAmmo") >= 30) {
				return state("Ready3");
			}
			else if (CountInv("HDMRSniperMode") == 0 && CountInv("RifleAmmo") >= 31){
				return state("Ready3");
			}
		
		
			if (CountInv("HDMRSniperMode") == 1 && CountInv("PB_HighCalMag") >= 2) {
				return state("ContinueReloading");
			}
			else if (CountInv("HDMRSniperMode") == 0 && CountInv("PB_HighCalMag") >= 1){
				return state("ContinueReloading");
			}
			return state("");
		}
		
        Goto NoAmmo
	ContinueReloading:
		TNT1 A 0 {
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			A_ZoomFactor(1.0);
			A_Giveinventory("PB_LockScreenTilt",1);
			A_SetCrosshair(5);
			A_PlaySoundEx("Ironsights", "Auto");
			A_ClearOverlays(10,11);
			
		}
		H0F5 ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H0F6 ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H0F7 ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H0F8 ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		
		H5F0 ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H5F1 ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H5F2 ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H5F3 ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		
		TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR", 1, "ReloadUnloaded")
		R2F0 ABCDEFGHIJKLMNOPQR 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F0");
				}
				else {
					A_SetWeaponSprite("H0F5");
				}
			}
		}
		R2F0 S 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F0");
				}
				else {
					A_SetWeaponSprite("H0F5");
				}
			}
			A_PlaySoundEx("weapons/rifle/magout", "Auto");
		}
		R2F0 TUV 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F0");
				}
				else {
					A_SetWeaponSprite("H0F5");
				}
			}
		}
		R2F0 W 1  {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F0");
				}
				else {
					A_SetWeaponSprite("H0F5");
				}
			}
			A_PlaySoundEx("weapons/rifle/magchange", "Auto");
		}
		TNT1 A 0 {
			if(CountInv("RifleAmmo") < 1 && CountInv("HDMRSniperMode") != 1) {
				PB_SpawnCasing("EmptyDMRMag",38,26,7,frandom(0, 3.5),frandom(-7.2, -3.3),frandom(3,7));
				}
			if(CountInv("RifleAmmo") < 1 && CountInv("DMRUpgraded") == 1 && CountInv("HDMRSniperMode") == 1) {
				PB_SpawnCasing("EmptyHDMRMag_Sniper",38,18,7,frandom(0, 3.5),frandom(-7.2, -3.3),frandom(3,7));
				}
			}
		R2F0 XYZ 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F0");
				}
				else {
					A_SetWeaponSprite("H0F5");
				}
			}
		}
		TNT1 A 0 A_PlaySoundEx("Ironsights", "Auto")
	ResumeReload:
		TNT1 A 0 A_TakeInventory("HasUnloadedDMR", 1)
		R2F1 ABC 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F1");
				}
				else {
					A_SetWeaponSprite("H0F6");
				}
			}
		}
		R2F1 D 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F1");
				}
				else {
					A_SetWeaponSprite("H0F6");
				}
			}
			A_PlaySoundEx("weapons/rifle/magin", "Auto");
		}
		R2F1 EFGHIJKL 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F1");
				}
				else {
					A_SetWeaponSprite("H0F6");
				}
			}
		}
	FinishingReload:
		R2F1 M 1 {
			A_PlaySoundEx("weapons/rifle/magslap", "Auto");
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F1");
				}
				else {
					A_SetWeaponSprite("H0F6");
				}
			}
		}
		TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
		R2F1 NOPQRS 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F1");
				}
				else {
					A_SetWeaponSprite("H0F6");
				}
			}
		}
		R2F1 TUVWXYZ 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F1");
				}
				else {
					A_SetWeaponSprite("H0F6");
				}
			}
		}
 		TNT1 A 0 A_JumpIfInventory("RifleAmmo",1,"NormalReload")
	LoadChamber:
		TNT1 A 0 A_PlaySoundEx("Ironsights", "Auto")
		R2F3 ABCD 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F3");
				}
				else {
					A_SetWeaponSprite("H0F8");
				}
			}
		}
		TNT1 A 0 A_PlaySoundEx("RIFCL_CK", "auto")
		R2F3 EFGHIJKLMNOPQRSTUV 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F3");
				}
				else {
					A_SetWeaponSprite("H0F8");
				}
			}
		}
 		TNT1 A 0 A_JumpIfInventory("HDMRSniperMode",1,"InsertBulletsSniper")
		Goto InsertBullets
	NormalReload:
		R2F2 ABCDEFG 1 {
			
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H5F2");
				}
				else {
					A_SetWeaponSprite("H0F7");
				}
			}
			
		}
 		TNT1 A 0 A_JumpIfInventory("HDMRSniperMode",1,"InsertBulletsSniper")
		Goto InsertBullets2
	SkipLeftReload:
		R2F6 ABCD 1
 		Goto InsertBullets4		
		
	SkipRightReload:
		R2F7 ABCD 1
		Goto ReloadLeftGun
	
	NoAmmoDualSniper:
		H6F4 E 1
		Goto ReadyDualWield	
		
	ReloadDualWield:
        TNT1 A 0 A_JumpIfInventory("PB_HighCalMag",1,1)
        Goto ReadyDualWield
		TNT1 A 0 {
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			A_ZoomFactor(1.0);
			A_Giveinventory("PB_LockScreenTilt",1);
			A_SetCrosshair(5);
			A_ClearOverlays(10,11);
			}
		TNT1 A 0 
		{
			if(CountInv("HDMRSniperMode") >= 1 && CountInv("PB_HighCalMag") < 2)
			{
				return state("NoAmmoDualSniper");
			}
			return state("");
		}
		TNT1 A 0 A_JumpIfInventory("DMRUpgraded", 1, "Upgraded_DWReloadUnloaded")
		TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR", 1, "DWReloadUnloaded")
		
		TNT1 A 0 {
			if (CountInv("RifleAmmo") >= 31 && CountInv("LeftRifleAmmo") >= 31) {
				return state("ReadyDualWield");
			}
			return state("");
		}
		TNT1 A 0 A_PlaySoundEx("Ironsights", "Auto")
 		TNT1 A 0 A_JumpIfInventory("RifleAmmo",31,"SkipRightReload")
		R3F0 ABCDEFGHIJKLMN 1
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magout", "Auto")
		R3F0 OPQRSTUVW 1
		TNT1 A 0 {
			if(CountInv("RifleAmmo") < 1) {
				if(CountInv("DMRUpgraded") != 1 || CountInv("HDMRSniperMode") != 1) {
					PB_SpawnCasing("EmptyDMRMag",38,26,7,frandom(0, 3.5),frandom(-7.2, -3.3),frandom(3,7));
				}
				else {
					PB_SpawnCasing("EmptyHDMRMag_Sniper",38,18,7,frandom(0, 3.5),frandom(-7.2, -3.3),frandom(3,7));
				}
			}
		}
		R3F0 XYZ 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magchange", "Auto")
		R3F1 ABCD 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magin", "Auto")
		R3F1 EFGHIJKLMN 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magslap", "Auto")
		TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
		R3F1 OPQRSTUVWXYZ 1 
		R3F2 A 1 
	ReloadLeftGun:
		TNT1 A 3
 		TNT1 A 0 A_JumpIfInventory("LeftRifleAmmo",31,"SkipLeftReload")
		R3F2 BCDEFGHIJKLMN 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magout", "Auto")
		R3F2 OPQR 1
		TNT1 A 0 {
			if(CountInv("LeftRifleAmmo") < 1) {
				PB_SpawnCasing("EmptyDMRMag",38,-20,7,frandom(0, 3.5),frandom(3.3, 7.2),frandom(3,7));
				}
			}
		R3F2 ST 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magchange", "Auto")
		R3F2 UVWX 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magin", "Auto")
		R3F2 YZ 1
		R3F3 ABCDEFGHI 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magslap", "Auto")
		TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
		R3F3 JKLMN 1 
		R3F3 OP 1
		TNT1 A 0 A_JumpIfInventory("DMRUpgraded", 1, "InsertBullets4")
		R3F3 QRSTUVWXYZ 1
 		Goto InsertBullets4
		
	DWReloadUnloaded:
		R8F3 ABCDEFGHI 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magchange", "Auto")
		R8F3 JKL 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magin", "Auto")
		R8F3 MNOPQRSTUV 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magslap", "Auto")
		TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
		R8F3 WXYZ 1
		R8F4 ABCDEFGHIJKL 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magchange", "Auto")
		R8F4 MNO 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magin", "Auto")
		R8F4 PQRSTUVWXY 1 
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magslap", "Auto")
		TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
		R8F4 Z 1
		R8F5 ABCDEFGHIJKLMNO 1
 		Goto InsertBullets4
		
	
	Upgraded_SkipLeftReload:
		H6F4 ABCD 0
		H6F3 ABCD 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H6F4");
			}
		}
 		Goto Upgraded_InsertBullets4
		
		
	Upgraded_SkipRightReload:
		H6F6 ABCD 0
		H6F5 ABCD 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H6F6");
			}
		}
		Goto Upgraded_ReloadLeftGun
		
	Upgraded_DWReloadUnloaded:
		H8F4 ABCDEFGHIJKLMNYZ 0
		H9F4 ABCDEFGHIJKLMNYZ 0
		H90F ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H91F ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H92F ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H93F ABCDEFGHIJKLMNOP 0
		H94F ABCDEFGHIJKLMNYZ 0
		TNT1 A 0 A_PlaySoundEx("Ironsights", "Auto")
		
		TNT1 A 0 {
			if (CountInv("RifleAmmo") >= 31 && CountInv("LeftRifleAmmo") >= 31 && CountInv("HDMRSniperMode") != 1) {
				return state("ReadyDualWield");
			}
			
			if(CountInv("RifleAmmo") >= 30 && CountInv("LeftRifleAmmo") >= 30 && CountInv("HDMRSniperMode") == 1) {
				return state("ReadyDualWield");
			}
			return state("");
		}
 		TNT1 A 0 {
			if (CountInv("RifleAmmo") >= 31 && CountInv("HDMRSniperMode") != 1) {
				return state("Upgraded_SkipRightReload");
			}
			
			if(CountInv("RifleAmmo") >= 30 && CountInv("HDMRSniperMode") == 1) {
				return state("Upgraded_SkipRightReload");
			}
			return state("");
		}
		
		
		H8F0 ABCDEFGHIJKLMN 1 {
				if(CountInv("HasUnloadedDMR") == 1) {
					if(CountInv("HDMRSniperMode") == 1)
					{A_SetWeaponSprite("H9F4");}
					else
					{
						A_SetWeaponSprite("H8F4");
					}
				}
				if(CountInv("HDMRSniperMode") == 1 && CountInv("HasUnloadedDMR") != 1) {
					A_SetWeaponSprite("H90F");
				}			
			}
		TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR",1,"Continue_DWUpgradedReloadRight")
		H8F0 OPQRS 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H90F");
			}
		}
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magout", "Auto")
		H8F0 TUVW 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H90F");
			}
		}
		TNT1 A 0 {
			if(CountInv("RifleAmmo") < 1){
			if(CountInv("HDMRSniperMode") == 1) {
				PB_SpawnCasing("EmptyHDMRMag_Sniper",38,26,7,frandom(0, 3.5),frandom(-7.2, -3.3),frandom(3,7));
				}
			else {
				PB_SpawnCasing("EmptyDMRMag",38,26,7,frandom(0, 3.5),frandom(-7.2, -3.3),frandom(3,7));
				}
			}
		}
		H8F0 XYZ 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H90F");
			}
		}
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magchange", "Auto")
		H8F1 ABC 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H91F");
			}
		}
	Continue_DWUpgradedReloadRight:
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magin", "Auto")
		H8F1 DEFGHIJKLMN 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H91F");
			}
		}
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magslap", "Auto")
		TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
		H8F1 OPQRSTUVWX 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H91F");
			}
		}
	Upgraded_ReloadLeftGun:
		TNT1 A 3
		H8F6 LMNOPQR 0
		H96F LMNOPQR 0
 		TNT1 A 0 {
			if (CountInv("LeftRifleAmmo") >= 31 && CountInv("HDMRSniperMode") != 1) {
				return state("Upgraded_SkipLeftReload");
			}
			
			if(CountInv("LeftRifleAmmo") >= 30 && CountInv("HDMRSniperMode") == 1) {
				return state("Upgraded_SkipLeftReload");
			}
			return state("");
		}
		TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR",1,"Reload_LeftUpgradedUnload")
		H8F1 YZ 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H91F");
			}
		}
		H8F2 ABCDEFGHIJK 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H92F");
			}
		}
		TNT1 A 0 A_StartSound("weapons/rifle/magout", 0)
		Continue_DWReloadLeft:
		H8F2 LMNOPQR 1 {
			if(CountInv("HasUnloadedDMR") == 1) {
						A_SetWeaponSprite("H8F6");
					}
			if(CountInv("HDMRSniperMode") == 1 && CountInv("HasUnloadedDMR") == 1) {
				A_SetWeaponSprite("H9F6");
			}
			if(CountInv("HDMRSniperMode") == 1 && CountInv("HasUnloadedDMR") != 1) {
					A_SetWeaponSprite("H92F");
				}
			}
		TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR",1,"Finish_DWReloadLeft")
		TNT1 A 0 {
			if(CountInv("LeftRifleAmmo") < 1) {
				if(CountInv("HDMRSniperMode") == 1) {
				PB_SpawnCasing("EmptyHDMRMag_Sniper",38,-20,7,frandom(0, 3.5),frandom(3.3, 7.2),frandom(3,7));
				}
				else {
				PB_SpawnCasing("EmptyDMRMag",38,-20,7,frandom(0, 3.5),frandom(3.3, 7.2),frandom(3,7));
				}
			}
		}
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magchange", "Auto")
		H8F2 STU 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H92F");
			}
		}
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magin", "Auto")
		H8F2 VWXY 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H92F");
			}
		}
		
		H8F2 Z 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H92F");
			}
		}
		H8F3 ABCDE 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H93F");
			}
		}
		Finish_DWReloadLeft:
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magslap", "Auto")
		TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
		H8F3 FGHI 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H93F");
			}
		}
		H8F3 JKLMN 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H93F");
			}
		}
		H8F3 OP 1 {
			if(CountInv("HDMRSniperMode") == 1) {
				A_SetWeaponSprite("H93F");
			}
		}
 		Goto Upgraded_InsertBullets4
		
	Reload_LeftUpgradedUnload:
		TNT1 A 0
		H9F6 A 0 A_JumpIfInventory("HDMRSniperMode",1,2)
		H8F6 A 0
		"####" ABCDEFG 1
		"####" A 0 A_StartSound("weapons/rifle/magin", 0)
		"####" HIJK 1
		Goto Continue_DWReloadLeft
		
	InsertBulletsSniper:
		TNT1 A 0 A_JumpIfInventory("RifleAmmo",30,"Ready3")
		TNT1 A 0 A_JumpIfInventory("PB_HighCalMag",2,1)
		Goto FinishInsertBullets
		TNT1 A 0 {
			A_Giveinventory("RifleAmmo",2);
			A_Takeinventory("PB_HighCalMag",2);
			}
		Goto InsertBulletsSniper

	InsertBullets:
		TNT1 A 0 PB_AmmoIntoMag("RifleAmmo","PB_HighCalMag",30,1)
		Goto FinishInsertBullets
		
	InsertBullets2:
		TNT1 A 0 PB_AmmoIntoMag("RifleAmmo","PB_HighCalMag",31,1)
		Goto FinishInsertBullets 
		
	InsertBullets3:
		TNT1 A 0 PB_AmmoIntoMag("RifleAmmo","PB_HighCalMag",30,1)
		TNT1 A 0 PB_AmmoIntoMag("LeftRifleAmmo","PB_HighCalMag",30,1)
		Goto FinishInsertBullets
		
	InsertBullets4:
		TNT1 A 0 PB_AmmoIntoMag("RifleAmmo","PB_HighCalMag",31,1)
		TNT1 A 0 PB_AmmoIntoMag("LeftRifleAmmo","PB_HighCalMag",31,1)
		Goto FinishInsertBullets

	Upgraded_InsertBullets4:
		TNT1 A 0 {
			if (CountInv("RifleAmmo") >= 31 && CountInv("HDMRSniperMode") != 1) {
				return state("Upgraded_InsertBullets5");
			}
			
			if(CountInv("RifleAmmo") >= 30 && CountInv("HDMRSniperMode") == 1) {
				return state("Upgraded_InsertBullets5");
			}
			return state("");
		} 
		TNT1 A 0 A_JumpIfInventory("PB_HighCalMag",1,1)
		Goto Upgraded_InsertBullets5
		TNT1 A 0 {
			A_Takeinventory("PB_HighCalMag",1);
			A_Giveinventory("RifleAmmo",1);
		}
		Goto Upgraded_InsertBullets4
	
	Upgraded_InsertBullets5:
		TNT1 A 0 {
			if (CountInv("LeftRifleAmmo") >= 31 && CountInv("HDMRSniperMode") != 1) {
				return state("FinishInsertBullets");
			}
			
			if(CountInv("LeftRifleAmmo") >= 30 && CountInv("HDMRSniperMode") == 1) {
				return state("FinishInsertBullets");
			}
			return state("");
		} 
		TNT1 A 0 A_JumpIfInventory("PB_HighCalMag",1,1)
		Goto FinishInsertBullets
		TNT1 A 0 {
			A_Giveinventory("LeftRifleAmmo",1);
			A_Takeinventory("PB_HighCalMag",1);
		}
		Goto Upgraded_InsertBullets5
		
	InsertBullets6:
		TNT1 A 0 A_JumpIfInventory("LeftRifleAmmo",30,"FinishInsertBullets")
		TNT1 A 0 A_JumpIfInventory("PB_HighCalMag",1,1)
		Goto FinishInsertBullets
		TNT1 A 0 {
			A_Giveinventory("LeftRifleAmmo",1);
			A_Takeinventory("PB_HighCalMag",1);
		}
		Goto InsertBullets6
		
	FinishInsertBullets:
		TNT1 A 0 A_Takeinventory("RifleWasEmpty",1)
		TNT1 A 0 A_Takeinventory("HasUnloadedDMR",1)
		Goto Ready3
	
	
	
	Unload:
		TNT1 A 0 A_Takeinventory("Unloading",1)
		TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR", 1, "Ready3")
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1, "UnloadDualWield")
		TNT1 A 0 a_JumpIfInventory("RifleAmmo", 1, 1)
        Goto Ready3
		TNT1 A 0 {
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			A_Takeinventory("Unloading",1);
			A_ZoomFactor(1.0);
			A_Giveinventory("PB_LockScreenTilt",1);
			A_SetCrosshair(5);
			A_PlaySoundEx("Ironsights", "Auto");			
			}
		H94F ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H95F ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H96F ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H97F ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
			
		
		R5F0 ABCDEFGHIJKLMNOP 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H96F");
				}
				else {
					A_SetWeaponSprite("H94F");
				}
			}
		}
		R5F0 Q 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H96F");
				}
				else {
					A_SetWeaponSprite("H94F");
				}
			}
			A_PlaySoundEx("weapons/rifle/magout", "Auto");
		}
		R5F0 RSTUVWXYZ 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H96F");
				}
				else {
					A_SetWeaponSprite("H94F");
				}
			}
		}
		R5F1 ABCD 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H97F");
				}
				else {
					A_SetWeaponSprite("H95F");
				}
			}
		}
		TNT1 A 0 a_JumpIfInventory("RifleAmmo", 1, "UnloadWithAmmo")
		R5F2 ABCDEFGHIJKLMN 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H97F");
				}
				else {
					A_SetWeaponSprite("H95F");
				}
			}
		}
		Goto RemoveBullets
	UnloadWithAmmo:
		R5F1 EFGH 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H97F");
				}
				else {
					A_SetWeaponSprite("H95F");
				}
			}
		}
		TNT1 A 0 A_PlaySoundEx("RIFCL_CK", "auto")
		R5F1 IJKLMNOPQRSTUVWXYZ 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H97F");
				}
				else {
					A_SetWeaponSprite("H95F");
				}
			}
		}
		
	RemoveBullets:
		TNT1 A 0 A_JumpIfInventory("RifleAmmo",1,1)
		Goto FinishUnload
		TNT1 A 0 
		{
			A_Takeinventory("RifleAmmo",1);
			A_Giveinventory("PB_HighCalMag",1);
		}
		Goto RemoveBullets
	
	FInishUnload:
		TNT1 A 0 A_GiveInventory("HasUnloadedDMR", 1)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		Goto Ready3
		
	UnloadDualWield:
		TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR", 1, "AlreadyUnloaded")
		TNT1 A 0 {
			if (CountInv("RifleAmmo") <= 0 && CountInv("LeftRifleAmmo") <= 0) {
				return state("ReadyDualWield");
			}
			return state("");
		}
        TNT1 A 0 A_JumpIfInventory("RifleAmmo",1,1)
        Goto ReadyDualWield
		TNT1 A 0 {
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			A_ZoomFactor(1.0);
			A_Giveinventory("PB_LockScreenTilt",1);
			A_SetCrosshair(5);
			A_PlaySoundEx("Ironsights", "Auto");
			A_ClearOverlays(10,11);
			}
		H01F ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H11F ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H21F ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
		H31F ABCDEFGHIJKLMNOPQRSTUVWXYZ 0
			
		R8F0 ABCDEFGHIJKLMNOPQR 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H21F");
				}
				else {
					A_SetWeaponSprite("H01F");
				}
			}
		}
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magout", "Auto")
		R8F0 STUVWXYZ 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H21F");
				}
				else {
					A_SetWeaponSprite("H01F");
				}
			}
		}
		R8F1 ABCDEFGHIJKLMNO 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H31F");
				}
				else {
					A_SetWeaponSprite("H11F");
				}
			}
		}
		TNT1 A 0 A_PlaySoundEx("weapons/rifle/magout", "Auto")
		R8F1 PQRSTUVWXYZ 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H31F");
				}
				else {
					A_SetWeaponSprite("H11F");
				}
			}
		}
// 		R8F2 AB 1
	RemoveBulletsDualWield:
		TNT1 A 0 A_JumpIfInventory("RifleAmmo",1,1)
		Goto RemoveBulletsDualWield2
		TNT1 A 0 
		{
			A_Takeinventory("RifleAmmo",1);
			A_Giveinventory("PB_HighCalMag",1);
		}
		Goto RemoveBulletsDualWield
		
	RemoveBulletsDualWield2:
		TNT1 A 0 A_JumpIfInventory("LeftRifleAmmo",1,1)
		Goto FinishUnloadDualWield
		TNT1 A 0 
		{
			A_Takeinventory("LeftRifleAmmo",1);
			A_Giveinventory("PB_HighCalMag",1);
		}
		Goto RemoveBulletsDualWield2
	FinishUnloadDualWield:
		TNT1 A 0
		TNT1 A 0 A_GiveInventory("HasUnloadedDMR", 1)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		Goto Ready3

	Spawn:
		VIFL A 0 NoDelay 
		RIFL A 10 A_PBVPFramework("VIFL")
		"####" "#" 0 A_PbvpInterpolate()
		LOOP

			
	FlashKicking:
		TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "FlashBarrelKicking")
		TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "FlashBarrelKicking")
		TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "FlashBarrelKicking")
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1, "FlashKicking2")
		H1F0 ABCDEFGGHIJKLM 0 // HDMR - Normal Mode
		H6F0 ABCDEFGGHIJKLM 0 // HDMR - Sniper Mode
		
		
		R4F0 ABCDEFGGHIJKLM 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H6F0");
				}
				else {
					A_SetWeaponSprite("H1F0");
				}
			}
			
			return A_DoPBWeaponAction;
		}
		Goto Ready3
	FlashKicking2:
		H32F ABCDEFGGHIJKLM 0 // HDMR - Normal Mode
		H33F ABCDEFGGHIJKLM 0 // HDMR - Sniper Mode
		
		//TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR",1,"FlashKicking2Unloaded")
		R7F0 ABCDEFGGHIJKLM 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H33F");
				}
				else {
					A_SetWeaponSprite("H32F");
				}
			}
			return A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE);
		}
		Goto Ready3
		
	FlashKicking2Unloaded:
		R7F2 A 1
		R7F0 BCDEFGGHIJ 1
		R7F2 KLM 1
		Goto Ready3
		
	FlashAirKicking:
		TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "FlashBarrelAirKicking")
		TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "FlashBarrelAirKicking")
		TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "FlashBarrelAirKicking")	
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1, "FlashAirKicking2")
		H1F0 ABCDEFGGHIJKLM 0 // HDMR - Normal Mode
		H6F0 ABCDEFGGHIJKLM 0 // HDMR - Sniper Mode
		R4F0 ABCDEFGGGGHIJKLM 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H6F0");
				}
				else {
					A_SetWeaponSprite("H1F0");
				}
			}
			return A_DoPBWeaponAction;
		}
		Goto Ready3
	FlashAirKicking2:
		//TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR",1,"FlashAirKicking2Unloaded")
		H32F ABCDEFGGHIJKLM 0 // HDMR - Normal Mode
		H33F ABCDEFGGHIJKLM 0 // HDMR - Sniper Mode
		R7F0 ABCDEFGGGGHIJKLM 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H33F");
				}
				else {
					A_SetWeaponSprite("H32F");
				}
			}
			return A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE);
		}
		Goto Ready3
	FlashAirKicking2Unloaded:
		//TNT1 A 0 A_JumpIfInventory("DMRUpgraded",1,"FlashAirKicking2UnloadedHDMR")
		R7F2 A 1 A_DoPBWeaponAction
		R7F0 BCDEFGGGGHIJ 1 A_DoPBWeaponAction
		R7F2 KLM 1 A_DoPBWeaponAction
		Goto Ready3
		
	FlashSlideKicking:
		TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "FlashBarrelSlideKicking")
		TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "FlashBarrelSlideKicking")
		TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "FlashBarrelSlideKicking")
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs",1,"FlashSlideKicking2")
		H1F1 ABCDEFGHIJKLMNOPQRSTUVWX 0
		H6F1 ABCDEFGHIJKLMNOPQRSTUVWX 0
		
		R4F3 ABCDEFGHIJKLMNOPQRSTUVWX 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H6F1");
				}
				else {
					A_SetWeaponSprite("H1F1");
				}
			}
			return A_DoPBWeaponAction;
		}
		Goto Ready3
	FlashSlideKicking2:
		H34F ABCDEFGHIJKLMNOPQRSTUVWX 0
		H35F ABCDEFGHIJKLMNOPQRSTUVWX 0
		//TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR",1,"FlashSlideKicking2Unloaded") 
		
		
		R7F1 ABCDEFGHIJKLMNOPQRSTUVWX 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H35F");
				}
				else {
					A_SetWeaponSprite("H34F");
				}
			}
			return A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE);
		}
		Goto Ready3
		
	FlashSlideKickingStop:
		TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "FlashBarrelSlideKickingStop")
		TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "FlashBarrelSlideKickingStop")
		TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "FlashBarrelSlideKickingStop")
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1, "FlashSlideKickingStop2")
		R4F3 RSTUVWX 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H6F1");
				}
				else {
					A_SetWeaponSprite("H1F1");
				}
			}
			return A_DoPBWeaponAction;
		}
		Goto Ready3
	FlashSlideKickingStop2:
	//	TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR",1,"FlashSlideKickingStop2Unloaded") 
		R7F1 RSTUVWX 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetWeaponSprite("H35F");
				}
				else {
					A_SetWeaponSprite("H34F");
				}
			}
			return A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE);
		}
		Goto Ready3
	
	FlashSlideKicking2Unloaded:
	//	TNT1 A 0 A_JumpIfInventory("HasUnloadedDMR",1,"FlashSlideKicking2Unloaded") 	
		R7F3 AB 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE)
		R7F1 CDEFGHIJKLMNOPQRSTUVWX 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE)
		R7F3 WX 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE)
		Goto Ready3
	
	FlashSlideKickingStop2Unloaded:
		R7F1 RSTUV 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE)
		R7F3 WX 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE)
		Goto Ready3
		
	FlashPunching:
		TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "FlashBarrelPunching")
		TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "FlashBarrelPunching")
		TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "FlashBarrelPunching")
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_JumpIfInventory("DualWieldingDMRs", 1, "FlashPunching2")
		H1F2 ABCDEFGHIJKLMN 0 
		H6F2 ABCDEFGHIJKLMN 0 
		R4F2 ABCDEFGHIJKLMN 1 {
			if (CountInv("DMRUpgraded") == 1) {
				if(CountInv("HDMRSniperMode") == 1) {
					A_SetFlashWeaponSprite("H6F2");
				}
				else {
					A_SetFlashWeaponSprite("H1F2");
				}
			}
		}
		Stop
		
	FlashPunching2:
		TNT1 AAAAAAAAAAAAAA 1
		Stop
	}
}

Actor Zoomed : Inventory
{
inventory.maxamount 1
}

ACTOR RifleAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 31
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 30
   Inventory.Icon "RIFLA0"
  +INVENTORY.IGNORESKILL
}


ACTOR LeftRifleAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 31
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 30
   Inventory.Icon "RIFLA0"
   +INVENTORY.IGNORESKILL
}
