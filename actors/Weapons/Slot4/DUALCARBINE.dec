//CARBINE RIFLES (c) 2014 SGT MARK IV tm... And a bit of Pa1nki113r (R)
ACTOR DualCarbines: PB_DualWeapon
{
	Weapon.BobRangeX 0.3
	Weapon.BobRangeY 0.5
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 2.4
	Weapon.AmmoUse1 0 
	//Weapon.SelectionOrder 100
	Weapon.AmmoGive1 0 //How much ammo can be gathered with this weapon
	Weapon.AmmoUse2 0
	Weapon.AmmoGive2 0
	Weapon.AmmoType1 "NewClip" //Reserve ammo type
	Weapon.AmmoType2 "DoubleCarbineAmmo" //Magazine ammo type
	Obituary "%o was drilled by %k's Double Rifles." //Kill message
	+FLOORCLIP
	+DONTGIB
	Tag "Dual UAC-41 Carbines"
    AttackSound "None" //You better leave this clear
	Inventory.Pickupmessage "" //Pickup message
    +WEAPON.NOAUTOAIM //Makes this weapon never autoaim, so recoil can work better
    Scale 0.6 //Weapon's pickup sprite size
	+WEAPON.NOAUTOFIRE
	+WEAPON.NO_AUTO_SWITCH
	+POWERED_UP
	Weapon.SisterWeapon Carbine
	
	States
	{
	
		SwapWeapons:
        TNT1 A 1 ACS_NamedExecuteAlways("WeaponSwapSound", 0)
		TNT1 A 0 A_TakeInventory("WeaponSwapper", 50)
		 TNT1 A 0 A_TakeInventory("Carbine", 500)
		TNT1 A 0 A_FireCustomMissile("PlayerDropedCarbine", 0, 0, 0, 0)
		TNT1 A 1 A_SelectWeapon("Rifle")
		 TNT1 A 0 A_TakeInventory("Carbine_Counter", 100)
		Goto Select
	
	Spawn:
	TNT1 A 100//Pickup sprite
	Loop
	
	GoToPurist:
		TNT1 A 0 A_SelectWeapon("Mini_gun")
		Goto Select
	
		
	DontFlashClimbing:
	    TNT1 A 9
		Goto Flash

	
	Ready:
		TNT1 A 0 A_JumpIfInventory("IsPlayingAsPurist", 1, "GoToPurist")
		P3SS FEDCBA 1
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire
		
		
	Fire:
	P3W2 A 1 
			{
				A_WeaponReady(WRF_NOFIRE);
				A_WeaponOffset(CallACS("Script_GetGunOffsetX"), CallACS("Script_GetGunOffsetY"),WOF_KEEPY);
			}
	Goto ReadyToFire
	Ready3:
	ReadyToFire:
		P3W2 A 1 A_WeaponReady(WRF_NOFIRE)// Weapon is ready to fire
		TNT1 A 0 //A_StopSound(6)
		//TNT1 A 0 A_JumpIfInventory("IsFiringSecondary", 1, 1)
		//TNT1 A 0 A_GunFlash
		TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"FireLeftGun") //Check if player wants to reload
		TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload2") //Check if player wants to reload
		TNT1 A 0 A_JumpIfInventory("Grabbing_A_Ledge",1,"LedgeClimb")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
	    TNT1 A 0 A_JumpIfInventory("UseEquipment", 1, "UseEquipment") //NEW EQUIPMENT SYSTEM
		TNT1 A 0 A_JumpIfInventory("ToggleEquipment", 1, "SwitchEquipment") //NEW EQUIPMENT SYSTEM
		TNT1 A 0 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "NoDualWield")
		TNT1 A 0 A_JumpIfInventory("WeaponSwapper", 1, "SwapWeapons")
		TNT1 A 0 A_JumpIfInventory("GrabbedBarrel", 1, "GrabBarrel")
		loop
		
	NoDualWield:
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		TNT1 A 0 A_SelectWeapon("Carbine")
		Goto Select
		
	Deselect:
		TNT1 A 0 A_PlaySound("IronSights", 0)
		TNT1 A 0 A_TakeInventory("CarbineSelected",1)
		TNT1 A 0 A_StopSound(5)
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_JumpIfInventory("GotMeatShield", 1, "GrabEnemy")
		TNT1 AAAAAA 0 A_Lower
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait
	Select:
		TNT1 A 0 A_PlaySound("IronSights", 0)
		TNT1 A 0 A_TakeInventory("GoWeaponSpecialAbility", 1)
		
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Raise
		TNT1 AAAAAAAA 1 A_Raise
		Wait
	
	DryFire:
	    P3W2 D 1 A_PlaySound("DRYFIRE", 1)
		//TNT1 A 0 A_StopSound(4)
		//TNT1 A 0 A_StopSound(5)
		P3W2 A 3
		Goto ReadyToFire
	 
	FireLeftGun:
		TNT1 A 0 A_WeaponOffset(0,32)
		TNT1 A 0 A_JumpIfInventory("DoubleCarbineAmmo", 1, 1)//First of all, checks if there is ammo inside the gun
		Goto Reload//Couldn't find any ammo. Reload
		
		TNT1 A 0 A_JumpIfInventory("LeftCarbineAmmo", 1, 1)//Checks if there is ammo inside the left Rifle
		Goto DryFire//Couldn't find any ammo. Don't fire.
		
		TNT1 A 0 A_TakeInventory("DoubleCarbineAmmo", 1)//Removes 1 ammo from magazine
		TNT1 A 0 A_AlertMonsters
		TNT1 A 0 A_PlaySound("Weapons/Rifle/SFire",6)
	    P3W2 B 1 BRIGHT A_FireBullets(13,3.35,-1,9,"BulletPuff",1)//Horizontal Spread, Vertical Spread, Numbers of Projectiles (Leave as -1 if its a single one), Damage Factor
		TNT1 A 0 ACS_NamedExecute("Recoil282", 0, 0, 0, 0)
		RIFF A 0 A_FireCustomMissile("GunFireSmoke", 0, 0, -5, 0, 0, 0)
		P3W2 D 1 A_FireCustomMissile("RifleCaseSpawn",0,0,6,4) //Ejetts empty brass
		P3W2 C 0 A_SetPitch(-1.05 + pitch)//Vertical recoil down
		//P3W2 D 1 //A_Refire
		TNT1 A 0 A_TakeInventory("LeftCarbineAmmo", 1)//Remove the fake ammo
		TNT1 A 0 A_JumpIfInventory("DoubleCarbineAmmo", 1, 1)//Checks if there is ammo inside the gun
		Goto Reload//Couldn't find any ammo. Reload.
		P3W2 A 0
		Goto ReadyToFire//No need to reload. Get back to Ready state.
		
	Flash:	
	    TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("StopDualWield", 1, "LightDone")
		P3W1 A 1
		TNT1 A 0 A_JumpIfInventory("FiredSecondary", 1, "FireRightGun")
		TNT1 A 0 //A_StopSound(5)
		//P3W1 A 1
		Loop
	
	DontFlash:
	    TNT1 A 1
		Goto Flash
	
	FireRightGun:
		TNT1 A 0 A_WeaponOffset(0,32)
		
		TNT1 A 0 A_JumpIfInventory("StopDualWield", 1, "LightDone")
		TNT1 A 0 A_GiveInventory("IsFiringSecondary", 1)
		TNT1 A 0 A_JumpIfInventory("DoubleCarbineAmmo", 1, 2)//First of all, checks if there is ammo inside the gun
		TNT1 A 0 A_GiveInventory("IsReloading", 1)//Couldn't find any ammo. Reload
		Goto Flash//Couldn't find any ammo. Reload
		
		TNT1 A 0 A_JumpIfInventory("XRifleAmmo", 1, 1)//Checks if there is ammo inside the left Rifle
		Goto DryFire2//Couldn't find any ammo. Don't fire.
		
		TNT1 A 0 A_TakeInventory("DoubleCarbineAmmo", 1)//Removes 1 ammo from magazine
		
		TNT1 A 0 A_AlertMonsters
		TNT1 A 0 A_PlaySound("Weapons/Rifle/SFire",5)
	    P3W1 B 1 BRIGHT A_FireBullets(13,1.35,-1,9,"BulletPuff",1)//Horizontal Spread, Vertical Spread, Numbers of Projectiles (Leave as -1 if its a single one), Damage Factor
		
		TNT1 A 0 ACS_NamedExecute("Recoil282", 0, 0, 0, 0)
		RIFF A 0 A_FireCustomMissile("GunFireSmoke", 0, 0, -5, 0, 0, 0)
		P3W1 D 1 A_FireCustomMissile("RifleCaseSpawn",0,0,6,4) //Ejetts empty brass
		P3W1 C 0 A_SetPitch(-0.8 + pitch)//Vertical recoil down
		//P3W1 D 1 //A_Refire
		TNT1 A 0 A_TakeInventory("XRifleAmmo", 1)//Remove the fake ammo
		P3W1 A 0
		TNT1 A 0 A_JumpIfInventory("DoubleCarbineAmmo", 1, 1)//Checks if there is ammo inside the gun
		TNT1 A 0 A_GiveInventory("IsReloading", 1)//Couldn't find any ammo. Reload
		Goto Flash
		
	DryFIre2:
	
	    P3W1 D 1 A_PlaySound("weapons/empty", 1)
		P3W1 AAA 1 A_JumpIfInventory("StopDualWield", 1, "LightDone")
		Goto Flash
		
	Reload:
	    P3W2 A 0 //Always leave one free line before the reload animation to prevent bugs
		TNT1 A 0 A_TakeInventory("Reloading")//Always put this to make sure that the game understand that you already are reloading your weapon, and calling this state again is not necessary
		TNT1 A 0 A_JumpIfInventory("DoubleCarbineAmmo", 82, "ReadytoFire")//Checks if the weapon is not fully reloaded, if yes, cancel reload.
		TNT1 A 0 A_PlaySound("weapons/empty", 1)
		TNT1 A 0 A_StopSound(5)
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_JumpIfInventory("NewClip", 1, 1)//Checks if you have spare ammo
		Goto ReadyToFire//Identified that you have no spare ammo. Get back to Ready animation
		TNT1 A 0 A_GiveInventory("StopDualWield", 1)
        
	Refill:	
	    TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("NewClip", 1, 1)//Check if you have spare ammo again. This line is necessary in case you don't have enough ammo to fill an entire clip.
		Goto FinishReload//Gun is fully loaded. Go to finish animation
	    TNT1 A 0 A_TakeInventorY("NewClip", 1)//Removes one spare bullet
		TNT1 A 0 A_GiveInventory("DoubleCarbineAmmo", 1)//Puts one bullet inside the clip
		TNT1 A 0 A_JumpIfInventory("DoubleCarbineAmmo", 80, "FinishReload")//Checks if weapons is full
		Loop
		
	 FinishReload:	//Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("LeftCarbineAmmo", 41, "FinishReloadRightOnly")
		TNT1 A 0 A_JumpIfInventory("XRifleAmmo", 41, "FinishReloadLeftOnly")
		TNT1 A 0 A_GiveInventory("LeftCarbineAmmo", 40)
		TNT1 A 0 A_GiveInventory("XRifleAmmo", 40)
		P3SS FEDCBA 1
		TNT1 A 5
		TNT1 A 0 A_PlaySound("RIFCL_OU",2)
		4AFR F 0 A_FireCustomMissile("EmptyClipSpawn",-5,0,8,-4)
        4AFR ABCCDE 1 
		4AFR GHIJKLMNNN 1 
		TNT1 A 0 A_PlaySound("RIFCL_IN", 1)
		4AFR OOPPQQRRSSTTUU 1 
		TNT1 A 0 A_PlaySound("RIFCL_CL", 4)
		TNT1 A 10
		TNT1 A 0 A_PlaySound("RIFCL_OU",2)
		5AFR F 0 A_FireCustomMissile("EmptyClipSpawn",-5,0,8,-4)
        5AFR ABCCDE 1 
		5AFR GHIJKLMNNN 1 
		TNT1 A 0 A_PlaySound("RIFCL_IN", 1)
		5AFR OOPPQQRRSSTTUU 1 
		TNT1 A 0 A_PlaySound("RIFCL_CL", 4)
		TNT1 A 0 A_TakeInventory("StopDualWield", 1)
		TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
		TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
		TNT1 A 5
		P3SS FEDCBA 1
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire
		
		
		
		
		//Reload 2 is for manual reload, leaves one more bullet inside the gun.
		
	Reload2:
	    P3SG A 0 //Always leave one free line before the reload animation to prevent bugs
		TNT1 A 0 A_TakeInventory("Reloading")//Always put this to make sure that the game understand that you already are reloading your weapon, and calling this state again is not necessary
		TNT1 A 0 A_JumpIfInventory("DoubleCarbineAmmo", 82, "ReadytoFire")//Checks if the weapon is not fully reloaded, if yes, cancel reload.
		TNT1 A 0 A_JumpIfInventory("NewClip", 1, 1)//Checks if you have spare ammo
		Goto ReadyToFire//The game identified that you have no spare ammo. Get back to Ready animation
		TNT1 A 0 A_GiveInventory("StopDualWield", 1)
        
	Refill2:	
	    TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("NewClip", 1, 1)//Check if you have spare ammo again. This line is necessary in case you don't have enough ammo to fill an entire clip.
		Goto FinishReload//Gun is fully loaded. Go to finish animation
	    TNT1 A 0 A_TakeInventorY("NewClip", 1)//Removes one spare bullet
		TNT1 A 0 A_GiveInventory("DoubleCarbineAmmo", 1)//Puts one bullet inside the clip
		TNT1 A 0 A_JumpIfInventory("DoubleCarbineAmmo", 82, "FinishReload2")//Checks if weapons is full
		Loop
		
		
	FinishReload2:	//Weapon is fully loaded. Time to play the reloading animation.
	    TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("LeftCarbineAmmo", 41, "FinishReloadRightOnly")
		TNT1 A 0 A_JumpIfInventory("XRifleAmmo", 41, "FinishReloadLeftOnly")
		TNT1 A 0 A_GiveInventory("LeftCarbineAmmo", 82)
		TNT1 A 0 A_GiveInventory("XRifleAmmo", 82)
		P3SS FEDCBA 1
		TNT1 A 5
		TNT1 A 0 A_PlaySound("RIFCL_OU",2)
		4AFR F 0 A_FireCustomMissile("EmptyClipSpawn",-5,0,8,-4)
        4AFR ABCCDE 1 
		4AFR GHIJKLMNNN 1 
		TNT1 A 0 A_PlaySound("RIFCL_IN", 1)
		4AFR OOPPQQRRSSTTUU 1 
		TNT1 A 0 A_PlaySound("RIFCL_CL", 4)
		TNT1 A 10
		TNT1 A 0 A_PlaySound("RIFCL_OU",2)
		5AFR F 0 A_FireCustomMissile("EmptyClipSpawn",-5,0,8,-4)
        5AFR ABCCDE 1 
		5AFR GHIJKLMNNN 1 
		TNT1 A 0 A_PlaySound("RIFCL_IN", 1)
		5AFR OOPPQQRRSSTTUU 1 
		TNT1 A 0 A_PlaySound("RIFCL_CL", 4)
		TNT1 A 0 A_TakeInventory("StopDualWield", 1)
		TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
		TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
		TNT1 A 5
		P3SS FEDCBA 1
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire	
		
		
	
	FinishReloadLeftOnly:	//Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0 A_GiveInventory("LeftCarbineAmmo", 82)
		TNT1 A 0 A_GiveInventory("XRifleAmmo", 82)
		P3SS FEDCBA 1
		TNT1 A 5
		TNT1 A 0 A_PlaySound("RIFCL_OU",2)
		5AFR F 0 A_FireCustomMissile("EmptyClipSpawn",-5,0,8,-4)
        5AFR ABCCDE 1 
		5AFR GHIJKLMNNN 1 
		TNT1 A 0 A_PlaySound("RIFCL_IN", 1)
		5AFR OOPPQQRRSSTTUU 1 
		TNT1 A 0 A_PlaySound("RIFCL_CL", 4)
		TNT1 A 0 A_TakeInventory("StopDualWield", 1)
		TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
		TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
		TNT1 A 5
		P3SS FEDCBA 1
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire	
		
	FinishReloadRightOnly:	//Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0 A_GiveInventory("LeftCarbineAmmo", 82)
		TNT1 A 0 A_GiveInventory("XRifleAmmo", 82)
		P3SS FEDCBA 1
		TNT1 A 5
		TNT1 A 0 A_PlaySound("RIFCL_OU",2)
		4AFR F 0 A_FireCustomMissile("EmptyClipSpawn",-5,0,8,-4)
        4AFR ABCCDE 1 
		4AFR GHIJKLMNNN 1 
		TNT1 A 0 A_PlaySound("RIFCL_IN", 1)
		4AFR OOPPQQRRSSTTUU 1 
		TNT1 A 0 A_PlaySound("RIFCL_CL", 4)
		TNT1 A 0 A_TakeInventory("StopDualWield", 1)
		TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
		TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
		TNT1 A 5
		P3SS FEDCBA 1
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire		

	FlashKicking:
		P3SS E 1 
		P3SS E 1 
		P3SS D 1 
		P3SS C 3 
		P3SS B 3
		P3SS C 3 
		P3SS D 1 
		P3SS E 1 
		P3SS E 1 
		P3SG AAA 1 
		Stop
		
	FlashAirKicking:
		P3SS E 1 
		P3SS E 1 
		P3SS D 1 
		P3SS C 3 
		P3SS B 3
		P3SS C 3 
		P3SS D 1 
		P3SS E 1 
		P3SS F 1 
		P3SG AAAA 1 
		Stop
		
	FlashSlideKicking:
		P3SS ED 2 
		P3SS CCBBBAAABBB 2  
		Stop
		
	FlashSlideKickingStop:
		//TNT1 A 0
		P3SS BCDEE 1 
		P3SG AA 1 
		Stop	
	}
}

ACTOR DoubleCarbineAmmo : Ammo //Your weapon's magazine ammo.
{
   Inventory.Amount 0
   Inventory.MaxAmount 82 //Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 82
   Inventory.Icon "4AFLA0"
}


ACTOR LeftCarbineAmmo : Ammo //Your weapon's magazine ammo.
{
   Inventory.Amount 0
   Inventory.MaxAmount 41 //Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 41
   Inventory.Icon "4AFLA0"
}


ACTOR RightCarbineAmmo : Ammo //Your weapon's magazine ammo.
{
   Inventory.Amount 0
   Inventory.MaxAmount 41 //Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 41
   Inventory.Icon "4AFLA0"
}