ACTOR ExecuteStompWall : Inventory
{
Inventory.MaxAmount 1
}

ACTOR ExecuteBashWall : Inventory
{
Inventory.MaxAmount 1
}

ACTOR DoPunch : Inventory
{
Inventory.MaxAmount 1
}

Actor HeavyStrikeRight : Inventory
{
inventory.maxamount 1
}

Actor HeavyStrikeLeft : Inventory
{
inventory.maxamount 1
}

Actor HeavyStrikeUpWard : Inventory
{
inventory.maxamount 1
}


Actor FistHit : Inventory
{
inventory.maxamount 1
}

Actor Kicking : Inventory
{
inventory.maxamount 1
}

Actor Punching : Inventory
{
inventory.maxamount 1
}

Actor Berserker : Inventory
{
inventory.maxamount 1
}

Actor NoFatality : Inventory
{
inventory.maxamount 1
}

Actor KickHasHit : Inventory
{
inventory.maxamount 1
}
 
Actor KickHasHitAnObject : Inventory
{
inventory.maxamount 1
}

Actor IsSlideKicking : Inventory
{
inventory.maxamount 1
}

Actor ShotgunguyHead: Inventory
{
inventory.maxamount 1
}

Actor PSeq1 : Inventory
{
inventory.maxamount 3
}

Actor PSeq2 : Inventory
{
inventory.maxamount 1
}

Actor PSeq3 : Inventory
{
inventory.maxamount 1
}

ACTOR PSeq4 : Inventory
{
Inventory.MaxAmount 1
}

ACTOR ArachnoGun : Inventory
{
Inventory.MaxAmount 1
}

ACTOR PhantasmFatality : Inventory
{
Inventory.MaxAmount 1
}

ACTOR ArachnoGun_Plasma
{
	Radius 6
	Height 10
	Speed 60
	Damage 10
    DamageType Plasma
	Decal "Scorch"
	alpha 0.87
	Scale 0.30
	Projectile
	+RANDOMIZE
	renderstyle ADD
	DeathSound "weapons/plasmax"
    SeeSound "None"
	Obituary "%o was melted by %k's Plasma Gun"
	States
	{
	Spawn:
        PBAL C 1 BRIGHT A_SpawnItem("PlasmaFlare",0,0)
		TNT1 A 0 A_PlaySound("weapons/plasmaloop",6,1,1)
		Loop
	
	Xdeath:
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_CustomMissile ("BluePlasmaFire", 0, 0, random (0, 360), 2, random (0, 360))
		TNT1 AAAAA 0 A_CustomMissile ("BluePlasmaParticle", 0, 0, random (0, 360), 2, random (0, 360))
		TNT1 B 1 A_Explode(15,50,0)
		TNT1 B 4
		TNT2 AAA 4 A_CustomMissile ("PlasmaSmoke", 1, 0, random (0, 360), 2, random (0, 160))
		Stop

	Death:
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_SpawnItemEx ("DetectFloorCraterSmall",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	    TNT1 A 0 A_SpawnItemEx ("DetectCeilCraterSmall",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 B 1 A_Explode(8,50,1)
		TNT1 A 0 A_CustomMissile ("BluePlasmaFire", 0, 0, random (0, 360), 2, random (0, 360))
		TNT1 AAAAA 0 A_CustomMissile ("BluePlasmaParticle", 0, 0, random (0, 360), 2, random (0, 360))
		TNT1 B 4	
		TNT2 AAAAAAAAA 4 A_CustomMissile ("PlasmaSmoke", 1, 0, random (0, 360), 2, random (0, 160))
		Stop
	}
}


// --------------------------------------------------------------------------
//
// Melee Weapons
//
// --------------------------------------------------------------------------


ACTOR Melee_Attacks : PB_Weapon Replaces Fist
{
	Game Doom
	Weapon.SelectionOrder 3700
	Weapon.Kickback 100
	Obituary "%o was Ripped and Torn by %k"
	+WEAPON.WIMPY_WEAPON
	+WEAPON.MELEEWEAPON
    +WEAPON.NOALERT
    +WEAPON.NOAUTOAIM
	//+WEAPON.NOAUTOFIRE
	+WEAPON.CHEATNOTWEAPON
	Weapon.BobRangeX 0.3
	Weapon.BobRangeY 0.5
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 2.4
	Tag "Bare Hands"
	inventory.AltHUDIcon "KUKRA0"
	States
	{
		
		
	Steady:
		TNT1 A 0 A_SetRoll(0)
		TNT1 A 0 A_JumpIfInventory("ArachnoGun",1,"ReadyArachno")
		TNT1 A 1 {
				A_TakeInventory("GoWeaponSpecialAbility", 1);
				A_TakeInventory("Grabbing_A_Ledge", 1);
				A_TakeInventory("UseEquipment", 1);
				A_TakeInventory("ToggleEquipment", 1);
				A_TakeInventory("Taunting", 1);
				A_TakeInventory("Salute1", 1);
				A_TakeInventory("Salute2", 1);
				A_TakeInventory("Kicking", 1);
			}	
		Goto ReadyFists

	Reload:
	WeaponSpecial:
		TNT1 A 0 A_GiveInventory("Punching", 1)
		TNT1 A 0 A_TakeInventory("Punching", 1)
        TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"KillLS")
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
	    TNT1 A 0 A_JumpIfInventory("PowerStrength",1,"SelectFatalityModes")
		PUNS E 3
		PUNS F 3 A_PlaySoundEx("KNUCKLED", "Auto")
		PUNS GFE 4 
		TNT1 A 0 A_TakeInventory("GoWeaponSpecialAbility", 1)
		Goto ReadyFists

	SelectFatalityModes:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		TNT1 A 0 A_JumpIfInventory("NoFatality", 1, "FatalityOn")
		Goto FatalityOff
	FatalityOn:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
	    TNT1 A 0 A_Print("RIP AND TEAR! Mode")
		PUNS E 3
		TNT1 A 0 A_PlaySoundEx("KNUCKLED", "Auto")
		PUNS FFFGGGGGFFF 1 A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0) 
		PUNS E 3 
		TNT1 A 0 A_TakeInventory("GoWeaponSpecialAbility", 1)
		TNT1 A 0 A_TakeInventory("NoFatality", 1)
		Goto ReadyFists
	FatalityOff:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		TNT1 A 0 A_Print("SMASH Mode")
		
		P1NR ABCDEFFGGHIJKKLMMNOPQRSTUVWX 0
		P2NR ABCDEFFGGHIJKKLMMNOPQRSTUVWX 0
		P3NR ABCDEFFGGHIJKKLMMNOPQRSTUVWX 0
		
	    P9NS ABCDEFF 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P1NR"); }
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NR");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NR");}
			}
		TNT1 A 0 {
			A_PlaySoundEx("weapons/fists_smash", "Auto");
			A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
			}
		P9NS GGHIJKKLMM 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P1NR"); }
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NR");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NR");}
			}
		TNT1 A 0 {
			A_PlaySoundEx("weapons/fists_smash", "Auto");
			A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
			}
		P9NS NOPQRSTUVWX 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P1NR"); }
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NR");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NR");}
			}
		TNT1 A 0 A_TakeInventory("GoWeaponSpecialAbility", 1)
		TNT1 A 0 A_GiveInventory("NoFatality", 1)
		Goto ReadyFists
	
	Ready:
        ////////////////// Check if player is performing a fatality
		TNT1 A 0 A_JumpIfInventory("ArachnoGun",1,"ReadyArachno")
        TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
 		TNT1 A 0 A_JumpIfInventory("ShotgunguyHead",1,"ReadyShotgunguyHead")
        TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul")
		TNT1 A 0 A_JumpIfInventory("PhantasmFatality",1, "ReadyPhantasm")
 		TNT1 A 0 A_JumpIfInventory("GrabbedBarrel", 1, "GrabObject")
 		TNT1 A 0 A_JumpIfInventory("GrabbedBurningBarrel", 1, "GrabObject")
 		TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"ReadyBarrel")
 		TNT1 A 0 A_JumpIfInventory("HasBurningBarrel",1,"ReadyBurningBarrel")
		
		//Play raising animation
		TNT1 A 0 A_PlaySoundEx("weapons/fists_up", "Auto")
		P9NS EFGHITUVW 1 
	ReadyFists:
		TNT1 A 0 SetPlayerProperty(0,0,0)
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand")
    Ready3:
		TNT1 A 0 A_SetRoll(0)
		TNT1 A 0 A_TakeInventory("PB_LockScreenTilt",1)
		P1NG ABCDEFGHIJKLMNOPQRS 0
		P2NG ABCDEFGHIJKLMNOPQRS 0
		P3NG ABCDEFGHIJKLMNOPQRS 0
		TNT1 A 0 A_TakeInventory("PSeq1", 3)
		TNT1 A 0 A_TakeInventory("PSeq2", 2)
		TNT1 A 0 A_TakeInventory("PSeq3", 2)
		TNT1 A 0 A_TakeInventory("PSeq4", 2)
	ReadyFistsLoop:
        TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
 		TNT1 A 0 A_JumpIfInventory("ShotgunguyHead",1,"ReadyShotgunguyHead")
        TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"ReadySoul")
		TNT1 A 0 A_JumpIfInventory("PhantasmFatality",1, "ReadyPhantasm")
 		TNT1 A 0 A_JumpIfInventory("GrabbedBarrel", 1, "GrabObject")
 		TNT1 A 0 A_JumpIfInventory("GrabbedBurningBarrel", 1, "GrabObject")
 		TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"ReadyBarrel")
 		TNT1 A 0 A_JumpIfInventory("HasBurningBarrel",1,"ReadyBurningBarrel")
		P0NG ABCDEFGHIJKLMNOPQRSRQPONMLKJIHGFEDCBA 1 {
				A_WeaponReady(WRF_ALLOWRELOAD);
				
				if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P1NG");}
				if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NG");}
				if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NG");}
				
				if (CountInv("DoPunch") == 1) { return state("QuickPunch"); }
				if (CountInv("Grabbing_A_Ledge") == 1) { return state("LedgeClimb"); }
				if (CountInv("GoWeaponSpecialAbility") == 1) { return state("WeaponSpecial"); }
				if (CountInv("UseEquipment") == 1) { return state("UseEquipment"); }
				if (CountInv("ToggleEquipment") == 1) { return state("SwitchEquipment"); }
				if (CountInv("GrabbedBarrel") == 1) { return state("GrabBarrel"); }
				if (CountInv("Kicking") == 1) { return state("DoKick"); }
				if (CountInv("Taunting") == 1) { return state("Taunt"); }
				if (CountInv("Salute1") == 1 || CountInv("Salute2") == 1) { return state("Salute"); }
				return state("");
		}
		loop
		
	ReadyShotgunguyHEad:
        PTG1 B 1
		{
			A_WeaponReady;
			
				if (CountInv("DoPunch") == 1) { return state("QuickPunch"); }
				if (CountInv("Grabbing_A_Ledge") == 1) { return state("LedgeClimb"); }
				if (CountInv("GoWeaponSpecialAbility") == 1) { return state("ShotgunguyHeadFire"); }
				if (CountInv("UseEquipment") == 1) { return state("UseEquipment"); }
				if (CountInv("ToggleEquipment") == 1) { return state("SwitchEquipment"); }
				if (CountInv("GrabbedBarrel") == 1) { return state("GrabBarrel"); }
				if (CountInv("Kicking") == 1) { return state("DoKick"); }
				if (CountInv("Taunting") == 1) { return state("Taunt"); }
				if (CountInv("Salute1") == 1 || CountInv("Salute2") == 1) { return state("Salute"); }
				return state("");
		}
		loop
	
	LostSoulHandFireOverlay:
			TNT1 A 5 {
				A_FireCustomMissile("LostSoulOnHandFireSpawner",40,0,0,5);
				if (CountInv("LostSoulFatality") < 1) { return state("LostSoulHandFireOverlayEnd"); }
				return state("");
			}
			Loop
	LostSoulHandFireOverlayEnd:
			TNT1 A 0
			Stop
			
	ReadySoul:
		TNT1 A 0 A_Overlay(-3, "LostSoulHandFireOverlay")
        THEA AAAABBBBAAAABBBBCCCCDDDDCCCCDDDD 1 BRIGHT
		{
			A_WeaponReady;
			
				if (CountInv("DoPunch") == 1) { return state("QuickPunch"); }
				if (CountInv("Grabbing_A_Ledge") == 1) { return state("LedgeClimb"); }
				if (CountInv("GoWeaponSpecialAbility") == 1) { return state("KillLS"); }
				if (CountInv("UseEquipment") == 1) { return state("UseEquipment"); }
				if (CountInv("ToggleEquipment") == 1) { return state("SwitchEquipment"); }
				if (CountInv("GrabbedBarrel") == 1) { return state("GrabBarrel"); }
				if (CountInv("Kicking") == 1) { return state("DoKick"); }
				if (CountInv("Taunting") == 1) { return state("Taunt"); }
				if (CountInv("Salute1") == 1 || CountInv("Salute2") == 1) { return state("Salute"); }
				return state("");
		}
		loop
	
	PhantasmHandFireOverlay:
			TNT1 A 5 {
				A_FireCustomMissile("PhantasmOnHandFireSpawner",40,0,0,5);
				if (CountInv("PhantasmFatality") < 1) { return state("PhantasmHandFireOverlayEnd"); }
				return state("");
			}
			loop
	PhantasmHandFireOverlayEnd:
			TNT1 A 0
			Stop
	ReadyPhantasm:
		TNT1 A 0 A_Overlay(-3, "PhantasmHandFireOverlay")
        TH3A AAAABBBBAAAABBBBCCCCDDDDCCCCDDDD 1 BRIGHT
		{
			A_WeaponReady;
			
				if (CountInv("DoPunch") == 1) { return state("QuickPunch"); }
				if (CountInv("Grabbing_A_Ledge") == 1) { return state("LedgeClimb"); }
				if (CountInv("GoWeaponSpecialAbility") == 1) { return state("KillLS"); }
				if (CountInv("UseEquipment") == 1) { return state("UseEquipment"); }
				if (CountInv("ToggleEquipment") == 1) { return state("SwitchEquipment"); }
				if (CountInv("GrabbedBarrel") == 1) { return state("GrabBarrel"); }
				if (CountInv("Kicking") == 1) { return state("DoKick"); }
				if (CountInv("Taunting") == 1) { return state("Taunt"); }
				if (CountInv("Salute1") == 1 || CountInv("Salute2") == 1) { return state("Salute"); }
				return state("");
		}
		loop

	ReadyBarrel:
        TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        THRG HIJKL 1
		{
			A_WeaponReady;
			
				if (CountInv("DoPunch") == 1) { return state("QuickPunch"); }
				if (CountInv("Grabbing_A_Ledge") == 1) { return state("LedgeClimb"); }
				if (CountInv("GoWeaponSpecialAbility") == 1) { return state("WeaponSpecial"); }
				if (CountInv("UseEquipment") == 1) { return state("UseEquipment"); }
				if (CountInv("ToggleEquipment") == 1) { return state("SwitchEquipment"); }
				if (CountInv("GrabbedBarrel") == 1) { return state("GrabBarrel"); }
				if (CountInv("Kicking") == 1) { return state("DoKick"); }
				if (CountInv("Taunting") == 1) { return state("Taunt"); }
				if (CountInv("Salute1") == 1 || CountInv("Salute2") == 1) { return state("Salute"); }
				return state("");
		}
		Loop
		
	ReadyBurningBarrel:
        TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        THRG DDEEFFGGFFEE 1
		{
			A_WeaponReady;
			
				if (CountInv("DoPunch") == 1) { return state("QuickPunch"); }
				if (CountInv("Grabbing_A_Ledge") == 1) { return state("LedgeClimb"); }
				if (CountInv("GoWeaponSpecialAbility") == 1) { return state("WeaponSpecial"); }
				if (CountInv("UseEquipment") == 1) { return state("UseEquipment"); }
				if (CountInv("ToggleEquipment") == 1) { return state("SwitchEquipment"); }
				if (CountInv("GrabbedBarrel") == 1) { return state("GrabBarrel"); }
				if (CountInv("Kicking") == 1) { return state("DoKick"); }
				if (CountInv("Taunting") == 1) { return state("Taunt"); }
				if (CountInv("Salute1") == 1 || CountInv("Salute2") == 1) { return state("Salute"); }
				return state("");
		}
		Loop
		
	ReadyArachno:
		TNT1 AAA 0 
		TNT1 A 2 A_WeaponReady
		Goto Ready+8
		
	RemoveArachnoGun:
		TNT1 A 0
		TNT1 A 0 A_TakeInventory("ArachnotronTurret", 1)
		TNT1 A 0 A_TakeInventory("ArachnoGun", 1)
		Goto Ready+8
    Deselect:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(90);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		TNT1 A 0 A_TakeInventory("PowerBloodOnVisor",1)
		TNT1 A 0 A_TakeInventory("PowerBlueBloodOnVisor",1)
		TNT1 A 0 A_TakeInventory("PowerGreenBloodOnVisor",1)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		TNT1 A 0 A_TakeInventory("FistsSelected",1)
		TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"FireBarrel")
		TNT1 A 0 A_JumpIfInventory("GotMeatShield", 1, "GrabEnemy")
		PUNS HIJ 1
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait
	GrabObject:
		TNT1 A 0
	    TNT1 A 0 A_PlaySound("weapons/fistwhoosh2")
		TNT1 A 0 A_TakeInventory("GrabbedBarrel", 1)
		TNT1 A 0 A_TakeInventory("GrabbedBurningBarrel", 1)
        PKUP ABCDEF 1
		Goto Ready

    KillLS:
		THEA E 1 A_PlaySound("gore/headshot")
        THEA E 3 
        THEA F 4 
		{
			A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
			A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
			A_FireCustomMissile("LSOHK",40,0,0,5);
			A_TakeInventory("LostSoulFatality",1);
			A_TakeInventory("PhantasmFatality",1);
			A_TakeInventory("GoWeaponSpecialAbility",1);
		} 
		Goto Ready
		
	Select:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(90);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		Goto SelectFirstPersonLegs
		SelectContinue:
		
		//Load bloody fist frames into memory
		TNT1 A 0 A_TakeInventory("PowerBloodOnVisor",1)
		TNT1 A 0 A_TakeInventory("PowerBlueBloodOnVisor",1)
		TNT1 A 0 A_TakeInventory("PowerGreenBloodOnVisor",1)
		
		TNT1 A 0 A_TakeInventory("GrabbedBarrel", 1)
		TNT1 A 0 A_TakeInventory("GrabbedBurningBarrel", 1)
	//	TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"ReadyBarrel")
	//	TNT1 A 0 A_JumpIfInventory("HasBurningBarrel",1,"ReadyBurningBarrel")
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		TNT1 A 0 A_TakeInventory("Reloading", 1) //Prevent accidentally switching to smash/fatality mode
		TNT1 A 0 A_GiveInventory("FistsSelected",1)
		TNT1 A 0 A_TakeInventory("RifleSelected",1)
		TNT1 A 0 A_TakeInventory("CarbineSelected",1)
		TNT1 A 0 A_TakeInventory("SawSelected",1)
		TNT1 A 0 A_TakeInventory("SledgeSelected",1)
		TNT1 A 0 A_TakeInventory("HandgunSelected",1)
		TNT1 A 0 A_TakeInventory("DualHandgunSelected",1)
		TNT1 A 0 A_TakeInventory("RevolverSelected",1)
		TNT1 A 0 A_TakeInventory("ShotgunSelected",1)
		TNT1 A 0 A_TakeInventory("SSGSelected",1)
		TNT1 A 0 A_TakeInventory("ASGSelected",1)
		TNT1 A 0 A_TakeInventory("QSGSelected",1)
		TNT1 A 0 A_TakeInventory("MinigunSelected",1)
		TNT1 A 0 A_TakeInventory("NewChaingunSelected",1)
		TNT1 A 0 A_TakeInventory("RocketLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("GrenadeLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("SGLSelected",1)
		TNT1 A 0 A_TakeInventory("PlasmaGunSelected",1)
		TNT1 A 0 A_TakeInventory("M2Selected",1)	
		TNT1 A 0 A_TakeInventory("FreezerSelected",1)
		TNT1 A 0 A_TakeInventory("RailGunSelected",1)
		TNT1 A 0 A_TakeInventory("BFGSelected",1)
		TNT1 A 0 A_TakeInventory("BFGBeamSelected",1)
		TNT1 A 0 A_TakeInventory("BHCSelected",1)
		TNT1 A 0 A_TakeInventory("RevenantLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("FlameCannonSelected",1)
		TNT1 A 0 A_TakeInventory("HellRifleSelected",1)
		TNT1 A 0 A_TakeInventory("LandMineSelected",1)
		TNT1 A 0 A_TakeInventory("UACSMGSelected",1)
		TNT1 A 0 A_TakeInventory("SubMachineGunSelected",1)
		TNT1 A 0 A_TakeInventory("LostSoulSelected",1)
		TNT1 A 0 A_TakeInventory("RevenantCurse", 5)
		TNT1 A 0 A_TakeInventory("DoomerJetpackActivated", 5)
		TNT1 A 0 A_TakeInventory("RevenantTransformation", 5)
		TNT1 A 0 A_TakeInventory("RevenantMorph", 5)
		TNT1 A 0 A_TakeInventory("DemonMorphEffects", 5)
		TNT1 A 0 A_TakeInventory("HasIncendiaryWeapon", 1)
        ////////////////// Check if player is performing a fatality\\\\
		TNT1 A 0
        ////////////////////
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Raise
		TNT1 AAAAAAAA 1 A_Raise
		Wait
	
	
	//Who needs multiple states for the same conditions anyway, its almost 2020!
	Fire: //Left Handed Punches
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(90);
		}
		TNT1 A 0 A_GiveInventory("PB_LockScreenTilt",1)
		TNT1 A 0 A_WeaponOffset(0,32)
		TNT1 A 0 A_SetRoll(0)
		
		TNT1 A 0 A_JumpIfInventory("ShotgunguyHead",1,"ShotgunguyHeadFire")
		TNT1 A 0 A_JumpIfInventory("ArachnoGun", 1, "ArachnoFire")
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		TNT1 A 0 A_JumpIfInventory("LostSoulFatality",1,"LSFire")
		TNT1 A 0 A_JumpIfInventory("PhantasmFatality",1,"PHFire")
		TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"FireBarrel")
		TNT1 A 0 A_JumpIfInventory("HasBurningBarrel",1,"FireBBarrel")
		
		//Combo Checker
		TNT1 A 0 {
				if (CountInv("PSeq4") >= 1 ) { return state("LeftHook"); }
				if (CountInv("PSeq3") >= 1 ) { return state("LeftBackHand"); }
				if (CountInv("PSeq2") >= 1 ) { return state("LeftUpperCut"); }
				if (CountInv("PSeq1") >= 2 ) { return state("LeftHook"); }
				return state("");
			}
		
	LeftJab:
		TNT1 A 0 A_GiveInventory("Punching",1)
		TNT1 A 0 A_GiveInventory("PSeq1",1)
//Added to prevent an issue with the PSPF_PLAYERTRANSLATED flag overwriting the
//green blood  when doing punch and kick combos at the same time.		
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
		//Initialize Bloodied Sprites in GZDoom's virtual memory
		P1NJ ABCDEFGH 0
		P2NJ ABCDEFGH 0
		P3NJ ABCDEFGH 0
		P4NJ ABCDEFGH 0
		P2NB ABCDEFGH 0 
		P3NB ABCDEFGH 0 
		P4NB ABCDEFGH 0 
		
		P1NB AAB 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NB"); }
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NB");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NB");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NJ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NJ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NJ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NJ");}
			A_SetRoll(roll+0.5);
			}
        TNT1 A 0 A_PlaySound("weapons/fistwhoosh2")
		//Determine berserk strike or not
		TNT1 A 0 {
			if (CountInv("PowerStrength") >= 1 ) 
			{ 
				if (CountInv("NoFatality") >= 1 ) {A_FireCustomMissile("MeleeStrike2Smash", 0, 0, 0, 0);}
				else {A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 0, 0);}
			}
			else {A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 0);}
		}
		P1NB CDD 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NB"); }
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NB");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NB");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NJ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NJ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NJ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NJ");}
			}
		P1NB EFGH 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NB"); }
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NB");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NB");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NJ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NJ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NJ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NJ");}
			A_SetRoll(roll-0.5);
			A_WeaponReady(WRF_NOPRIMARY);
				if (CountInv("Kicking") == 1) { return state("SideKickRight"); }
				return state("");
			}
		TNT1 A 0 A_SetRoll(0)
		Goto ReadyFists
		
	LeftHook:
		TNT1 A 0 A_GiveInventory("Punching",1)
		TNT1 A 0 A_GiveInventory("PSeq2",1)
		TNT1 A 0 A_TakeInventory("PSeq1",3)
//Added to prevent an issue with the PSPF_PLAYERTRANSLATED flag overwriting the
//green blood  when doing punch and kick combos at the same time.		
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
		
		//Initialize Bloodied Sprites in GZDoom's virtual memory
		P2NC ABCDEFGHIJKLMNOPQRSTUVWX 0 
		P3NC ABCDEFGHIJKLMNOPQRSTUVWX 0 
		P4NC ABCDEFGHIJKLMNOPQRSTUVWX 0 
		P1NK ABCDEFGHIJKLMNOPQRSTUVWX 0 
		P2NK ABCDEFGHIJKLMNOPQRSTUVWX 0 
		P3NK ABCDEFGHIJKLMNOPQRSTUVWX 0 
		P4NK ABCDEFGHIJKLMNOPQRSTUVWX 0 
		
		P1NC ABCDE 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NC"); }
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NC");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NC");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NK");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NK");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NK");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NK");}
			A_SetRoll(roll-2);
			}
		TNT1 A 2
		TNT1 A 0 A_PlaySound("weapons/ultrwhoosh", 5)
		P1NC FG 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NC"); }
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NC");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NC");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NK");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NK");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NK");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NK");}
			A_SetRoll(roll+2);
			}
		
		//Determine berserk strike or not
		TNT1 A 0 {
			if (CountInv("PowerStrength") >= 1 ) 
			{ 
				if (CountInv("NoFatality") >= 1 ) {
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, 0, 5);
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, -25, 5);
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, 25, 5);
				}
				else {
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 0, 5);
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, -25, 5);
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, 25, 5);
					}
			}
			else {
				A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 5);
				A_FireCustomMissile("MeleeStrike1", 0, 0, -25, 5);
				A_FireCustomMissile("MeleeStrike1", 0, 0, 25, 5);
			}
		}
		
		P1NC HIJKLMNO 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NC"); }
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NC");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NC");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NK");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NK");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NK");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NK");}
			A_SetRoll(roll+1);
			}
		
		P1NC PPQRS 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NC"); }
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NC");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NC");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NK");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NK");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NK");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NK");}
			A_SetRoll(roll-2);
			}
		P1NC TUVWX 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NC"); }
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NC");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NC");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NK");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NK");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NK");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NK");}
			A_SetRoll(roll+2);
			A_WeaponReady(WRF_NOPRIMARY);
				if (CountInv("Kicking") == 1) { return state("HookKickRight"); }
				return state("");
			}
		TNT1 A 0 A_SetRoll(0)
		Goto ReadyFists
		
	LeftUpperCut:
		TNT1 A 0 A_GiveInventory("Punching",1)
		TNT1 A 0 A_TakeInventory("PSeq1",3)
		TNT1 A 0 A_TakeInventory("PSeq2",3)
//Added to prevent an issue with the PSPF_PLAYERTRANSLATED flag overwriting the
//green blood  when doing punch and kick combos at the same time.		
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
		//Initialize Bloodied Sprites in GZDoom's virtual memory
		P2NE ABCDEFGHIJKLM 0 
		P3NE ABCDEFGHIJKLM 0 
		P4NE ABCDEFGHIJKLM 0 
		P1NL ABCDEFGHIJKLM 0 
		P2NL ABCDEFGHIJKLM 0 
		P3NL ABCDEFGHIJKLM 0 
		P4NL ABCDEFGHIJKLM 0 
		
		P1NE ABCDDD 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NE");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NE");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NE");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NL");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NL");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NL");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NL");}
			A_SetRoll(roll-2);
			}
		TNT1 A 0 A_PlaySound("weapons/ultrwhoosh", 5)
		
		//Determine berserk strike or not
		TNT1 A 0 {
			if (CountInv("PowerStrength") >= 1 ) 
			{ 
				if (CountInv("NoFatality") >= 1 ) {
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, 0, 0);
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, 0, 5);
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, 0, 10);
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, 0, 15);
				}
				else {
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 0, 0);
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 0, 5);
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 0, 10);
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 0, 15);
					}
			}
			else {
				A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 0);
				A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 5);
				A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 10);
				A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 15);
			}
		}
		
		
		P1NE EE 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NE");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NE");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NE");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NL");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NL");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NL");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NL");}
			A_SetRoll(roll+2);
			}
		P1NE FGHH 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NE");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NE");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NE");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NL");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NL");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NL");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NL");}
			A_SetRoll(roll+2);
			}
		P1NE IJ 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NE");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NE");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NE");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NL");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NL");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NL");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NL");}
			}
		P1NE KLM 1{
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NE");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NE");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NE");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NL");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NL");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NL");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NL");}
				A_WeaponReady(WRF_NOPRIMARY);
				if (CountInv("Kicking") == 1) { return state("SideKickRight"); }
				return state("");
			}
		TNT1 A 0 A_SetRoll(0)
		Goto ReadyFists
		
	LeftBackHand:
		TNT1 A 0 A_GiveInventory("Punching",1)
		TNT1 A 0 A_TakeInventory("PSeq1",3)
		TNT1 A 0 A_TakeInventory("PSeq2",3)
		TNT1 A 0 A_TakeInventory("PSeq3",3)
//Added to prevent an issue with the PSPF_PLAYERTRANSLATED flag overwriting the
//green blood  when doing punch and kick combos at the same time.		
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
		//Initialize Bloodied Sprites in GZDoom's virtual memory
		P2NH ABCDEFGHIJKLMNOPQRST 0 
		P3NH ABCDEFGHIJKLMNOPQRST 0 
		P4NH ABCDEFGHIJKLMNOPQRST 0 
		P1NM ABCDEFGHIJKLMNOPQRST 0 
		P2NM ABCDEFGHIJKLMNOPQRST 0 
		P3NM ABCDEFGHIJKLMNOPQRST 0 
		P4NM ABCDEFGHIJKLMNOPQRST 0 
		
		P1NH ABCD 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NH");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NH");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NH");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NM");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NM");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NM");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NM");}
			A_SetRoll(roll+2);
		}
		TNT1 A 2
		TNT1 A 0 A_PlaySound("weapons/ultrwhoosh", 5)
		P1NH E 2 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NH");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NH");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NH");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NM");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NM");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NM");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NM");}
		}
		
		//Determine berserk strike or not
		TNT1 A 0 {
			if (CountInv("PowerStrength") >= 1 ) 
			{ 
				if (CountInv("NoFatality") >= 1 ) {
					A_FireCustomMissile("MeleeStrike2Smash", 0, 0, 0, 5);
					A_FireCustomMissile("MeleeStrike2Smash", 0, 0, 25, 5);
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, -25, 5);
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, -32, 5);
				}
				else {
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 0, 5);
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 25, 5);
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, -25, 5);
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, -32, 5);
					}
			}
			else {
				A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 5);
				A_FireCustomMissile("MeleeStrike1", 0, 0, 25, 5);
				A_FireCustomMissile("MeleeStrike1", 0, 0, -25, 5);
				A_FireCustomMissile("MeleeStrike1", 0, 0, -32, 5);
			}
		}
		
		
		P1NH FFGHIJKL 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NH");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NH");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NH");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NM");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NM");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NM");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NM");}
			A_SetRoll(roll-2);
		}
		P1NH MNOP 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NH");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NH");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NH");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NM");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NM");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NM");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NM");}
			A_SetRoll(roll+2);
		}
		P1NH QRST 1{
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NH");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NH");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NH");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NM");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NM");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NM");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NM");}
				A_WeaponReady(WRF_NOPRIMARY);
				if (CountInv("Kicking") == 1) { return state("DoKick"); }
				return state("");
		}
		Goto ReadyFists
		
    AltFire: //Right Handed Punches
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(90);
		}
		TNT1 A 0 A_GiveInventory("PB_LockScreenTilt",1)
		TNT1 A 0 A_WeaponOffset(0,32)
		TNT1 A 0 A_SetRoll(0)
		
		TNT1 A 0 A_JumpIfInventory("ArachnoGun", 1, "RemoveArachnoGun")
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		TNT1 A 0 A_JumpIfInventory("HasBarrel",1,"AltFireBarrel")
		TNT1 A 0 A_JumpIfInventory("HasBurningBarrel",1,"AltFireBBarrel")
		
		//Combo Checker
		TNT1 A 0 {
				if (CountInv("PSeq4") >= 1 ) { return state("RightBackHand"); }
				if (CountInv("PSeq3") >= 1 ) { return state("RightHook"); }
				if (CountInv("PSeq2") >= 1 ) { return state("RightUpperCut"); }
				if (CountInv("PSeq1") >= 2 ) { return state("RightHook"); }
				return state("");
			}
		
		
	RightJab:
		TNT1 A 0 A_GiveInventory("Punching",1)
		TNT1 A 0 A_GiveInventory("PSeq1",1)
//Added to prevent an issue with the PSPF_PLAYERTRANSLATED flag overwriting the
//green blood  when doing punch and kick combos at the same time.		
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
		//Initialize Bloodied Sprites in GZDoom's virtual memory
		P2NA ABCDEFGH 0 
		P3NA ABCDEFGH 0 
		P4NA ABCDEFGH 0 
		P1NN ABCDEFGH 0 
		P2NN ABCDEFGH 0 
		P3NN ABCDEFGH 0 
		P4NN ABCDEFGH 0 
		
		P1NA AAB 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NA");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NA");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NA");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NN");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NN");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NN");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NN");}
			A_SetRoll(roll-0.5);
			}
        TNT1 A 0 A_PlaySound("weapons/fistwhoosh2")
		
		//Determine berserk strike or not
		TNT1 A 0 {
			if (CountInv("PowerStrength") >= 1 ) 
			{ 
				if (CountInv("NoFatality") >= 1 ) {A_FireCustomMissile("MeleeStrike2Smash", 0, 0, 0, 0);}
				else {A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 0, 0);}
			}
			else {A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 0);}
		}
		
		P1NA CDDE 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NA");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NA");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NA");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NN");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NN");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NN");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NN");}
			}
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		P1NA FGH 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NA");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NA");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NA");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NN");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NN");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NN");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NN");}
				A_SetRoll(roll+0.5);
				A_WeaponReady(WRF_NOSECONDARY);
				if (CountInv("Kicking") == 1) { return state("SideKickLeft"); }
				return state("");
			}
		Goto ReadyFists
		
	
	RightHook:
		TNT1 A 0 A_GiveInventory("Punching",1)
		TNT1 A 0 A_GiveInventory("PSeq2",1)
		TNT1 A 0 A_TakeInventory("PSeq1",3)
//Added to prevent an issue with the PSPF_PLAYERTRANSLATED flag overwriting the
//green blood  when doing punch and kick combos at the same time.		
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
		
		//Initialize Bloodied Sprites in GZDoom's virtual memory
		P2ND ABCDEFGHIJKLMNOPQRSTUVW 0 
		P3ND ABCDEFGHIJKLMNOPQRSTUVW 0 
		P4ND ABCDEFGHIJKLMNOPQRSTUVW 0 
		P1NO ABCDEFGHIJKLMNOPQRSTUVW 0 
		P2NO ABCDEFGHIJKLMNOPQRSTUVW 0 
		P3NO ABCDEFGHIJKLMNOPQRSTUVW 0 
		P4NO ABCDEFGHIJKLMNOPQRSTUVW 0 
		
		P1ND ABCD 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2ND");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3ND");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4ND");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NO");}
			A_SetRoll(roll+2);
			}
		TNT1 A 1 A_SetRoll(roll+2)
		TNT1 A 2
		TNT1 A 0 A_PlaySound("weapons/ultrwhoosh", 5)
		P1ND EF 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2ND");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3ND");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4ND");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NO");}
			A_SetRoll(roll-2);
			}
			
		//Determine berserk strike or not
		TNT1 A 0 {
			if (CountInv("PowerStrength") >= 1 ) 
			{ 
				if (CountInv("NoFatality") >= 1 ) {
					A_FireCustomMissile("MeleeStrike2Smash", 0, 0, 0, 5);
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, -25, 5);
					A_FireCustomMissile("MeleeStrike2Smash", 0, 0, 25, 5);
				}
				else {
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 0, 5);
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, -25, 5);
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 25, 5);
					}
			}
			else {
				A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 5);
				A_FireCustomMissile("MeleeStrike1", 0, 0, -25, 5);
				A_FireCustomMissile("MeleeStrike1", 0, 0, 25, 5);
			}
		}
		
		
		P1ND G 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2ND");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3ND");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4ND");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NO");}
			}
		P1ND HIJKLMNO 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2ND");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3ND");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4ND");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NO");}
			A_SetRoll(roll-1);
			}
		P1ND O 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2ND");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3ND");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4ND");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NO");}
			}
		P1ND PQRS 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2ND");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3ND");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4ND");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NO");}
			A_SetRoll(roll+2);
			}
		P1ND TUVW 1{
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2ND");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3ND");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4ND");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NO");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NO");}
			A_SetRoll(roll-2);
			A_WeaponReady(WRF_NOSECONDARY);
				if (CountInv("Kicking") == 1) { return state("HookKickLeft"); }
				return state("");
			}
		TNT1 A 0 A_SetRoll(0)
		Goto ReadyFists
		
	RightUpperCut:
		TNT1 A 0 A_GiveInventory("Punching",1)
		TNT1 A 0 A_TakeInventory("PSeq1",3)
		TNT1 A 0 A_TakeInventory("PSeq2",3)
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
		//Initialize Bloodied Sprites in GZDoom's virtual memory
		P2NF ABCDEFGHIJKLM 0 
		P3NF ABCDEFGHIJKLM 0 
		P4NF ABCDEFGHIJKLM 0 
		P1NP ABCDEFGHIJKLM 0 
		P2NP ABCDEFGHIJKLM 0 
		P3NP ABCDEFGHIJKLM 0 
		P4NP ABCDEFGHIJKLM 0 
		
		P1NF ABCDDD 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NF");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NF");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NF");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NP");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NP");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NP");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NP");}
			A_SetRoll(roll+2);
			}
		TNT1 A 0 A_PlaySound("weapons/ultrwhoosh", 5)
		//Determine berserk strike or not
		TNT1 A 0 {
			if (CountInv("PowerStrength") >= 1 ) 
			{ 
				if (CountInv("NoFatality") >= 1 ) {
					A_FireCustomMissile("MeleeStrike2Smash", 0, 0, 0, 0);
					A_FireCustomMissile("MeleeStrike2Smash", 0, 0, 0, 5);
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, 0, 10);
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, 0, 15);
				}
				else {
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 0, 0);
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 0, 5);
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 0, 10);
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 0, 15);
					}
			}
			else {
				A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 0);
				A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 5);
				A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 10);
				A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 15);
			}
		}
		P1NF EE 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NF");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NF");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NF");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NP");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NP");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NP");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NP");}
			A_SetRoll(roll-2);
			}
		P1NF FGHH 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NF");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NF");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NF");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NP");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NP");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NP");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NP");}
			A_SetRoll(roll-2);
			}
		P1NF IJ 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NF");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NF");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NF");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NP");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NP");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NP");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NP");}
			}
		P1NF KLM 1{
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NF");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NF");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NF");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NP");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NP");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NP");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NP");}
				A_WeaponReady(WRF_NOSECONDARY);
				if (CountInv("Kicking") == 1) { return state("SideKickLeft"); }
				return state("");
			}
		TNT1 A 0 A_SetRoll(0)
		Goto ReadyFists
		
	RightBackHand:
		TNT1 A 0 A_GiveInventory("Punching",1)
		TNT1 A 0 A_TakeInventory("PSeq1",3)
		TNT1 A 0 A_TakeInventory("PSeq2",3)
		TNT1 A 0 A_TakeInventory("PSeq3",3)
		TNT1 A 0 A_TakeInventory("PSeq4",3)
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
		//Initialize Bloodied Sprites in GZDoom's virtual memory
		P2NI ABCDEFGHIJKLMNOPQRST 0 
		P3NI ABCDEFGHIJKLMNOPQRST 0 
		P4NI ABCDEFGHIJKLMNOPQRST 0 
		P1NQ ABCDEFGHIJKLMNOPQRST 0 
		P2NQ ABCDEFGHIJKLMNOPQRST 0 
		P3NQ ABCDEFGHIJKLMNOPQRST 0 
		P4NQ ABCDEFGHIJKLMNOPQRST 0 
		
		P1NI ABCD 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NI");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NI");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NI");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NQ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NQ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NQ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NQ");}
			A_SetRoll(roll+2);
		}
		TNT1 A 2
		TNT1 A 0 A_PlaySound("weapons/ultrwhoosh", 5)
		P1NI E 2 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NI");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NI");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NI");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NQ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NQ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NQ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NQ");}
		}
		
		//Determine berserk strike or not
		TNT1 A 0 {
			if (CountInv("PowerStrength") >= 1 ) 
			{ 
				if (CountInv("NoFatality") >= 1 ) {
					A_FireCustomMissile("MeleeStrike2Smash", 0, 0, 0, 5);
					A_FireCustomMissile("MeleeStrike2Smash", 0, 0, -25, 5);
					A_FireCustomMissile("MeleeStrike2Smash", 0, 0, 25, 5);
					A_FireCustomMissile("MeleeStrike2Smash", 0, 0, 32, 5);
				}
				else {
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, 0, 5);
					A_FireCustomMissile("MeleeStrike1Fatality", 0, 0, -25, 5);
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, 25, 5);
					A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, 32, 5);
					}
			}
			else {
				A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 5);
				A_FireCustomMissile("MeleeStrike1", 0, 0, -25, 5);
				A_FireCustomMissile("MeleeStrike1", 0, 0, 25, 5);
				A_FireCustomMissile("MeleeStrike1", 0, 0, 32, 5);
			}
		}
		
		P1NI FFGHIJKL 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NI");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NI");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NI");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NQ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NQ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NQ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NQ");}
			A_SetRoll(roll-2);
		}
		P1NI MNOP 1 {
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NI");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NI");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NI");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NQ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NQ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NQ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NQ");}
			A_SetRoll(roll+2);
		}
		P1NI QRST 1{
			if (CountInv("PowerBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P2NI");}
			if (CountInv("PowerBlueBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P3NI");}
			if (CountInv("PowerGreenBloodOnVisor") >= 1 ) { A_SetWeaponSprite("P4NI");}
			if (CountInv("PowerStrength") >= 1 ) { A_SetWeaponSprite("P1NQ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBloodOnVisor") >= 1) { A_SetWeaponSprite("P2NQ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerBlueBloodOnVisor") >= 1) { A_SetWeaponSprite("P3NQ");}
			if (CountInv("PowerStrength") >= 1 & CountInv("PowerGreenBloodOnVisor") >= 1) { A_SetWeaponSprite("P4NQ");}
				A_WeaponReady(WRF_NOPRIMARY);
				if (CountInv("Kicking") == 1) { return state("DoKick"); }
				return state("");
		}
		Goto ReadyFists
		
	ShotgunguyHeadFire:
		PTG1 CDEFGHIJ 1
        TNT1 A 0 A_PlaySound("skeleton/swing")
		TNT1 A 0 A_Giveinventory("Punching",1)
        PTG1 K 1 A_FireCustomMissile("SergeantHeadThrown", 0, 0, 0, 0)
        PTG1 LMNOP 1
        TNT1 A 0 A_TakeInventory("ShotgunguyHead",1)
		Goto Ready+8	

	LSFire:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		THEF A 3
        TNT1 A 0 A_PlaySound("weapons/fistwhoosh2")
		TNT1 A 0 A_GiveInventory("Punching",1)
        THEF B 0 A_FireCustomMissile("PoorLostSoul", 0, 1, 0, 0)
        THRF ABCDEF 2
        TNT1 A 0 A_TakeInventory("LostSoulFatality",1)
		Goto Ready+8
		
	PHFire:
		TNT1 A 0 A_TakeInventory("ArachnotronTurretFiring", 1)
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		TH3F A 3
        TNT1 A 0 A_PlaySound("weapons/fistwhoosh2")
		TNT1 A 0 A_GiveInventory("Punching",1)
        THEF B 0 A_FireCustomMissile("PoorPhantasm", 0, 1, 0, 0)
        THRF ABCDEF 2
        TNT1 A 0 A_TakeInventory("PhantasmFatality",1)
		Goto Ready+8
		
	ArachnoFire:
		TNT1 A 0 A_GiveInventory("ArachnotronTurretFiring", 1)
		TNT1 A 0 A_PlaySound("PLSM9")
		TNT1 A 7 A_FireCustomMissile("ArachnoGun_Plasma", 0, 1, 0, 0)
		TNT1 A 0 A_FireCustomMissile("SmokeSpawner",0,0,0,5)
		TNT1 A 0 A_FireCustomMissile("ShakeYourAssMinor", 0, 0, 0, 0)
        TNT1 A 0 A_FireCustomMissile("BlueFlareSpawn",0,0,0,0)
		TNT1 A 0 A_TakeInventory("ArachnotronTurretFiring", 1)
		TNT1 A 0 A_Refire
		Goto Ready+8

	FireBarrel:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		THRF A 3 A_FireCustomMissile("ThrowedBarrel", 0, 1, 0, 0)
        TNT1 A 0 A_PlaySound("weapons/fistwhoosh2")
		TNT1 A 0 A_GiveInventory("Punching",1)
		TNT1 A 0 A_TakeInventory("HasBarrel",1)
        THRF ABCDEF 2
		Goto Ready+8
	FireBBarrel:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		THRF A 3 A_FireCustomMissile("ThrowedBurningBarrel", 0, 1, 0, 0)
        TNT1 A 0 A_PlaySound("weapons/fistwhoosh2")
		TNT1 A 0 A_GiveInventory("Punching",1)
		TNT1 A 0 A_TakeInventory("HasBurningBarrel",1)
        THRF ABCDEF 2
		Goto Ready+8

	AltFireBarrel:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		THRF F 1
		THRF A 0 A_SpawnItemEx ("ExplosiveBarrel",40,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
        TNT1 A 0 A_PlaySound("weapons/fistwhoosh2")
		TNT1 A 0 A_GiveInventory("Punching",1)
		TNT1 A 0 A_TakeInventory("HasBarrel",1)
		THRF F 5
		Goto Ready+8
	AltFireBBarrel:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
	    THRF F 1
		THRF A 0 A_SpawnItemEx ("BurningBarrel1",40,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
        TNT1 A 0 A_PlaySound("weapons/fistwhoosh2")
		TNT1 A 0 A_GiveInventory("Punching",1)
		TNT1 A 0 A_TakeInventory("HasBurningBarrel",1)
		THRF F 5
		Goto Ready+8
		
	SideKickLeft:
		TNT1 A 0 {
			A_SetRoll(0);
			A_Overlay(-10, "FirstPersonLegsKickLeft");
			A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, true);
		}
		TNT1 A 0 A_GiveInventory("PB_LockScreenTilt",1)
		TNT1 A 0 A_Overlay(3, "FlashKicking")
		TNT1 A 0 A_TakeInventory("PSeq1",3)
		TNT1 A 0 A_TakeInventory("PSeq2",3)
		TNT1 A 0 A_TakeInventory("PSeq4",3)
		TNT1 A 0 A_GiveInventory("PSeq3",1)
		KIC4 ABCDEF 1 A_SetRoll(roll+1)
        TNT1 A 0 A_PlaySound("KICK", 5)
		KIC4 GG 1
		TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, 3)
		TNT1 A 0 A_FireCustomMissile("KickAttack", 0, 0, 5, 5)
		TNT1 A 0 A_Jump(256, 2)
		TNT1 A 0 A_FireCustomMissile("SuperKickAttack", 0, 0, 5, 5)
		TNT1 A 0 A_TakeInventory("Kicking",1)
		KIC4 HIJKLM 1 A_SetRoll(roll-1)
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
		TNT1 AAAA 1 {
				A_WeaponReady;
				if (CountInv("Kicking") == 1) { return state("HookKickLeft"); }
				return state("");
			}
		TNT1 A 0 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		Goto ReadyFists
		
	SideKickRight:
		TNT1 A 0 {
			A_SetRoll(0);
			A_Overlay(-10, "FirstPersonLegsKickRight");
			A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, true);
		}
		TNT1 A 0 A_GiveInventory("PB_LockScreenTilt",1)
		TNT1 A 0 A_Overlay(3, "FlashKicking")
		TNT1 A 0 A_TakeInventory("PSeq1",3)
		TNT1 A 0 A_TakeInventory("PSeq2",3)
		TNT1 A 0 A_TakeInventory("PSeq4",3)
		TNT1 A 0 A_GiveInventory("PSeq3",1)
		KIC5 ABCDEF 1 A_SetRoll(roll-1)
        TNT1 A 0 A_PlaySound("KICK", 5)
		KIC5 GG 1
		TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, 3)
		TNT1 A 0 A_FireCustomMissile("KickAttack", 0, 0, -5, 5)
		TNT1 A 0 A_Jump(256, 2)
		TNT1 A 0 A_FireCustomMissile("SuperKickAttack", 0, 0, -5, 5)
		TNT1 A 0 A_TakeInventory("Kicking",1)
		KIC5 HIJKLM 1 A_SetRoll(roll+1)
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
		TNT1 AAAA 1 {
				A_WeaponReady;
				if (CountInv("Kicking") == 1) { return state("HookKickRight"); }
				return state("");
			}
		TNT1 A 0 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		Goto ReadyFists
		
	HookKickLeft:
		TNT1 A 0 {
			A_SetRoll(0);
			A_Overlay(-10, "FirstPersonLegsKickLeft");
			A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, true);
		}
		TNT1 A 0 A_GiveInventory("PB_LockScreenTilt",1)
		TNT1 A 0 A_Overlay(3, "FlashKicking")
		TNT1 A 0 A_TakeInventory("PSeq1",3)
		TNT1 A 0 A_TakeInventory("PSeq2",3)
		TNT1 A 0 A_TakeInventory("PSeq3",3)
		TNT1 A 0 A_GiveInventory("PSeq4",1)
		KIC3 ABCDE 1 A_SetRoll(roll+1)
		TNT1 A 0 A_PlaySound("KICK", 0)
		TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, 5)
		KIC3 F 1 A_FireCustomMissile("KickAttack", -10, 0, 0, -8)
		KIC3 G 1 A_FireCustomMissile("KickAttack", 0, 0, 0, -2)
		KIC3 H 1 A_FireCustomMissile("KickAttack", 10, 0, 0, -8)
		TNT1 A 0 A_Jump(256, 4)
		TNT1 A 0
		KIC3 F 1 A_FireCustomMissile("SuperKickAttack", -10, 0, 0, -8)
		KIC3 G 1 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -2)
		KIC3 H 1 A_FireCustomMissile("SuperKickAttack", 10, 0, 0, -8)
		TNT1 A 0
		KIC3 IJKLM 1 A_SetRoll(roll-2)
		KIC3 NOPQR 1 A_SetRoll(roll+1)
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
		TNT1 A 0 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 AAAA 1 A_WeaponReady
		Goto ReadyFists
		
	HookKickRight:
		TNT1 A 0 {
			A_SetRoll(0);
			A_Overlay(-10, "FirstPersonLegsKickRight");
			A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, true);
		}
		TNT1 A 0 A_GiveInventory("PB_LockScreenTilt",1)
		TNT1 A 0 A_Overlay(3, "FlashKicking")
		TNT1 A 0 A_TakeInventory("PSeq1",3)
		TNT1 A 0 A_TakeInventory("PSeq2",3)
		TNT1 A 0 A_TakeInventory("PSeq3",3)
		TNT1 A 0 A_GiveInventory("PSeq4",1)
		KIC6 ABCDE 1 A_SetRoll(roll-1)
		TNT1 A 0 A_PlaySound("KICK", 0)
		TNT1 A 0 A_JumpIfInventory("PowerStrength", 1, 5)
		KIC6 F 1 A_FireCustomMissile("KickAttack", 10, 0, 0, -8)
		KIC6 G 1 A_FireCustomMissile("KickAttack", 0, 0, 0, -2)
		KIC6 H 1 A_FireCustomMissile("KickAttack", -10, 0, 0, -8)
		TNT1 A 0 A_Jump(256, 4)
		TNT1 A 0
		KIC6 F 1 A_FireCustomMissile("SuperKickAttack", 10, 0, 0, -8)
		KIC6 G 1 A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -2)
		KIC6 H 1 A_FireCustomMissile("SuperKickAttack", -10, 0, 0, -8)
		TNT1 A 0
		KIC6 IJKLM 1 A_SetRoll(roll+2)
		KIC6 NOPQR 1 A_SetRoll(roll-1)
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
		TNT1 A 0 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 AAAA 1 A_WeaponReady
		Goto ReadyFists
	
	Taunt:
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_TakeInventory("Zoomed", 1)
        TNT1 A 0 A_ZoomFactor(1.0)
		FUCK KL 1
		TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", 0, 0, -1, 0)
		TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", -9, 0, -1, 0)
		TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", 9, 0, -1, 0)
        FUCK M 1 A_PlaySound("FUCK", 1)
        FUCK N 1 A_AlertMonsters
		FUCK O 15 A_TakeInventory("Taunting",1)
        FUCK NMLK 1
		Goto ReadyFists
	FlashKicking:
	FlashAirKicking:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashKickingGreen")
		TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1, "FlashKickingBlue")
		TNT1 A 0 A_JumpIfInventory("PowerBloodOnVisor",1, "FlashKickingRed")
		P5NA ABCDEFGHIJKLMNNNNNNNNNN 1
		{
			A_OverlayOffset(3, 0, 0);
			if (CountInv("Punching") == 1 || CountInv("GoWeaponSpecialAbility") == 1) { return state("FlashInterrupt"); } 
			return state("");
		}
		Stop
	FlashKickingRed:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashKickingGreen")
		TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1, "FlashKickingBlue")
		P6NA ABCDEFGHIJKLMNNNNNNNNNN 1
		{
			A_OverlayOffset(3, 0, 0);
			if (CountInv("Punching") == 1 ) { return state("FlashInterrupt"); }
			return state("");
		}
		Stop
	FlashKickingBlue:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashKickingGreen")
		P7NA ABCDEFGHIJKLMNNNNNNNNNN 1
		{
			A_OverlayOffset(3, 0, 0);
			if (CountInv("Punching") == 1) { return state("FlashInterrupt"); }
			return state("");
		}
		Stop
	FlashKickingGreen:
		P8NA ABCDEFGHIJKLMNNNNNNNNNN 1
		{
			A_OverlayOffset(3, 0, 0);
			if (CountInv("Punching") == 1) { return state("FlashInterrupt"); }
			return state("");
		}
		Stop
		
	FlashInterrupt:
		TNT1 A 0
		Stop
		
		
	FlashSlideKicking:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashSlideKickingGreen")
		TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1, "FlashSlideKickingBlue")
		TNT1 A 0 A_JumpIfInventory("PowerBloodOnVisor",1, "FlashSlideKickingRed")
		P1NS ABCDEFGHIJKLMNOPQRSTUVWXYZ 1
		Stop
	FlashSlideKickingStop:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashSlideKickingStopGreen")
		TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1, "FlashSlideKickingStopBlue")
		TNT1 A 0 A_JumpIfInventory("PowerBloodOnVisor",1, "FlashSlideKickingStopRed")
		P1NS TUVWXYZ 1 
		Stop
	FlashSlideKickingRed:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashSlideKickingGreen")
		TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1, "FlashSlideKickingBlue")
		P2NS ABCDEFGHIJKLMNOPQRSTUVWXYZ 1
		Stop
	FlashSlideKickingStopRed:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashSlideKickingStopGreen")
		TNT1 A 0 A_JumpIfInventory("PowerBlueBloodOnVisor",1, "FlashSlideKickingStopBlue")
		P2NS TUVWXYZ 1 
		Stop
	FlashSlideKickingBlue:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashSlideKickingGreen")
		P3NS ABCDEFGHIJKLMNOPQRSTUVWXYZ 1
		Stop
	FlashSlideKickingStopBlue:
		TNT1 A 0 A_JumpIfInventory("PowerGreenBloodOnVisor",1, "FlashSlideKickingStopGreen")
		P3NS TUVWXYZ 1 
		Stop
	FlashSlideKickingGreen:
		P4NS ABCDEFGHIJKLMNOPQRSTUVWXYZ 1
		Stop
	FlashSlideKickingStopGreen:
		P4NS TUVWXYZ 1 
		Stop
		
		
	}
}



ACTOR PoorLostSoul
{
	Radius 6
	Height 8
	Speed 22
    Fastspeed 26
	Damage 15
	Projectile 
    Scale 1.0
	+FORCEXYBILLBOARD
    DamageType Fire
ExplosionRadius 70
ExplosionDamage 50
	Alpha 1
	SeeSound "skull/melee"
	DeathSound "fatso/shotx"
	States
	{
	Spawn:
        TNT1 A 0 A_CustomMissile ("FlameTrails", 24, 0, 0, 0, 0)
        LSOL B 2 BRIGHT A_SpawnItem("RedFlare",0,0)
		Loop
	Death:
    
		LSOL F 2 BRIGHT
		LSOL G 2 BRIGHT
		TNT1 A 0 A_Explode
	EXPL AAAAAAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("FlameTrails", 6, 0, random (0, 360), 2, random (0, 360))
		EXPL A 0 A_SpawnItemEx("ExplosionParticleSpawner", 0, 0, 0, 0, 0, 0, 0, 0)
    TNT1 AAA 0 A_CustomMissile ("LSpart1", 42, 0, random (0, 360), 2, random (0, 160))
    TNT1 A 0 A_CustomMissile ("LSpart3", 42, 0, random (0, 360), 2, random (0, 160))
    TNT1 AAAA 0 A_CustomMissile ("LSpart2", 42, 0, random (0, 360), 2, random (0, 160))
		TNT1 A 0
        LSOL HI 6
		Stop
		Stop
	}
}

ACTOR PoorPhantasm
{
	Radius 6
	Height 8
	Speed 28
    Fastspeed 32
	Damage 20
	Projectile 
    Scale 1.0
	+FORCEXYBILLBOARD
    DamageType GreenFire
ExplosionRadius 80
ExplosionDamage 60
	Alpha 1
	SeeSound "skull/melee"
	DeathSound "LSOD"
	States
	{
	Spawn:
        TNT1 A 0 A_CustomMissile ("GreenFlameTrails", 24, 0, 0, 0, 0)
        STLK B 1 BRIGHT A_SpawnItem("GreenFlare",0,0)
		Loop
	Death:

		STLK F 2 BRIGHT
		STLK G 2 BRIGHT
		  TNT1 AAA 0 A_SpawnItemEx("PlasmaParticleSpawner", 0, 0, 0, 0, 0, 0, 0, 128)
	   TNT1 A 0 A_SpawnItemEx ("BFGAltExplosion",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
	   TNT1 A 0 A_SpawnItem("BFGAltShockWave",0,0)
		TNT1 A 0 A_Explode
		EXPL AAAAAAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("GreenFlameTrails", 6, 0, random (0, 360), 2, random (0, 360))
		EXPL A 0 A_SpawnItemEx("ExplosionParticleSpawner", 0, 0, 0, 0, 0, 0, 0, 0)
		TNT1 AAA 0 A_CustomMissile ("Phantasmpart1", 42, 0, random (0, 360), 2, random (0, 160))
		TNT1 A 0 A_CustomMissile ("Phantasmpart3", 42, 0, random (0, 360), 2, random (0, 160))
		TNT1 AAAA 0 A_CustomMissile ("Phantasmpart2", 42, 0, random (0, 360), 2, random (0, 160))
		TNT1 A 0
        LSOL HI 6
		Stop
	}
}


ACTOR ThrowedBarrel
{
	Radius 6
	Height 8
	Speed 32
    Fastspeed 32
	Damage 55
	+MISSILE
	Gravity 0.6
    Scale 1.0
	+FORCEXYBILLBOARD
	DamageType Explosive
	Alpha 1
	DeathSound "Explosion"
	States
	{
	Spawn:
        TBRA A 2
		Loop
		
    Death:
        TNT1 A 0
        TNT1 A 0 A_AlertMonsters
        TNT1 A 0 A_SpawnItemEx ("BarrelExplosion",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_SpawnItemEx ("BarrelKaboom",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 AAAAAAA 0 A_CustomMissile ("ExplosionFlames", 0, 0, random (0, 360), 2, random (0, 360))
        TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_CustomMissile ("ExplosionParticleHeavy", 0, 0, random (0, 360), 2, random (0, 180))
        TNT1 AAAAAA 0 A_CustomMissile ("ExplosionParticleHeavy", 0, 0, random (0, 180), 2, random (0, 180))
	    EXPL A 0 Radius_Quake (2, 24, 0, 15, 0)
		BEXP B 0 BRIGHT A_Scream
        
		//TNT1 AAAAAAA 0 A_CustomMissile ("BarrelParticle", 35, 0, random (0, 360), 2, random (0, 160))
		TNT1 A 0 A_PlaySound("FAREXPL", 3)
		
		TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 4 A_CustomMissile ("ExplosionSmoke", 1, 0, random (0, 360), 2, random (50, 130))
		Stop
	}
}

ACTOR ThrowedBurningBarrel
{
	Radius 6
	Height 8
	Speed 32
    Fastspeed 32
	Damage 55
	+MISSILE
	Gravity 0.6
    Scale 1.0
	+FORCEXYBILLBOARD
	DamageType ExplosiveImpact
	Alpha 1
	DeathSound "barrelb/pain"
	States
	{
	Spawn:
		TNT1 A 0 BRIGHT A_CustomMissile ("FastExplosionSmoke", 48, 0, random (40, 180), 2, random (50, 150))
		TNT1 A 0 BRIGHT A_CustomMissile ("RealFlameTrailsSmallLong", 38, 0, random (40, 180), 2, random (50, 150))
		TNT1 A 0 A_CustomMissile ("ImBallGettingReady2", 35, 0, random (0, 140), 2, random (0, 160))
		EXPL AAA 0 A_SpawnItem("BurningEmberParticlesFloating_Bigger")
		BURB  D 3 BRIGHT A_SpawnItem("RedFlare3",0,32)

		TNT1 A 0 BRIGHT A_CustomMissile ("FastExplosionSmoke", 48, 0, random (40, 180), 2, random (50, 150))
		TNT1 A 0 BRIGHT A_CustomMissile ("RealFlameTrailsSmallLong", 38, 0, random (40, 180), 2, random (50, 150))
		TNT1 A 0 A_CustomMissile ("ImBallGettingReady2", 35, 0, random (0, 140), 2, random (0, 160))
		EXPL AAA 0 A_SpawnItem("BurningEmberParticlesFloating_Bigger")
		BURB D 3 BRIGHT A_SpawnItem("RedFlare3",0,32)
		TNT1 A 0 BRIGHT A_CustomMissile ("FastExplosionSmoke", 48, 0, random (40, 180), 2, random (50, 150))
		TNT1 A 0 BRIGHT A_CustomMissile ("RealFlameTrailsSmallLong", 38, 0, random (40, 180), 2, random (50, 150))
		TNT1 A 0 A_CustomMissile ("ImBallGettingReady2", 35, 0, random (0, 140), 2, random (0, 160))
		EXPL AAA 0 A_SpawnItem("BurningEmberParticlesFloating_Bigger")
		BURB D 3 BRIGHT A_SpawnItem("RedFlare3",0,32)
		TNT1 A 0 BRIGHT A_CustomMissile ("FastExplosionSmoke", 48, 0, random (40, 180), 2, random (50, 150))
		TNT1 A 0 BRIGHT A_CustomMissile ("RealFlameTrailsSmallLong", 38, 0, random (40, 180), 2, random (50, 150))
		TNT1 A 0 A_CustomMissile ("ImBallGettingReady2", 35, 0, random (0, 140), 2, random (0, 160))
		EXPL AAA 0 A_SpawnItem("BurningEmberParticlesFloating_Bigger")
	    BURB D 3 BRIGHT A_SpawnItem("RedFlare3",0,32)
        TNT1 A 0 A_Playsound("props/redfire")
		TNT1 A 0 BRIGHT A_CustomMissile ("FastExplosionSmoke", 48, 0, random (40, 180), 2, random (50, 150))
		TNT1 A 0 BRIGHT A_CustomMissile ("RealFlameTrailsSmallLong", 30, 0, random (0, 360), 2, random (50, 150))
		TNT1 A 0 A_CustomMissile ("ImBallGettingReady2", 35, 0, random (0, 140), 2, random (0, 160))
		EXPL AAA 0 A_SpawnItem("BurningEmberParticlesFloating_Bigger")
		BURB D 3 BRIGHT A_SpawnItem("RedFlare3",0,32)

        Loop

    Death:
	    TNT1 A 0 
		TNT1 A 0 A_AlertMonsters
		BURB D 1 A_Scream
		BURB D 1 A_FaceTarget
		BURB D 0 A_Playsound("Afrit/Hellfire")
		TNT1 A 0 A_NoBlocking
		TNT1 AAAA 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
		EXPL A 0 A_SpawnItem("ExplosionParticleSpawner")
		EXPL AA 0 A_CustomMissile ("FlamethrowerFireParticles", 6, 0, random (0, 360), 2, random (0, 90))
		TNT1 A 0 A_CustomMissile ("FireworkSFXType2", 0, 0, random (0, 360), 2, random (30, 60))
		TNT1 AA 0 A_SpawnItemEx("TinyBurningPiece", random (-15, 15), random (-15, 15))
		TNT1 AAAA 0 A_SpawnItemEx("TinyBurningPiece2", random (-35, 35), random (-35, 35))
		TNT1 AA 0 A_SpawnItemEx("TinyBurningPiece3", random (-45, 45), random (-45, 35))
        TNT1 AAA 0 A_CustomMissile ("FlyingBurningFuel", 24, 0, random (150, 210), 2, random (0, 40))
		TNT1 AA 0 A_CustomMissile ("FlyingBurningFuel2", 24, 0, random (150, 210), 2, random (0, 40))
		TNT1 AA 0 A_CustomMissile ("FlyingBurningFuel3", 24, 0, random (150, 210), 2, random (0, 40))
		EXPL AAAAAA 0 A_SpawnItem("BurningEmberParticlesFloating_Bigger")//BurningEmberParticlesFloating
        BURB D 25 A_CustomMissile ("BigBlackSmoke", 0, 0, random (0, 360), 2, random (40, 160))
		BURB D -1
		Stop
	}
}

ACTOR KickAttack: FastProjectile
{
	Radius 6
	Height 6
	DamageType Kick
	Projectile 
	+FORCEXYBILLBOARD
	+NOEXTREMEDEATH
	RenderStyle Add
	Alpha 0.6
    Damage (random(38,42))
    Speed 30
	//HitObituary "$OB_IMPHIT"
	SeeSound "none"
	DeathSound "none"
	Decal "none"
	States
	{
	Spawn:
		TNT1 A 1 BRIGHT
        TNT1 A 1 //A_PlaySound("weapons/gswing")
		Stop
	Death:
			TNT1 A 0
			TNT1 A 0 A_CheckFloor("DeathOnGround")
			TNT1 A 0 A_JumpIfInTargetInventory("IsSlideKicking", 1, 13)
		    PUFF A 0 A_PlaySound("player/cyborg/fist", 3)
			TNT1 A 0 A_SpawnItemEx ("PLOFT2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
			EXPL AAAAAA 0 A_CustomMissile ("MeleeSmoke", 0, 0, random (0, 360), 2, random (0, 360))
			TNT1 A 0 A_GiveToTarget("KickHasHit", 1)
			TNT1 A 0 A_GiveToTarget("KickHasHitAnObject", 1)
			TNT1 A 0 Radius_Quake (2, 6, 0, 5, 0)//(intensity, duration, damrad, tremrad, tid)
			TNT1 A 10
			Stop
			TNT1 A 0 A_CheckFloor(2)
			PUFF A 0 A_PlaySound("player/cyborg/fist", 3)
			TNT1 A 0 A_SpawnItemEx ("PLOFT2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
			EXPL AAAAAA 0 A_CustomMissile ("MeleeSmoke", 0, 0, random (0, 360), 2, random (0, 360))
			TNT1 A 0 A_GiveToTarget("KickHasHit", 1)
			TNT1 A 0 A_GiveToTarget("KickHasHitAnObject", 1)
			TNT1 A 0 Radius_Quake (2, 6, 0, 5, 0)//(intensity, duration, damrad, tremrad, tid)
			TNT1 A 10
			Stop
		
	XDeath:
			PUFF A 0 A_PlaySound("player/cyborg/fist", 3)
			TNT1 A 0 A_SpawnItemEx ("PLOFT2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
			EXPL AAAAAA 0 A_CustomMissile ("MeleeSmoke", 0, 0, random (0, 360), 2, random (0, 360))
			TNT1 A 0 A_GiveToTarget("KickHasHit", 1)
			TNT1 A 0 A_GiveToTarget("KickHasHitAnObject", 1)
			TNT1 A 0 A_JumpIfInTargetInventory("IsSlideKicking", 1, 4)
			TNT1 A 0 Radius_Quake (2, 6, 0, 5, 0)//(intensity, duration, damrad, tremrad, tid)
			TNT1 A 10
			Stop
			TNT1 AAA 0 
			TNT1 A 0 A_GiveToTarget("KickHasHitAnObject", 1)
			TNT1 A 0 Radius_Quake (2, 6, 0, 5, 0)//(intensity, duration, damrad, tremrad, tid)
			TNT1 A 10
			Stop
			
		
	DeathOnGround:
			TNT1 A 0
			TNT1 A 0 A_JumpIfInTargetInventory("IsSlideKicking", 1, 2)
		    PUFF A 0 A_PlaySound("player/cyborg/fist", 3)
			TNT1 A 0
			TNT1 A 0 A_SpawnItemEx ("PLOFT2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
			EXPL AAAAAA 0 A_CustomMissile ("MeleeSmoke", 0, 0, random (0, 360), 2, random (0, 360))
			TNT1 A 0 Radius_Quake (2, 6, 0, 5, 0)//(intensity, duration, damrad, tremrad, tid)
			TNT1 A 0 A_JumpIfInTargetInventory("IsSlideKicking", 1, 2)
			TNT1 A 0 A_Explode(10, 40, 0)
			TNT1 AA 5
			Stop
	}
}

ACTOR KickAttackLow: KickAttack
{
	DamageType LowKick
	Height 10
	States
	{
	Death:
			TNT1 A 0
			TNT1 A 0 A_CheckFloor("DeathOnGround")
		    PUFF A 0 A_PlaySound("player/cyborg/fist", 3)
			EXPL AAAAAA 0 A_CustomMissile ("MeleeSmoke", 0, 0, random (0, 360), 2, random (0, 360))
			TNT1 A 0 Radius_Quake (3, 6, 0, 5, 0)//(intensity, duration, damrad, tremrad, tid)
			TNT1 A 1
			//TNT1 A 0 A_SpawnItemEx ("PLOFT4",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
			TNT1 A 10
		Stop
	}
}

ACTOR SuperKickAttack: KickAttack
{
    Damage (random(64,70))
	-NOEXTREMEDEATH
	DamageType ExtremePunches
}

ACTOR StompAttack: KickAttack
{
    Damage (random(150,200))
	speed 100
	DamageType Trample
	States
	{
	Death:
		    PUFF A 0 A_PlaySound("player/cyborg/fist")
			TNT1 A 0 A_Explode(150, 15, 0)
			EXPL AAAAAA 0 A_CustomMissile ("MeleeSmoke", 0, 0, random (0, 360), 2, random (0, 360))
			TNT1 A 10
			Stop
		}
}

ACTOR SuperStompAttack: KickAttack
{
    Damage (random(300,500))
	Speed 100
	DamageType HeavyTrample
		States
	{
	Death:
		    PUFF A 0 A_PlaySound("player/cyborg/fist")
			TNT1 A 0 A_Explode(300, 15, 0)
			EXPL AAAAAA 0 A_CustomMissile ("MeleeSmoke", 0, 0, random (0, 360), 2, random (0, 360))
			TNT1 A 10
			Stop
		}
}

ACTOR HookAttack: KickAttack
{
    Speed 30
}

ACTOR AirKickAttack: KickAttack
{
	Radius 12
	Height 32
    Damage (random(54,62))
}

ACTOR SuperAirKickAttack: KickAttack
{
	Radius 12
	Height 32
	-NOEXTREMEDEATH
	DamageType Extremepunches
    Damage (random(92,110))
		States
	{
	Death:
		    PUFF A 0 A_PlaySound("player/cyborg/fist", 3)
			TNT1 A 0 A_SpawnItemEx ("PLOFT2",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
			EXPL AAAAAA 0 A_CustomMissile ("MeleeSmoke", 0, 0, random (0, 360), 2, random (0, 360))
			TNT1 A 0 A_GiveToTarget("KickHasHit", 1)
			TNT1 A 0 Radius_Quake (4, 10, 0, 5, 0)//(intensity, duration, damrad, tremrad, tid)
			TNT1 A 10
		Stop
	}
}

ACTOR MeleeStrike1: KickAttack
{
DamageType Melee
Damage (random(13,18))
Speed 22
States
{
	Spawn:
		TNT1 A 1 BRIGHT
		TNT1 A 1 BRIGHT
		Stop
	Death:
	    TNT1 A 0
		PUFF A 0 A_PlaySound("player/cyborg/fist")
		EXPL AAAAAA 0 A_CustomMissile ("MeleeSmoke", 0, 0, random (0, 360), 2, random (0, 360))
		TNT1 A 10
		Stop
}
}

ACTOR MeleeStrike2: MeleeStrike1
{
Damage (random(24,32))
Speed 22
}

ACTOR MeleeStrike1Fatality: MeleeStrike1
{
Damage 32
DamageType Fatality
}

ACTOR MeleeStrike1FatalityNoDamage: MeleeStrike1
{
Damage (random(1,1))
DamageType Fatality
States
{
	Death:
	    TNT1 A 0
		Stop
}
}

ACTOR MeleeStrike1Smash: MeleeStrike1
{
Damage 32
DamageType Extremepunches
}

ACTOR MeleeStrike2Fatality: MeleeStrike1
{
Damage 64
Speed 22
DamageType Fatality
}

ACTOR MeleeStrike2Smash: MeleeStrike1
{
Damage 64
Speed 22
DamageType Extremepunches
}

ACTOR MeleeStrikeSuperHook: MeleeStrike1
{
Damage 80
DamageType ExtremePunches
}

ACTOR Traditional_MeleeStrike: MeleeStrike1
{
Damage 46
DamageType ExplosiveImpact
}

actor PLOFT
{
	+NOTARGET
Radius 10
Height 10
DamageType MonsterKnocked
+NOGRAVITY
+NOTELEPORT
+NODAMAGETHRUST
+THRUGHOST
+NORADIUSDMG
+NOEXTREMEDEATH
PROJECTILE
	+DEHEXPLOSION
	+ACTIVATEMCROSS
States
{
Spawn:
TNT1 A 0
        TNT1 A 0 A_Explode(25,150, 0)
Stop
 }
}

actor PLOFT2
{
	+NOTARGET
Radius 10
Height 10
DamageType Kick
+NOGRAVITY
+NOTELEPORT
+NODAMAGETHRUST
+THRUGHOST
+NORADIUSDMG
+NOEXTREMEDEATH
PROJECTILE
+DEHEXPLOSION
+ACTIVATEMCROSS
States
{
Spawn:
TNT1 A 0
       // TNT1 A 0 A_Explode(20,30, 0)
Stop
 }
}

actor PLOFT3
{
	+NOTARGET
Radius 10
Height 10
+NOGRAVITY
+NOTELEPORT
+NODAMAGETHRUST
+THRUGHOST
+NORADIUSDMG
+NOEXTREMEDEATH
PROJECTILE
+DEHEXPLOSION
+ACTIVATEMCROSS
States
{
Spawn:
TNT1 A 0
        TNT1 A 0 A_Explode(20,30, 0)
Stop
 }
}


actor PLOFT4
{
	+NOTARGET
Radius 10
Height 10
+NOGRAVITY
+NOTELEPORT
+NODAMAGETHRUST
+THRUGHOST
+NORADIUSDMG
+NOEXTREMEDEATH
PROJECTILE
+DEHEXPLOSION
+ACTIVATEMCROSS
DamageType Kick
States
{
Spawn:
TNT1 A 0
        TNT1 A 0 A_Explode(20,30, 0)
Stop
 }
}

actor PLOFT5
{
	+NOTARGET
Radius 10
Height 10
+NOGRAVITY
+NOTELEPORT
+NODAMAGETHRUST
+THRUGHOST
+NORADIUSDMG
+NOEXTREMEDEATH
PROJECTILE
+DEHEXPLOSION
+ACTIVATEMCROSS
DamageType Kick
States
{
Spawn:
TNT1 A 2
        TNT1 A 0 A_Explode(10,30, 0)
Stop
 }
}

ACTOR MeleeStrikeSuperRound: SuperKickAttack
{
Damage 42
DamageType ExtremePunches
Decal "Crack"
  states
  {
  XDeath:
    PUFF A 0 A_PlaySound("player/cyborg/kick")
    PUFF BCD 3
    stop
  Death:
    PUFF A 3 A_PlaySound("player/cyborg/kick")
    PUFF BCD 3
    stop
  Crash:
    PUFF A 3 A_PlaySound("player/cyborg/kick")
    PUFF BCD 3
    stop
  }
}

///////////////////KNIFE

Actor KnifeHasHit : Inventory
{
inventory.maxamount 1
}

ACTOR KnifeSwing : FastProjectile
{
	Radius 2
	Height 1
	DamageType Cut
	Projectile 
	+FORCEXYBILLBOARD
	+NOEXTREMEDEATH
	+BLOODSPLATTER
	Damage 11
	Speed 45
	ProjectileKickBack 100
	Obituary "%o was sliced-n-diced by %k"
	SeeSound "none"
	DeathSound "none"
	Decal "none"
	States
	{
	Spawn:
		TNT1 A 0
		TNT1 A 1
		Stop
	XDeath:
		TNT1 A 0 A_SpawnItemEx("BloodHit",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 0 A_GiveToTarget("KnifeHasHit", 1)
		TNT1 A 0 A_PlaySound("Machete/Yum", 3)
		TNT1 A 1
		Stop
	Death:
		TNT1 A 0 A_SpawnItemEx("SSawPuff3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 1
		Stop
	Crash:
		TNT1 A 0 A_SpawnItemEx("SSawPuff3",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
		TNT1 A 1
		Stop
	}
}

ACTOR SuperKnifeSwing : KnifeSwing
{
	Radius 3
	Height 1
	Damage 25
	Speed 55
	ProjectileKickBack 100
}

Actor FistAttack : FastProjectile
{
    Radius 2
    Height 2
    Damage (0)
    Speed 96 //64
    RenderStyle Add
    Alpha 0.6
    Scale 0.65
    SeeSound "none"
    DeathSound "none"
    Species "Player"
    DamageType "none"
    Projectile
    +BLOODSPLATTER
    +THRUSPECIES
    +THRUGHOST
    +EXTREMEDEATH
    +FORCERADIUSDMG
    Decal WallCrack
    States
    {
    Spawn:
        TNT1 A 2
        Stop
    Death:
    Crash:
        TNT1 A 0 A_Stop
        TNT1 A 1 A_GiveToTarget("FistHit",1)
		Stop
    XDeath:
        TNT1 A 0 A_Stop
        TNT1 A 1 A_GiveToTarget("FistHit",1)
        Stop
	}
}

ACTOR ExecutionAttackKick: KickAttack
{
    Damage 22
	speed 100
	DamageType Kick
	Radius 2
	Height 2
	-ACTIVATEIMPACT
	-ACTIVATEPCROSS
	-ACTIVATEMCROSS
	-CANUSEWALLS
	States
	{
	Death:
		    PUFF A 0 A_PlaySound("player/cyborg/fist")
			TNT1 A 0 A_Explode(10, 10, 0)
			EXPL AAAAAA 0 A_CustomMissile ("MeleeSmoke", 0, 0, random (0, 360), 2, random (0, 360))
			TNT1 A 10
			Stop
		}
}



ACTOR ExecutionAttackMelee: ExecutionAttackKick
{
	DamageType Melee
}


ACTOR ExecutionAttackFatality: ExecutionAttackKick
{
	DamageType Fatality
}

ACTOR ExecutionAttackStompWall: ExecutionAttackKick
{
	DamageType StompWall
	Damage 110
	+ACTIVATEIMPACT
	+ACTIVATEPCROSS
	+ACTIVATEMCROSS
	+CANUSEWALLS
}


ACTOR ExecutionFrontWallDetect: ExecutionAttackKick
{
	DamageType None
	Damage (random (0, 1))
	+THRUACTORS
	Radius 2
	Height 2
	Speed 40
	States
	{
		Spawn:
			TNT1 A 2
			Stop
		Death:
		    TNT1 A 1
			TNT1 A 0 A_GiveToTarget("ExecuteStompWall", 1)
			Stop
		Xdeath:
			TNT1 A 0
			TNT1 A 1
			Stop
			}
}


ACTOR ExecutionLeftWallDetect: ExecutionAttackKick
{
	DamageType None
	Damage (random (0, 1))
	+THRUACTORS
	Radius 2
	Height 2
	Speed 20
	States
	{
		Spawn:
			TNT1 A 2
			Stop
		Death:
		    TNT1 A 1
			TNT1 A 0 A_GiveToTarget("ExecuteBashWall", 1)
			Stop
		Xdeath:
			TNT1 A 0
			TNT1 A 1
			Stop
			}
}