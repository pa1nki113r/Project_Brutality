//Plasma RIFLES (c) 2014 SGT MARK IV tm

Actor PB_PlasmaRifleAnimation1: Inventory
{
Inventory.maxamount 1
}


ACTOR DualPlasmaRifles: PB_DualWeapon
{
	Weapon.BobRangeX 0.3
	Weapon.BobRangeY 0.5
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 2.4
	Weapon.AmmoUse1 0 
	//Weapon.SelectionOrder 100
	Weapon.AmmoGive1 0 //How much ammo can be gathered with this weapon
	Weapon.AmmoUse2 0
	Weapon.AmmoGive2 0
	Weapon.AmmoType1 "Cell" //Reserve ammo type
	Weapon.AmmoType2 "DoublePlasmagunAmmo" //Magazine ammo type
	+FLOORCLIP
	+DONTGIB
	Obituary "%o was fried by %k's Double Plasmaguns." //Kill message
    AttackSound "None" //You better leave this clear
	Tag "Dual Plasma Rifles"
	Inventory.Pickupmessage "" //Pickup message
    +WEAPON.NOAUTOAIM //Makes this weapon never autoaim, so recoil can work better
    Scale 0.6 //Weapon's pickup sprite size
	+WEAPON.NO_AUTO_SWITCH
	+POWERED_UP
	Weapon.SisterWeapon Plasma_Gun
	States
	{
	
	Spawn:
	TNT1 A 100//Pickup sprite
	Loop
		
	DontFlashClimbing:
	    TNT1 A 9
		Goto Flash
	
	Ready:
		TNT1 A 0 A_PlaySound("PLSIDLE", 6,1,1)
		DPRS ABCDE 1
	ReadyToFire:
	Ready3:
		TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"FireLeftGun") //Check if player wants to reload
		TNT1 A 0 A_JumpIfInventory("Unloading",1,"Unload")
		TNT1 A 0 A_JumpIfInventory("Grabbing_A_Ledge",1,"LedgeClimb")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("DoGrenade", 1, "ThrowGrenade")//DoMine
		TNT1 A 0 A_JumpIfInventory("DoMine", 1, "ThrowMine")
		TNT1 A 0 A_JumpIfInventory("DoElecPod", 1, "ThrowElecPod")
		TNT1 A 0 A_JumpIfInventory("DoSwarmPod", 1, "ThrowSwarmPod")
		TNT1 A 0 A_JumpIfInventory("DoHealBackpack", 1, "UseHealthBackPack")
		TNT1 A 0 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "NoDualWield")
		TNT1 A 0 A_JumpIfInventory("WeaponSwapper", 1, "SwapWeapons")
		TNT1 A 0 A_JumpIfInventory("GrabbedBarrel", 1, "GrabBarrel")
		DPRI A 1 
			{
				A_WeaponReady(WRF_ALLOWRELOAD);
				A_WeaponOffset(CallACS("Script_GetGunOffsetX"), CallACS("Script_GetGunOffsetY"),WOF_KEEPY);
			}
		TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"FireLeftGun") //Check if player wants to reload
		TNT1 A 0 A_JumpIfInventory("Unloading",1,"Unload")
		TNT1 A 0 A_JumpIfInventory("Grabbing_A_Ledge",1,"LedgeClimb")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("DoGrenade", 1, "ThrowGrenade")//DoMine
		TNT1 A 0 A_JumpIfInventory("DoMine", 1, "ThrowMine")
		TNT1 A 0 A_JumpIfInventory("DoElecPod", 1, "ThrowElecPod")
		TNT1 A 0 A_JumpIfInventory("DoSwarmPod", 1, "ThrowSwarmPod")
		TNT1 A 0 A_JumpIfInventory("DoHealBackpack", 1, "UseHealthBackPack")
		TNT1 A 0 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "NoDualWield")
		TNT1 A 0 A_JumpIfInventory("WeaponSwapper", 1, "SwapWeapons")
		TNT1 A 0 A_JumpIfInventory("GrabbedBarrel", 1, "GrabBarrel")
		DPRI B 1 
			{
				A_WeaponReady(WRF_ALLOWRELOAD);
				A_WeaponOffset(CallACS("Script_GetGunOffsetX"), CallACS("Script_GetGunOffsetY"),WOF_KEEPY);
			}
		TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"FireLeftGun") //Check if player wants to reload
		TNT1 A 0 A_JumpIfInventory("Unloading",1,"Unload")
		TNT1 A 0 A_JumpIfInventory("Grabbing_A_Ledge",1,"LedgeClimb")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("DoGrenade", 1, "ThrowGrenade")//DoMine
		TNT1 A 0 A_JumpIfInventory("DoMine", 1, "ThrowMine")
		TNT1 A 0 A_JumpIfInventory("DoElecPod", 1, "ThrowElecPod")
		TNT1 A 0 A_JumpIfInventory("DoSwarmPod", 1, "ThrowSwarmPod")
		TNT1 A 0 A_JumpIfInventory("DoHealBackpack", 1, "UseHealthBackPack")
		TNT1 A 0 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "NoDualWield")
		TNT1 A 0 A_JumpIfInventory("WeaponSwapper", 1, "SwapWeapons")
		TNT1 A 0 A_JumpIfInventory("GrabbedBarrel", 1, "GrabBarrel")
		DPRI C 1 
			{
				A_WeaponReady(WRF_ALLOWRELOAD);
				A_WeaponOffset(CallACS("Script_GetGunOffsetX"), CallACS("Script_GetGunOffsetY"),WOF_KEEPY);
			}
		TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"FireLeftGun") //Check if player wants to reload
		TNT1 A 0 A_JumpIfInventory("Unloading",1,"Unload")
		TNT1 A 0 A_JumpIfInventory("Grabbing_A_Ledge",1,"LedgeClimb")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("DoGrenade", 1, "ThrowGrenade")//DoMine
		TNT1 A 0 A_JumpIfInventory("DoMine", 1, "ThrowMine")
		TNT1 A 0 A_JumpIfInventory("DoElecPod", 1, "ThrowElecPod")
		TNT1 A 0 A_JumpIfInventory("DoSwarmPod", 1, "ThrowSwarmPod")
		TNT1 A 0 A_JumpIfInventory("DoHealBackpack", 1, "UseHealthBackPack")
		TNT1 A 0 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "NoDualWield")
		TNT1 A 0 A_JumpIfInventory("WeaponSwapper", 1, "SwapWeapons")
		TNT1 A 0 A_JumpIfInventory("GrabbedBarrel", 1, "GrabBarrel")
		DPRI D 1 
			{
				A_WeaponReady(WRF_ALLOWRELOAD);
				A_WeaponOffset(CallACS("Script_GetGunOffsetX"), CallACS("Script_GetGunOffsetY"),WOF_KEEPY);
			}
		TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"FireLeftGun") //Check if player wants to reload
		TNT1 A 0 A_JumpIfInventory("Unloading",1,"Unload")
		TNT1 A 0 A_JumpIfInventory("Grabbing_A_Ledge",1,"LedgeClimb")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("DoGrenade", 1, "ThrowGrenade")//DoMine
		TNT1 A 0 A_JumpIfInventory("DoMine", 1, "ThrowMine")
		TNT1 A 0 A_JumpIfInventory("DoElecPod", 1, "ThrowElecPod")
		TNT1 A 0 A_JumpIfInventory("DoSwarmPod", 1, "ThrowSwarmPod")
		TNT1 A 0 A_JumpIfInventory("DoHealBackpack", 1, "UseHealthBackPack")
		TNT1 A 0 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "NoDualWield")
		TNT1 A 0 A_JumpIfInventory("WeaponSwapper", 1, "SwapWeapons")
		TNT1 A 0 A_JumpIfInventory("GrabbedBarrel", 1, "GrabBarrel")
		DPRI C 1 
			{
				A_WeaponReady(WRF_ALLOWRELOAD);
				A_WeaponOffset(CallACS("Script_GetGunOffsetX"), CallACS("Script_GetGunOffsetY"),WOF_KEEPY);
			}
		TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"FireLeftGun") //Check if player wants to reload
		TNT1 A 0 A_JumpIfInventory("Unloading",1,"Unload")
		TNT1 A 0 A_JumpIfInventory("Grabbing_A_Ledge",1,"LedgeClimb")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("DoGrenade", 1, "ThrowGrenade")//DoMine
		TNT1 A 0 A_JumpIfInventory("DoMine", 1, "ThrowMine")
		TNT1 A 0 A_JumpIfInventory("DoElecPod", 1, "ThrowElecPod")
		TNT1 A 0 A_JumpIfInventory("DoSwarmPod", 1, "ThrowSwarmPod")
		TNT1 A 0 A_JumpIfInventory("DoHealBackpack", 1, "UseHealthBackPack")
		TNT1 A 0 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "NoDualWield")
		TNT1 A 0 A_JumpIfInventory("WeaponSwapper", 1, "SwapWeapons")
		TNT1 A 0 A_JumpIfInventory("GrabbedBarrel", 1, "GrabBarrel")
		DPRI B 1 
			{
				A_WeaponReady(WRF_ALLOWRELOAD);
				A_WeaponOffset(CallACS("Script_GetGunOffsetX"), CallACS("Script_GetGunOffsetY"),WOF_KEEPY);
			}
		Loop
		
	NoDualWield:
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		TNT1 A 0 A_SelectWeapon("Plasma_Gun")
		Goto Select
		
	Deselect:
		TNT1 A 0 A_JumpIfInventory("GotMeatShield", 1, "GrabEnemy")
		TNT1 A 0 A_PlaySound("IronSights", 0)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait

	Select:
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand")
		TNT1 A 0 A_PlaySound("IronSights", 0)
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Raise
		TNT1 AAAAAAAA 1 A_Raise
		Wait
	
	DryFire:
	    DPR2 D 1 A_PlaySound("DRYFIRE", 1)
		DPR2 A 5
		Goto ReadyToFire

	DryFIre2:
	    DPR1 D 1 A_PlaySound("DRYFIRE", 1)
		DPR1 AAAAA 1 A_JumpIfInventory("StopDualWield", 1, "LightDone")
		Goto Flash
		
		
		
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
	
	
	Fire:
	Altfire:
		TNT1 A 0 A_JumpIfInventory("PB_PlasmaRifleAnimation1", 1, "Fire2")
        TNT1 A 0 A_JumpIfInventory("DoublePlasmagunAmmo",1,2)
        Goto Reload
        TNT1 AAAA 0
		
		TNT1 A 0 A_GiveInventory("PB_PlasmaRifleAnimation1")
		
		
        TNT1 A 0 A_PlaySound("PLSM9")
		TNT1 A 0 A_ZoomFactor(0.98)
		DPR1 A 1 BRIGHT A_FireCustomMissile("Plasma_Ball", random(-3,3), 0, 6, -4, 0, random(-2,2))//Horizontal Spread, Vertical Spread, Numbers of Projectiles (Leave as -1 if its a single one), Damage Factor
		TNT1 A 0 A_FireCustomMissile("Shakeyourassminor", 0, 0, 0, 0)//Shakes the camera to simulate recoil.
		TNT1 A 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 3, 0, 0, 0)
		TNT1 A 0 A_Takeinventory("PlasmaAmmo",1)
		TNT1 A 0 A_Takeinventory("DoublePlasmagunAmmo",1)
        TNT1 A 0 A_SetPitch(+0.6 + pitch)//Vertical recoil up
		DPR1 B 1 BRIGHT //A_FireCustomMissile("PlasmaCaseSpawn",0,0,6,4) //Ejetts empty brass
		TNT1 A 0 A_SetPitch(-0.6 + pitch)//Vertical recoil down
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 //A_WeaponReady(WRF_NOPRIMARY)
		DPR1 C 1 A_WeaponReady//(WRF_NOPRIMARY)
		TNT1 A 0 A_Refire
		Goto ReadyToFire
		
		
	Fire2:
		TNT1 A 0 A_JumpIfInventory("DoublePlasmagunAmmo",1,2)
        Goto Reload
        TNT1 AAAA 0
		
		TNT1 A 0 A_TakeInventory("PB_PlasmaRifleAnimation1")
		
		TNT1 A 0 A_PlaySound("PLSM9")
		TNT1 A 0 A_ZoomFactor(0.98)
		DPR2 A 1 BRIGHT A_FireCustomMissile("Plasma_Ball", random(-3,3), 0, -6, -4, 0, random(-2,2))//Horizontal Spread, Vertical Spread, Numbers of Projectiles (Leave as -1 if its a single one), Damage Factor
		TNT1 A 0 A_FireCustomMissile("Shakeyourassminor", 0, 0, 0, 0)//Shakes the camera to simulate recoil.
		TNT1 A 0 A_FireCustomMissile("GunFireSmoke", 0, 0, -3, 0, 0, 0)
		TNT1 A 0 A_Takeinventory("DoublePlasmagunAmmo",1)
        TNT1 A 0 A_SetPitch(+0.6 + pitch)//Vertical recoil up
		DPR2 B 1 BRIGHT //A_FireCustomMissile("PlasmaCaseSpawn",0,0,6,4) //Ejetts empty brass
		TNT1 A 0 A_SetPitch(-0.6 + pitch)//Vertical recoil down
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 //A_WeaponReady(WRF_NOPRIMARY)
		DPR2 C 1 A_WeaponReady//(WRF_NOPRIMARY)
		TNT1 A 0 A_Refire
		Goto ReadyToFire
		

	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		
	Reload:
	Reload2:
	    
	    DPRS E 0 //Always leave one free line before the reload animation to prevent bugs
		TNT1 A 0 A_TakeInventory("Reloading")//Always put this to make sure that the game understand that you already are reloading your weapon, and calling this state again is not necessary
		TNT1 A 0 A_JumpIfInventory("DoublePlasmagunAmmo", 100, "ReadytoFire")//Checks if the weapon is not fully reloaded, if yes, cancel reload.
		TNT1 A 0 A_PlaySound("DRYFIRE", 1)
		TNT1 A 0 A_JumpIfInventory("Cell", 1, 1)//Checks if you have spare ammo
		Goto ReadyToFire//Identified that you have no spare ammo. Get back to Ready animation
		TNT1 A 0 A_GiveInventory("StopDualWield", 1)
        
	Refill:	
	    TNT1 A 0
		TNT1 A 0 A_JumpIfInventory("Cell", 1, 1)//Check if you have spare ammo again. This line is necessary in case you don't have enough ammo to fill an entire Cell.
		Goto FinishReload//Gun is fully loaded. Go to finish animation
	    TNT1 A 0 A_TakeInventorY("Cell", 1)//Removes one spare bullet
		TNT1 A 0 A_GiveInventory("DoublePlasmagunAmmo", 1)//Puts one bullet inside the Cell
		TNT1 A 0 A_JumpIfInventory("DoublePlasmagunAmmo", 100, "FinishReload")//Checks if weapons is full
		Loop
		
	 FinishReload:	//Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0
		TNT1 A 0 A_GiveInventory("LeftPlasmagunAmmo", 50)
		TNT1 A 0 A_GiveInventory("PlasmaAmmo", 50)
		TNT1 A 0 A_GiveInventory("RightPlasmagunAmmo", 50)
		DPRS EDCBA 1
		
		TNT1 A 5
		PLSR A 1
		PLSR B 2 A_PlaySound("CELLPKUP", 20)
		PLSR C 1
		PLSR D 2
		PLSR E 1
		PLSR F 2
		PLSR G 1
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_PlaySound("PLSOFF", 1)
		TNT1 A 0 A_FireCustomMissile("PlasmaCaseSpawn",-5,0,8,-4)
		PLSR HHHHHHHHIJK 2
        PLSR L 1 A_PlaySound("PLREADY", 20)
		PLSR L 1 A_PlaySound("PLSRD", 21)
		PLSR LLMNO 2
		PLSR C 1
		PLSR B 2
		TNT1 A 0 A_PlaySound("PLSCLICK")
		PLSR A 2
		
		P2SR A 1
		P2SR B 2 A_PlaySound("CELLPKUP", 20)
		P2SR C 1
		P2SR D 2
		P2SR E 1
		P2SR F 2
		P2SR G 1
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_PlaySound("PLSOFF", 1)
		TNT1 A 0 A_FireCustomMissile("PlasmaCaseSpawn",-5,0,8,-4)
		P2SR HHHHHHHHIJK 2
        P2SR L 1 A_PlaySound("PLREADY", 20)
		P2SR L 1 A_PlaySound("PLSRD", 21)
		P2SR LLMNO 2
		P2SR C 1
		P2SR B 2
		TNT1 A 0 A_PlaySound("PLSCLICK")
		P2SR A 2
		
		TNT1 A 0 A_TakeInventory("StopDualWield", 1)
		TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
		TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
		TNT1 A 5
		DPRS ABCDE 1
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire
		
		
		
	
	FinishReloadLeftOnly:	//Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0 A_GiveInventory("LeftPlasmagunAmmo", 50)
		TNT1 A 0 A_GiveInventory("PlasmaAmmo", 50)
		TNT1 A 0 A_GiveInventory("RightPlasmagunAmmo", 50)
		DPRS EDCBA 1
		TNT1 A 5
		
		P2SR A 1
		P2SR B 2 A_PlaySound("CELLPKUP", 20)
		P2SR C 1
		P2SR D 2
		P2SR E 1
		P2SR F 2
		P2SR G 1
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_PlaySound("PLSOFF", 1)
		TNT1 A 0 A_FireCustomMissile("PlasmaCaseSpawn",-5,0,8,-4)
		P2SR HHHHHHHHIJK 2
        P2SR L 1 A_PlaySound("PLREADY", 20)
		P2SR L 1 A_PlaySound("PLSRD", 21)
		P2SR LLMNO 2
		P2SR C 1
		P2SR B 2
		TNT1 A 0 A_PlaySound("PLSCLICK")
		P2SR A 2
		TNT1 A 0 A_TakeInventory("StopDualWield", 1)
		TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
		TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
		
		DPRS ABCDE 1
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire	
		
	FinishReloadRightOnly:	//Weapon is fully loaded. Time to play the reloading animation.
		TNT1 A 0 A_GiveInventory("LeftPlasmagunAmmo", 50)
		TNT1 A 0 A_GiveInventory("PlasmaAmmo", 50)
		TNT1 A 0 A_GiveInventory("RightPlasmagunAmmo", 50)
		PLSR A 1
		PLSR B 2 A_PlaySound("CELLPKUP", 20)
		PLSR C 1
		PLSR D 2
		PLSR E 1
		PLSR F 2
		PLSR G 1
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_PlaySound("PLSOFF", 1)
		TNT1 A 0 A_FireCustomMissile("PlasmaCaseSpawn",-5,0,8,-4)
		PLSR HHHHHHHHIJK 2
        PLSR L 1 A_PlaySound("PLREADY", 20)
		PLSR L 1 A_PlaySound("PLSRD", 21)
		PLSR LLMNO 2
		PLSR C 1
		PLSR B 2
		TNT1 A 0 A_PlaySound("PLSCLICK")
		PLSR A 2
		TNT1 A 0 A_TakeInventory("StopDualWield", 1)
		TNT1 A 0 A_TakeInventory("FiredPrimary", 1)
		TNT1 A 0 A_TakeInventory("FiredSecondary", 1)
		TNT1 A 5
		
		DPRS ABCDE 1
		TNT1 A 0 A_GunFlash
		Goto ReadyToFire		
		
	FlashKicking:
		DPRS E 1 
		DPRS D 1 
		DPRS C 1 
		DPRS B 3 
		DPRS A 3
		DPRS B 3 
		DPRS C 1 
		DPRS D 1 
		DPRS E 1 
		DPRS EEE 1 
		Goto Flash
		
	FlashAirKicking:
		DPRS E 1 
		DPRS D 1 
		DPRS C 1 
		DPRS B 3 
		DPRS A 3
		DPRS B 3 
		DPRS C 1 
		DPRS D 1 
		DPRS E 1 
		DPRS EEEE 1  
		Goto Flash
		
	FlashSlideKicking:
		DPRS EE 2 
		DPRS DDCCCBBBAAA 2  
		Goto Flash
		
	FlashSlideKickingStop:
		//TNT1 A 0
		DPRS ABCDE 1 
		DPRS EE 1 
		Goto Flash
	}
}

ACTOR DoublePlasmagunAmmo : Ammo //Your weapon's magazine ammo.
{
   Inventory.Amount 0
   Inventory.MaxAmount 100 //Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 100
   Inventory.Icon SMGPA0
}


ACTOR LeftPlasmagunAmmo : Ammo //Your weapon's magazine ammo.
{
   Inventory.Amount 0
   Inventory.MaxAmount 50 //Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 50
   Inventory.Icon SMGPA0
}


ACTOR RightPlasmagunAmmo : Ammo //Your weapon's magazine ammo.
{
   Inventory.Amount 0
   Inventory.MaxAmount 50 //Your weapon's magazine ammo limit. Always leave one more bullet, so you can do the 12+1 effect.
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 50
   Inventory.Icon SMGPA0
}