// MP40
// CREDITS:
// 		-Metalman, Warry, Edward Marlus - sprites
// 		-IKDFA - code, animations
// 		-popguy - code

Actor MP40HasUnloaded: Inventory
{
Inventory.maxamount 1
}

Actor LeftMP40HasUnloaded: Inventory
{
Inventory.maxamount 1
}

Actor MP40WasEmpty: Inventory
{
Inventory.maxamount 1
}

Actor LeftMP40WasEmpty: Inventory
{
Inventory.maxamount 1
}

ACTOR RespectMP40 : Inventory
{
Inventory.MaxAmount 1
}

ACTOR DualWieldingMP40: Inventory
{
Inventory.MaxAmount 1
}

ACTOR PB_MP40 : PB_Weapon
{
	//$Title MP-40
	//$Category Project Brutality - Weapons
	//$Sprite AMP4A0
	SpawnID 9200
	Weapon.AmmoUse1 0
	Weapon.AmmoGive1 25
	Weapon.AmmoUse2 0
	Weapon.AmmoGive2 0
	Weapon.AmmoType1 "PB_LowCalMag"
	Weapon.AmmoType2 "MP40Ammo"
	Inventory.MaxAmount 2
	Inventory.Amount 1
	+FLOORCLIP
	+DONTGIB
	Obituary "%o was put against the wall by %k's Maschinenpistole 40."
    Inventory.PickupSound "weapons/MP40_pickup"
	Inventory.Pickupmessage "You found a Maschinenpistole 40! (Slot 2)"
	Tag "Maschinenpistole 40"
    +WEAPON.NOAUTOAIM
    +WEAPON.NOALERT
    +WEAPON.NOAUTOFIRE
	Weapon.BobRangeX 0.3
	Weapon.BobRangeY 0.5
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 2.4
    Scale 0.25
	PB_WeaponBase.UnloaderToken "MP40HasUnloaded"
	Inventory.AltHUDIcon "AMP4A0"
	PB_WeaponBase.respectItem "RespectMP40"
	FloatBobStrength 0.5
	PB_WeaponBase.OffsetRecoilX 2.5
	PB_WeaponBase.OffsetRecoilY 2.5

	States
	{
		Steady:
			TNT1 A 1
			Goto Ready	
		Ready:
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
			TNT1 A 0 PB_RespectIfNeeded
		WeaponRespect:
			TNT1 A 0
			{
				A_Giveinventory("RespectMP40",1);
				A_Giveinventory("PB_LockScreenTilt",1);
				A_PlaySoundEx("weapons/MP40_up", "Auto");
				A_SetCrosshair(5);
			}
			MPSE ABCDE 1 A_DoPBWeaponAction
			MRE1 ABCDEFGHIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			MRE2 ABCDE 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySound("MP4DGT", 5)
			MRE2 FGHIJKLMNOPQRST 1 A_DoPBWeaponAction
// 			TNT1 A 0 A_PlaySoundEx("weapons/MP40_up", "Auto")
			MRE2 TUVWXYZ 1 A_DoPBWeaponAction
			MRE3 ABCDEFG 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySound("MP4DGG", 5)
			MRE3 HIJKLMNOPQRSTUVWXYZ 1 A_DoPBWeaponAction
			MRE4 ABCDE 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySound("MP4DG2", 5)
			MRE4 FGHIJKLMNOPQ 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("weapons/MP40_striswhoosh", "Auto") 
			TNT1 A 0 A_PlaySound("MP4DG2", 5)
			MRE4 RS 1 A_DoPBWeaponAction
			MRE4 T 1
			{
				A_DoPBWeaponAction;
				A_FireProjectile("MP40DogTag", 0, 0, 0, 0, FPF_NOAUTOAIM, 3);
			}
			MRE4 UVWXYZ 1 A_DoPBWeaponAction
			MRE5 ABC 1 A_DoPBWeaponAction
			TNT1 A 0 A_PlaySoundEx("weapons/MP40_up", "Auto")
			MPSE ABCD 1 A_DoPBWeaponAction
			Goto Ready3

		SelectAnimation:
			TNT1 A 0 A_TakeInventory("Zoomed",1)
			TNT1 A 0 A_JumpIfInventory("DualWieldingMP40", 1, "SelectAnimationDualWield")
			TNT1 A 0 A_PlaySoundEx("weapons/MP40_up", "Auto")
			MPSE ABCD 1
		Ready3:
			TNT1 A 0
			{
				A_SetRoll(0);
				PB_HandleCrosshair(44);
				A_TakeInventory("PB_LockScreenTilt",1);
			}		
// 			TNT1 A 0 A_JumpIfInventory("MP40WasEmpty", 1, "LoadChamber")
			TNT1 A 0 A_JumpIfInventory("DualWieldingMP40", 1, "ReadyDualWield")
			TNT1 A 0 A_JumpIfInventory("MP40HasUnloaded", 1, "UnloadedReady")
		ReadyToFire:
			MPSE E 1 {
				if (PressingFire() && PressingAltfire() && CountInv("MP40Ammo") > 0){
					return state("Fire");
				}
				if (PressingFire() && CountInv("MP40Ammo") > 0){
					return state("Fire");
				}
				return A_DoPBWeaponAction(WRF_ALLOWRELOAD, CheckUnloaded("MP40HasUnloaded"));	
			}
			Loop
		
		Ready2:
			TNT1 A 0
			{
				A_SetRoll(0);
				A_SetCrosshair(5);
				A_TakeInventory("PB_LockScreenTilt",1);
			}
		ReadyToFire2:
			MPZO E 1
			{
			//Updated code for far superior smooth gameplay
				if(GetCvar("pb_toggle_aim_hold"))
				{
					if(!PressingAltfire() || JustReleased(BT_ALTATTACK)){
						return state("Zoomout");
					}
					if (PressingFire() && PressingAltfire() && CountInv("MP40Ammo") > 0){
						return state("Fire2");
					}
					return A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOSECONDARY, CheckUnloaded("MP40HasUnloaded"));
				}
				else
				{
					if (PressingFire() && CountInv("MP40Ammo") > 0 ){
						return state("Fire2");
					}
					return A_DoPBWeaponAction(WRF_ALLOWRELOAD, CheckUnloaded("MP40HasUnloaded"));
				}
				return state("");
			}
			Loop

		SelectAnimationDualWield:
			TNT1 A 0 A_PlaySoundEx("weapons/MP40_up", "Auto")
			MP25 NOPQ 1
			TNT1 A 0 A_PlaySoundEx("weapons/MP40_up", "Auto")
		ReadyDualWield:
			TNT1 A 0 A_JumpIfInventory("MP40HasUnloaded", 1, "UnloadedReadyDualWield")
			TNT1 A 0
			{
				A_SetRoll(0);
				PB_HandleCrosshair(44);
				A_TakeInventory("PB_LockScreenTilt",1);
				if(CountInv("LeftMP40Ammo") < CountInv("MP40Ammo")){
					A_GiveInventory("DualFiring",1);
				}
// 				if(CountInv("PB_LowCalMag")>0){
// 					if(CountInv("LeftMP40Ammo")<=0){
// 						A_GiveInventory("DualFireReload",1);
// 					}
// 					if(CountInv("MP40Ammo")<=0){
// 						A_GiveInventory("DualFireReload",1);
// 					}
// 				}
				A_Overlay(10, "IdleLeft_Overlay", false);
				A_Overlay(11, "IdleRight_Overlay", false);
			}
		ReadyToFireDualWield:
			TNT1 A 1 {
				if(CountInv("PB_LowCalMag")>0){
					if(CountInv("LeftMP40Ammo")<=0 || CountInv("MP40Ammo")<=0){
						if(CountInv("LeftMP40Ammo")<=0 && CountInv("MP40Ammo")<=0){
							A_SetInventory("DualFireReload",2);
						}
						else{
							A_SetInventory("DualFireReload",1);
						}
					}
				}
				return A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE);
			}
			Loop

		IdleLeft_Overlay:
			MP21 A 1 {
				if(CountInv("LeftMP40Ammo")<=0 && CountInv("MP40Ammo")>0){
					A_GiveInventory("DualFiring",1);
				}
				if((PressingAltfire() || JustPressed(BT_ALTATTACK)) && !A_IsFiringLeftWeapon() && GetCvar("SingleDualFire")==2){
					if(CountInv("LeftMP40Ammo") > 0){
						return state("FireLeft_Overlay");
					}
					else {
						A_PlaySoundEx("weapons/empty", "Auto");
						return state("");
					}
				}
				if((PressingFire() || JustPressed(BT_ATTACK)) && !A_IsFiringLeftWeapon() && GetCvar("SingleDualFire") == 1){
						if(CountInv("LeftMP40Ammo") > 0){
							return state("FireLeft_Overlay");
						}
						else {
							A_PlaySoundEx("weapons/empty", "Auto");
							return state("");
						}
					}
				if(CountInv("DualFiring")==0 || (CountInv("DualFiring")==0 && CountInv("MP40Ammo")<=0)){
					if((PressingFire() || JustPressed(BT_ATTACK)) && !A_IsFiringLeftWeapon() && GetCvar("SingleDualFire")<=0){
						if(CountInv("LeftMP40Ammo") > 0){
							return state("FireLeft_Overlay");
						}
						else {
							A_PlaySoundEx("weapons/empty", "Auto");
							return state("");
						}
					}
				}
				return state("");
			}
			Loop
		IdleRight_Overlay:
			MP22 A 1 {
				if(CountInv("LeftMP40Ammo")>0 && CountInv("MP40Ammo")<=0){
					A_TakeInventory("DualFiring",1);
				}
				if((PressingFire() || JustPressed(BT_ATTACK)) && !A_IsFiringRightWeapon() && GetCvar("SingleDualFire")==2){
						if(CountInv("MP40Ammo") > 0){
							return state("FireRight_Overlay");
						}
						else {
							A_PlaySoundEx("weapons/empty", "Auto");
							return state("");
						}
					}
				if(CountInv("DualFiring")==1 || (CountInv("DualFiring")==1 && CountInv("LeftMP40Ammo")<=0)){
					if((PressingFire() || JustPressed(BT_ATTACK)) && !A_IsFiringLeftWeapon() && GetCvar("SingleDualFire")==0){
						if(CountInv("MP40Ammo") > 0){
							return state("FireRight_Overlay");
						}
						else {
							A_PlaySoundEx("weapons/empty", "Auto");
							return state("");
						}
					}
				}
				if((PressingAltfire() || JustPressed(BT_ALTATTACK)) && !A_IsFiringRightWeapon() && GetCvar("SingleDualFire")==1){
					if(CountInv("MP40Ammo") > 0){
						return state("FireRight_Overlay");
					}
					else {
						A_PlaySoundEx("weapons/empty", "Auto");
						return state("");
					}
				}
				return state("");
			}
			Loop
		
		FireLeft_Overlay:
			MP21 B 1 BRIGHT
			{
				A_Overlay(9,"LeftFlashVariation");
				A_AlertMonsters;
				A_PlaySoundEx("weapons/mp40_fire", "SoundSlot7");
				//A_FireBullets (0.1, 0.1, -1, 15, "HitPuff", FBF_NORANDOM,8192,"Tracer", -4, -8);
				A_FireProjectile("PB_9x19mm", frandom(-0.1,0.1),0,0,0, FPF_NOAUTOAIM, frandom(-0.1,0.1));
				A_FireCustomMissile("YellowFlareSpawn",0,0,-4,0);
				//A_FireCustomMissile("GunFireSmoke", 0, 0, -4, 0, 0, 0);
				PB_GunSmoke(4,0,0);
				A_FireCustomMissile("SMGCasingSpawner",5,0,-14,-6);
				A_FireCustomMissile("ShakeYourAssMinor", 0, 0, 0, 0);
				A_Takeinventory("LeftMP40Ammo",1);
				A_ZoomFactor(0.985);
				A_GunFlash;
				PB_WeaponRecoil(-1.05,+0.70);
			}
			MP21 C 1
			{
				A_ZoomFactor(0.99);
				if(CountInv("LeftMP40Ammo")<=0 || CountInv("MP40Ammo")>0 ){
					A_GiveInventory("DualFiring",1);
				}
				PB_WeaponRecoil(-1.05,+0.70);
			}
			MP21 D 1
			{
				A_ZoomFactor(1.0);
				if(JustPressed(BT_ALTATTACK) && !A_IsFiringLeftWeapon() && GetCvar("SingleDualFire") == 2){
					if(CountInv("LeftMP40Ammo") > 0){
						return state("FireLeft_Overlay");
					}
					else {
					A_PlaySoundEx("weapons/empty", "Auto");
					return state("");
					}
				}
				if(JustPressed(BT_ATTACK) && !A_IsFiringLeftWeapon() && GetCvar("SingleDualFire") == 1){
					if(CountInv("LeftMP40Ammo") > 0){
						return state("FireLeft_Overlay");
					}
					else {
					A_PlaySoundEx("weapons/empty", "Auto");
					return state("");
					}
				}
				return state("");
			}
			MP21 A 1
			TNT1 A 0 {
				if(CountInv("LeftMP40Ammo")<=0){
					A_GiveInventory("DualFireReload",1);
				}
			}
			Goto IdleLeft_Overlay
		
		FireRight_Overlay:
			MP22 B 1 BRIGHT
			{
				A_Overlay(8,"RightFlashVariation");
				A_AlertMonsters;
				A_PlaySoundEx("weapons/mp40_fire", "SoundSlot6");
				//A_FireBullets (0.1, 0.1, -1, 15, "HitPuff", FBF_NORANDOM,8192,"Tracer", -4, 8);
				A_FireProjectile("PB_9x19mm", frandom(-0.1,0.1),0,0,0, FPF_NOAUTOAIM, frandom(-0.1,0.1));
				A_FireCustomMissile("YellowFlareSpawn",0,0,4,0);
				//A_FireCustomMissile("GunFireSmoke", 0, 0, 4, 0, 0, 0);
				PB_GunSmoke(-4,0,0);
				A_FireCustomMissile("SMGCasingSpawner",5,0,16,-5);
				A_FireCustomMissile("ShakeYourAssMinor", 0, 0, 0, 0);
				A_Takeinventory("MP40Ammo",1);
				A_ZoomFactor(0.985);
				A_GunFlash;
				PB_WeaponRecoil(-1.05,-0.70);
			}
			MP22 C 1
			{
				A_ZoomFactor(0.99);
				if(CountInv("LeftMP40Ammo")>0 || CountInv("MP40Ammo")<=0 ){
					A_TakeInventory("DualFiring",1);
				}
				PB_WeaponRecoil(-1.05,-0.70);
			}
			MP22 D 1
			{
				A_ZoomFactor(1.0);
				if(JustPressed(BT_ATTACK) && !A_IsFiringRightWeapon() && GetCvar("SingleDualFire") == 2){
					if(CountInv("MP40Ammo") > 0){
						return state("FireRight_Overlay");
					}
					else {
					A_PlaySoundEx("weapons/empty", "Auto");
					return state("");
					}
				}
				if(JustPressed(BT_ALTATTACK) && !A_IsFiringRightWeapon()){
					if(CountInv("MP40Ammo") > 0){
						return state("FireRight_Overlay");
					}
					else {
						A_PlaySoundEx("weapons/empty", "Auto");
						return state("");
					}
				}
				return state("");
			}
			MP22 A 1
			TNT1 A 0
			{
				if(CountInv("MP40Ammo")<=0){
					A_GiveInventory("DualFireReload",1);
				}
			}
			Goto IdleRight_Overlay
		
		WeaponSpecial:
			TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "IdleBarrel")
			TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "IdleFlameBarrel")
			TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "IdleIceBarrel")
			TNT1 A 0
			{
				A_Takeinventory("GoWeaponSpecialAbility",1);
				A_Takeinventory("Zoomed",1);
				A_Takeinventory("ADSmode",1);
				A_GiveInventory("PB_LockScreenTilt",1);
				PB_HandleCrosshair(44);
				A_ZoomFactor(1.0);
				A_ClearOverlays(10,11);
			}
			TNT1 A 0 A_JumpIfInventory("DualWieldingMP40", 1, "StopDualWield")
			TNT1 A 0 A_JumpIfInventory("PB_MP40", 2,"SwitchToDualWield")
			TNT1 A 0 A_Print("You need two MP40s to dual wield!")
			Goto Ready3
		SwitchToDualWield:
			TNT1 A 0
			{
				A_GiveInventory("DualWieldingMP40", 1);
				A_PlaySoundEx("weapons/MP40_up", "Auto");
			}
			MP25 BCDEFG 1 A_Setroll(roll-0.5, SPF_INTERPOLATE)
			MP25 HIJKL 1 A_Setroll(roll+1.0, SPF_INTERPOLATE)
			Goto ReadyDualWield
		StopDualWield:
			TNT1 A 0
			{
				A_TakeInventory("DualWieldingMP40", 1);
				A_PlaySoundEx("weapons/MP40_up", "Auto");
			}
			MP25 LKJIH 1 A_Setroll(roll+0.5, SPF_INTERPOLATE)
			MP25 GFEDCB 1 A_Setroll(roll-1.0, SPF_INTERPOLATE)
			Goto Ready3
			
		Deselect:
			TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "PlaceBarrel")
			TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "PlaceFlameBarrel")
			TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "PlaceIceBarrel")
			TNT1 A 0
			{
				A_WeaponOffset(0,32);
				A_SetRoll(0);
				PB_HandleCrosshair(44);
				A_TakeInventory("PB_LockScreenTilt",1);
				A_ClearOverlays(10,11);
			}
			TNT1 A 0 A_Takeinventory("Unloading",1)
			TNT1 A 0 A_Takeinventory("Zoomed",1)
			TNT1 A 0 A_Takeinventory("ADSmode",1)
			TNT1 A 0 A_DestroyLaserPuff
			TNT1 A 0 A_Overlay(-9, "Null")
			TNT1 A 0 A_ZoomFactor(1.0)
			
			TNT1 A 0 A_JumpIfInventory("DualWieldingMP40", 1, "DeselectDualWield")
			MPSE DCBA 1
			TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
			Wait
		DeselectDualWield:
			MP25 QPON 1
			TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
			Wait

		Select:
			TNT1 A 0
			{
				A_WeaponOffset(0,32);
				A_SetRoll(0);
				PB_HandleCrosshair(44);
				A_TakeInventory("PB_LockScreenTilt",1);
				A_ClearOverlays(10,11);
			}
			
			TNT1 A 0 A_TakeInventory("HasBarrel",1)
			TNT1 A 0 A_TakeInventory("HasIceBarrel",1)
			TNT1 A 0 A_TakeInventory("HasFlameBarrel",1)
			TNT1 A 0 A_TakeInventory("GrabbedBarrel",1)
			TNT1 A 0 A_TakeInventory("GrabbedIceBarrel",1)
			TNT1 A 0 A_TakeInventory("GrabbedFlameBarrel",1)
			
			Goto SelectFirstPersonLegs
		SelectContinue:
			TNT1 A 0 PB_WeapTokenSwitch("MP40Selected")
			TNT1 AAAAAAAAAAAAAAAAAA 0 A_Raise
			TNT1 AAAAAAAA 1 A_Raise
			Wait
		
		Fire:
			TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "ThrowBarrel")
			TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "ThrowFlameBarrel")
			TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "ThrowIceBarrel")
			TNT1 A 0 {
				A_WeaponOffset(0,32);
				A_SetRoll(0);
				PB_HandleCrosshair(44);
				A_TakeInventory("PB_LockScreenTilt",1);
			}
//			TNT1 A 0 A_JumpIfInventory("DualWieldingMP40", 1, "FireDualWield")
			TNT1 A 0 A_JumpIfInventory("Zoomed",1,"Fire2")
			TNT1 A 0 A_JumpIfInventory("MP40Ammo",1,1)
			Goto Reload
		ActualFire:
			MPFI A 1 BRIGHT {
				PB_FireOffset;
				A_AlertMonsters;
				A_PlaySoundEx("weapons/mp40_fire", "Weapon");
				//A_FireBullets (0.1, 0.1, -1, 15, "HitPuff", FBF_NORANDOM,8192,"Tracer", -2, 0);
				A_FireProjectile("PB_9x19mm", frandom(-0.1,0.1),0,0,0, FPF_NOAUTOAIM, frandom(-0.1,0.1));
				A_FireCustomMissile("YellowFlareSpawn",0,0,0,0);
				//A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
				PB_GunSmoke(0,0,0);
				A_FireCustomMissile("ShakeYourAssMinor", 0, 0, 0, 0);
				A_FireCustomMissile("SMGCasingSpawner",5,0,0,-9);
				A_Takeinventory("MP40Ammo",1);
				A_ZoomFactor(0.985);
				A_GunFlash;
				A_Overlay(-2,"FlashVariation");
				PB_WeaponRecoil(-0.19,+0.17);
			}
			MPFI B 1 {
				A_ZoomFactor(0.99);
				PB_WeaponRecoil(-0.19,+0.17);
			}
			MPFI C 1 {
				A_ZoomFactor(1.0);
				A_WeaponReady(WRF_NOPRIMARY);
			}
			MPFI D 1
			TNT1 A 0 A_Refire("Fire")
			Goto Ready3
			
		Fire2:
			TNT1 A 0 {
				A_WeaponOffset(0,32);
				A_SetCrosshair(5);
			}
			TNT1 A 0 A_JumpIfInventory("MP40Ammo",1,1)
			Goto Reload
		ActualFire2:
			MPZO F 1 BRIGHT {
				A_AlertMonsters;
				A_PlaySoundEx("weapons/mp40_fire", "Weapon");
				//A_FireBullets (0.1, 0.1, -1, 15, "HitPuff", FBF_NORANDOM,8192,"Tracer", -2, 0);
				A_FireProjectile("PB_9x19mm", frandom(-0.1,0.1),0,0,0, FPF_NOAUTOAIM, frandom(-0.1,0.1));
				A_FireCustomMissile("YellowFlareSpawn",0,0,0,0);
				//A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 3, 0, 0);
				PB_GunSmoke(0,0,0);
				A_FireCustomMissile("ShakeYourAssMinor", 0, 0, 0, 0);
				A_FireCustomMissile("SMGCasingSpawner",-2,0,2,0);
				A_Takeinventory("MP40Ammo",1);
				A_ZoomFactor(1.19);
				A_GunFlash;
				A_Overlay(-2,"Flash2Variation");
				PB_WeaponRecoil(-0.15,+0.13);
			}
			MPZO G 1 {
				A_ZoomFactor(1.195);
				PB_WeaponRecoil(-0.15,+0.13);
			}
			MPZO H 1 A_ZoomFactor(1.2)
			MPZO E 1
			TNT1 A 0
			{
				if(GetCvar("pb_toggle_aim_hold"))
					{
						if(JustReleased(BT_ALTATTACK))
						{
							return state("Zoomout");
						}
						if (JustPressed(BT_ATTACK) && PressingAltfire())
						{
							return state("Fire2");
						}
					}
					else
					{
						if(PressingAltfire()){
							return state("Zoomout");
					}
					if (JustPressed(BT_ATTACK))
					{
						return state("Fire2");
					}
					A_Refire("Fire2");
				}
				return A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE);
			}
			Goto Ready2
		
		AltFire:
			TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "PlaceBarrel")
			TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "PlaceFlameBarrel")
			TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "PlaceIceBarrel")
			TNT1 A 0
			{
				A_WeaponOffset(0,32);
				A_SetRoll(0);
				PB_HandleCrosshair(44);
				A_TakeInventory("PB_LockScreenTilt",1);
			}
			TNT1 A 0 A_JumpIfInventory("MP40HasUnloaded", 1, "UnloadedReady")
			TNT1 A 0 A_PlaySound("IronSights", 0)
			TNT1 A 0 A_JumpIfInventory("Zoomed",1,"Zoomout")
			TNT1 A 0
			{
				A_SetCrosshair(5);
				A_Giveinventory("Zoomed",1);
				A_ZoomFactor(1.2);
				A_Giveinventory("ADSmode",1);
			}
			MPZO ABCD 1
			Goto Ready2
		
		Zoomout:
			TNT1 A 0
			{
				A_Takeinventory("ADSmode",1);
				A_Takeinventory("Zoomed",1);
				A_ZoomFactor(1.0);
				PB_HandleCrosshair(44);
			}
			MPZO DCBA 1
			Goto Ready3
		
		Reload:
			TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "IdleBarrel")
			TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "IdleFlameBarrel")
			TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "IdleIceBarrel")
			TNT1 A 0
			{
				A_ZoomFactor(1.0);
				A_Takeinventory("ADSmode",1);
				A_Takeinventory("Zoomed",1);
			}
			TNT1 A 0 A_JumpIfInventory("DualWieldingMP40", 1, "ReloadDualWield")
			TNT1 A 0 A_JumpIfInventory("MP40Ammo",32,"Ready3")
			TNT1 A 0 A_JumpIfInventory("PB_LowCalMag",1,2)
			TNT1 A 0 A_PlaySoundEx("weapons/empty", "Weapon")
			Goto Ready3
			TNT1 A 0
			{
				A_ZoomFactor(1.0);
				A_SetCrosshair(5);
				A_Takeinventory("ADSmode",1);
				A_Takeinventory("Zoomed",1);
				A_Giveinventory("PB_LockScreenTilt",1);
				A_ClearOverlays(10,11);
			}
			TNT1 A 0 A_JumpIfInventory("MP40HasUnloaded", 1, "ReloadUnloaded")
			TNT1 A 0 A_JumpIfInventory("MP40Ammo", 1, 1)
			goto ReloadEmpty
			TNT1 A 0
			MPR1 ABC 1
			TNT1 A 0 A_PlaySoundEx("weapons/MP40_up", "Auto")
			MPR1 DEFG 1
			MPR1 HIJKLMN 1 A_SetRoll(roll+1.3, SPF_INTERPOLATE)
			MPR1 OPQRS 1
			TNT1 A 0 A_PlaySoundEx("MP40CLR", "Auto")
			MPR1 TUVWX 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			//TNT1 A 0 A_FireCustomMissile("EmptyMagMP40",5,0,6,-4)
			MPR1 YZ 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			MPR2 ABCDE 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			TNT1 A 0
			{
				A_PlaySoundEx("MP40CLI", "Auto");
				A_Takeinventory("MP40HasUnloaded",1);
			}
			MPR2 FGHIJ 1 A_SetRoll(roll+1.4, SPF_INTERPOLATE)
			MPR2 KLMNOPQ 1
			TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
			MPR2 R 1 A_SetRoll(roll-2, SPF_INTERPOLATE)
			MPR2 S 1 A_SetRoll(roll+3, SPF_INTERPOLATE)
			MPR2 TU 1 A_SetRoll(roll-1.5, SPF_INTERPOLATE)
			MPR2 VWXYZ 1
			MPR3 ABCDEFG 1
			goto InsertBullets
		ReloadEmpty:
			MR21 ABC 1
			TNT1 A 0 A_PlaySoundEx("weapons/MP40_up", "Auto")
			MR21 DEFG 1
			MPR1 HIJKLMN 1 A_SetRoll(roll+1.3, SPF_INTERPOLATE)
			MR21 OP 1
			TNT1 A 0 A_PlaySoundEx("MP40CLR", "Auto")
			MR21 QRSTUVWXYZ 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			TNT1 A 0 A_FireCustomMissile("EmptyMagMP40",5,0,6,-4)
		ReloadEmptyInsert:
			MR22 ABCDEFG 1 A_SetRoll(roll-1, SPF_INTERPOLATE)
			TNT1 A 0
			{
				A_PlaySoundEx("MP40CLI", "Auto");
				A_Takeinventory("MP40HasUnloaded",1);
			}
			MR22 HIJKLMN 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			MR22 OPQRS 1 A_SetRoll(roll+1.4, SPF_INTERPOLATE)
			TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
			MR22 T 1
			MR22 UV 1 A_SetRoll(roll-2, SPF_INTERPOLATE)
			MR22 WX 1 A_SetRoll(roll+3, SPF_INTERPOLATE)
			MR22 YZ 1 A_SetRoll(roll-1.5, SPF_INTERPOLATE)
			MR23 ABCDEFGHIJK 1
			TNT1 A 0 A_GiveInventory("MP40WasEmpty", 1)
// 			TNT1 A 0 A_JumpIfInventory("MP40WasEmpty", 1, "LoadChamber")
			Goto LoadChamber
// 			Goto InsertBullets

		ReloadUnloaded:
			TNT1 A 0 A_GiveInventory("MP40WasEmpty", 1)
			MR21 ABC 1
			TNT1 A 0 A_PlaySoundEx("weapons/MP40_up", "Auto")
			MR21 DEFG 1
			MP4U OPQ 1 A_SetRoll(roll+1.3, SPF_INTERPOLATE)
			MP4U RST 1 A_SetRoll(roll+1.3, SPF_INTERPOLATE)
			Goto ReloadEmptyInsert
		InsertBullets:
			TNT1 A 0 A_JumpIfInventory("MP40Ammo",32,"Ready3")
			TNT1 A 0 A_JumpIfInventory("PB_LowCalMag",1,1)
			Goto Ready3
			TNT1 A 0
			{
				A_Giveinventory("MP40Ammo",1);
				A_Takeinventory("PB_LowCalMag",1);
			}
			Loop
		
		LoadChamber:
			TNT1 A 0
			{
				A_ZoomFactor(1.0);
				A_Takeinventory("ADSmode",1);
				A_Takeinventory("Zoomed",1);
				A_Takeinventory("MP40WasEmpty",1);
				A_Giveinventory("PB_LockScreenTilt",1);
				A_PlaySoundEx("IronSights", "Auto");
			}
			MR24 BCDEFGH 1 A_SetRoll(roll+0.35, SPF_INTERPOLATE)
			TNT1 A 0 A_PlaySoundEx("weapons/MP40_chamber", "Auto")
			MR24 IJKLMN 1 A_SetRoll(roll-0.35, SPF_INTERPOLATE)
			MR24 NOPQRST 1
			Goto InsertBullets
		
		ReloadLeftGunOnly:
			TNT1 A 0 A_JumpIfInventory("LeftMP40Ammo", 1, 2)
			TNT1 A 0 A_GiveInventory("LeftMP40WasEmpty", 1)
			TNT1 A 0
			TNT1 A 0 A_JumpIfInventory("LeftMP40HasUnloaded", 1, "ReloadLeftUnloadedAlone")
			M2R1 A 1 A_PlaySoundEx("MP40CLR", "Auto")
			M2R4 A 0 A_JumpIfInventory("LeftMP40WasEmpty", 1, 2)
			M2R2 A 0	
			"####" A 0
			"####" BCDE 1
			Goto ReloadLeftGunSequence
		ReloadLeftUnloadedAlone:
			TNT1 A 0 A_TakeInventory("LeftMP40HasUnloaded")
			M2U2 MNOPQR 1
			Goto ReloadLeftGunInsert
		ReloadDualWield:
			TNT1 A 0
			{
				if (CountInv("MP40Ammo") >= 32 && CountInv("LeftMP40Ammo") >= 32) {
					return state("Ready3");
				}
				return state("");
			}
			TNT1 A 0 A_JumpIfInventory("PB_LowCalMag",1,2)
			TNT1 A 0 A_PlaySoundEx("weapons/empty", "Auto")
			Goto Ready3
			TNT1 A 0
			{
				A_ZoomFactor(1.0);
				A_SetCrosshair(5);
				A_Takeinventory("ADSmode",1);
				A_Takeinventory("Zoomed",1);
				A_Giveinventory("PB_LockScreenTilt",1);
				A_ClearOverlays(10,11);
			}
			TNT1 A 0 A_JumpIfInventory("MP40Ammo", 32, "ReloadLeftGunOnly")
			M2R1 A 1 A_PlaySoundEx("MP40CLR", "Auto")
			TNT1 A 0 A_JumpIfInventory("MP40HasUnloaded", 1, "ReloadRightUnloaded")
			M2E1 A 0 A_JumpIfInventory("MP40WasEmpty", 1, 2)
			M2R1 A 0
			"####" A 0
			"####" BCDE 1
			Goto ReloadRightEmpty
		ReloadRightUnloaded:
			M2U1 RSTUVW 1
			goto ReloadRightEmptyInsert
		ReloadRightEmpty:	
			TNT1 A 0 A_JumpIfInventory("MP40Ammo", 1, "ReloadRight")
			MPR1 MN 1 A_SetRoll(roll+1.3, SPF_INTERPOLATE)
			MR21 OP 1
			TNT1 A 0 A_PlaySoundEx("MP40CLR", "Auto")
			MR21 QRSTUVWXYZ 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			TNT1 A 0 A_FireCustomMissile("EmptyMagMP40",5,0,6,-4)
		ReloadRightEmptyInsert:
			MR22 ABCDEFG 1 A_SetRoll(roll-1, SPF_INTERPOLATE)
			TNT1 A 0
			{
				A_PlaySoundEx("MP40CLI", "Auto");
				A_Takeinventory("MP40HasUnloaded",1);
			}
			MR22 HIJKLMN 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			TNT1 A 0 A_TakeInventory("MP40HasUnloaded", 1)
			MR22 OPQRS 1 A_SetRoll(roll+1.4, SPF_INTERPOLATE)
			TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
			MR22 T 1
			MR22 UV 1 A_SetRoll(roll-2, SPF_INTERPOLATE)
			MR22 WX 1 A_SetRoll(roll+3, SPF_INTERPOLATE)
			MR22 YZ 1 A_SetRoll(roll-1.5, SPF_INTERPOLATE)
			MR23 ABCDEFGHIJK 1
			TNT1 A 0
			{
				A_ZoomFactor(1.0);
				A_Takeinventory("ADSmode",1);
				A_Takeinventory("Zoomed",1);
				A_Takeinventory("MP40WasEmpty",1);
				A_Giveinventory("PB_LockScreenTilt",1);
				A_PlaySoundEx("IronSights", "Auto");
			}
			MR24 BCDEFGH 1 A_SetRoll(roll+0.35, SPF_INTERPOLATE)
			TNT1 A 0 A_PlaySoundEx("weapons/MP40_chamber", "Auto")
			MR24 IJKLMN 1 A_SetRoll(roll-0.35, SPF_INTERPOLATE)
			MR24 NOO 1
			MRCO ABCDE 1
			TNT1 AAAA 1
			TNT1 A 0 A_JumpIf(CountInv("LeftMP40Ammo") < 32 && CountInv("PB_LowCalMag") > 0, "ReloadLeftGunAfterEmpty")
			M2R1 A 0 A_PlaySoundEx("MP40CLR", "Auto")
			MP25 MNOPQ 1
			TNT1 A 0 A_JumpIfInventory("MP40WasEmpty",1,"InsertBullets3")
			Goto InsertBullets_Right
		ReloadRight:
			MPR1 MN 1 A_SetRoll(roll+1.3, SPF_INTERPOLATE)
			MPR1 OPQRS 1
			TNT1 A 0 A_PlaySoundEx("MP40CLR", "Auto")
			MPR1 TUVWX 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			MPR1 YZ 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			MPR2 ABCDE 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			TNT1 A 0
			{
				A_PlaySoundEx("MP40CLI", "Auto");
				A_Takeinventory("MP40HasUnloaded",1);
			}
			MPR2 FGHIJ 1 A_SetRoll(roll+1.4, SPF_INTERPOLATE)
			MPR2 KLMNOPQ 1
			TNT1 A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
			MPR2 R 1 A_SetRoll(roll-2, SPF_INTERPOLATE)
			MPR2 S 1 A_SetRoll(roll+3, SPF_INTERPOLATE)
			MPR2 TU 1 A_SetRoll(roll-1.5, SPF_INTERPOLATE)
 			MPR2 VWXYZ 1
  			MPR3 A 1
			TNT1 A 0 A_JumpIf(CountInv("LeftMP40Ammo") < 32 && CountInv("PB_LowCalMag") > 0, "ReloadLeftGun")
			M2R1 A 0
			"####" A 0
			M2R1 DCBA 1
			TNT1 A 0 A_JumpIfInventory("MP40WasEmpty",1,"InsertBullets3")
			Goto InsertBullets_Right	
		ReloadLeftGunAfterEmpty:
			TNT1 A 0 A_JumpIfInventory("LeftMP40Ammo", 1, 2)
			TNT1 A 0 A_GiveInventory("LeftMP40WasEmpty", 1)
			TNT1 A 0
			TNT1 A 6
			TNT1 A 0 A_PlaySoundEx("weapons/MP40_up", "Auto")
			TNT1 A 0 A_JumpIfInventory("LeftMP40HasUnloaded", 1, "ReloadLeftUnloaded")
			M2R7 A 0 A_JumpIfInventory("LeftMP40WasEmpty", 1, 2)
			M2R8 A 0
			"####" A 0
			"####" EDCBA 1
			Goto ReloadLeftGunSequence
		ReloadLeftUnloaded:
			TNT1 A 0 A_TakeInventory("LeftMP40HasUnloaded")
			M2U2 XWVUTSR 1
			Goto ReloadLeftGunInsert
		ReloadLeftGun:
			TNT1 A 0 A_JumpIfInventory("LeftMP40Ammo", 1, 2)
			TNT1 A 0 A_GiveInventory("LeftMP40WasEmpty", 1)
			TNT1 A 0
			M2R1 IJ 1
			TNT1 A 6
			TNT1 A 0 A_PlaySoundEx("weapons/MP40_up", "Auto")
			M2R7 A 0 A_JumpIfInventory("LeftMP40WasEmpty", 1, 2)
			M2R8 A 0
			"####" A 0
			"####" EDCBA 1
		ReloadLeftGunSequence:
			M2R4 A 0 A_JumpIfInventory("LeftMP40WasEmpty", 1, 2)
			M2R2 A 0
			"####" A 0
			"####" FG 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			"####" HIJKLM 1
			"####" A 0 A_PlaySoundEx("MP40CLR", "Auto")
			"####" NOPQ 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			"####" A 0 {
					if (CountInv("LeftMP40WasEmpty") == 1) {
					A_FireCustomMissile("EmptyMagMP40",5,0,6,-4);
						}
					}
			"####" RS 1 A_SetRoll(roll+1.3, SPF_INTERPOLATE)
			"####" TU 1 A_SetRoll(roll+1.3, SPF_INTERPOLATE)
		ReloadLeftGunInsert:
			M2R4 A 0 A_JumpIfInventory("LeftMP40WasEmpty", 1, 2)
			M2R2 A 0
			"####" VW 1
			"####" A 0
			{
				A_PlaySoundEx("MP40CLI", "Auto");
				A_Takeinventory("MP40HasUnloaded",1);
			}
			"####" XYZ 1 A_SetRoll(roll+1.4, SPF_INTERPOLATE)
			M2R5 A 0 A_JumpIfInventory("LeftMP40WasEmpty", 1, 2)
			M2R3 A 0
			"####" A 0
			"####" ABCDEFGHI 1
			"####" A 0 A_PlaySoundEx("weapons/riflemagslap", "Auto")
			"####" JKLMNO 1 A_SetRoll(roll+2, SPF_INTERPOLATE)
 			"####" PQRSTUV 1 A_SetRoll(roll-0.75, SPF_INTERPOLATE)
			TNT1 A 0 A_JumpIfInventory("LeftMP40WasEmpty", 1, "LeftRechamber")
			M2R3 WXY 1
			Goto InsertBullets_Right
		LeftRechamber:
			TNT1 A 0 A_TakeInventory("LeftMP40WasEmpty", 1)
			MR24 BCDEFGH 1 A_SetRoll(roll+0.35, SPF_INTERPOLATE)
			TNT1 A 0 A_PlaySoundEx("weapons/MP40_chamber", "Auto")
			MR24 IJKLMN 1 A_SetRoll(roll-0.35, SPF_INTERPOLATE)
			MR24 NO 1
			M2R6 RSTUV 1
			Goto InsertBullets_Right
		InsertBullets_Right:
			TNT1 A 0 A_JumpIfInventory("MP40Ammo",32,"InsertBullets_Left")
			TNT1 A 0 A_JumpIfInventory("PB_LowCalMag",2,1)
			Goto InsertBullets_Left
			TNT1 A 0
			{
				A_Giveinventory("MP40Ammo",1);
				A_Takeinventory("PB_LowCalMag",1);
			}
			Goto InsertBullets_Right
		
		InsertBullets_Left:
			TNT1 A 0 A_JumpIfInventory("LeftMP40Ammo",32,"FinishInsertBullets")
			TNT1 A 0 A_JumpIfInventory("PB_LowCalMag",1,1)
			Goto FinishInsertBullets
			TNT1 A 0
			{
				A_Giveinventory("LeftMP40Ammo",1);
				A_Takeinventory("PB_LowCalMag",1);
			}
			Goto InsertBullets_Left
		FinishInsertBullets:
			TNT1 A 0 A_Takeinventory("MP40WasEmpty",1)
			Goto Ready3
		
		Unload:
			ATFG A 0 A_Takeinventory("Unloading",1)
			TNT1 A 0 A_JumpIfInventory("DualWieldingMP40",1,"UnloadDual")
			TNT1 A 0 A_JumpIfInventory("MP40HasUnloaded", 1, "Ready3")
			TNT1 A 0 A_JumpIfInventory("MP40Ammo",1,1)
			Goto Ready3
			TNT1 A 0
			{
				A_ZoomFactor(1.0);
				A_SetCrosshair(5);
				A_Takeinventory("ADSmode",1);
				A_Takeinventory("Zoomed",1);
				A_Giveinventory("PB_LockScreenTilt",1);
				A_PlaySoundEx("weapons/MP40_up", "Auto");
				A_ClearOverlays(10,11);
			}
			TNT1 A 0 A_Giveinventory("MP40WasEmpty",1)
			MPR1 ABC 1
			MPR1 DEFG 1
			MPR1 HIJKLMN 1 A_SetRoll(roll+1.3, SPF_INTERPOLATE)
			MPR1 OPQRS 1
			TNT1 A 0 A_PlaySoundEx("MP40CLR", "Auto")
			MPR1 TUVWX 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			MPR1 YZZZZ 1
			MP4U ABCDEFGH 1
		RemoveBullets:
			TNT1 A 0 A_JumpIfInventory("MP40Ammo",1,1)
			Goto FinishUnload
			TNT1 A 0
			{
				A_Takeinventory("MP40Ammo",1);
				A_Giveinventory("PB_LowCalMag",1);
			}
			Loop
	
		FinishUnload:
			TNT1 A 0
			{
				A_GiveInventory("MP40HasUnloaded", 1);
				A_Takeinventory("Unloading",1);
			}
			Goto Ready3
		UnloadDual:
			TNT1 A 0 A_StopSound(CHAN_AUTO)
			TNT1 A 0 {
					if (CountInv("MP40Ammo") >= 1) {
							A_ZoomFactor(1.0);
							A_SetCrosshair(5);
							A_Takeinventory("ADSmode",1);
							A_Takeinventory("Zoomed",1);
							A_Giveinventory("PB_LockScreenTilt",1);
							A_ClearOverlays(10,11);
							return state ("UnloadRight");
						}
					else if (CountInv("LeftMP40Ammo") >= 1) {
							A_ZoomFactor(1.0);
							A_SetCrosshair(5);
							A_Takeinventory("ADSmode",1);
							A_Takeinventory("Zoomed",1);
							A_Giveinventory("PB_LockScreenTilt",1);
							A_PlaySoundEx("weapons/MP40_up", "Auto");
							A_ClearOverlays(10,11);
							return state ("UnloadLeftOnly");
						}
				return state ("");
			}
			goto Ready3
		UnloadRight:
			TNT1 A 0 A_GiveInventory("MP40HasUnloaded", 1)
			TNT1 A 0 A_Giveinventory("MP40WasEmpty",1)
			A3F4 A 0 A_PlaySoundEx("MP40CLR", "Auto")
			M2R1 A 0
			"####" A 0
			"####" BCDE 1
			MPR1 MN 1 A_SetRoll(roll+1.3, SPF_INTERPOLATE)
			MPR1 OPQRS 1
			TNT1 A 0 A_PlaySoundEx("MP40CLR", "Auto")
			MPR1 TUVWX 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			MPR1 YZ 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			TNT1 A 0 A_JumpIfInventory("LeftMP40Ammo", 1, "UnloadLeft")
			M2U1 HGFEDCBA 1
			Goto RemoveBullets_Right
		UnloadLeftOnly:
			M2R1 A 1 A_PlaySoundEx("MP40CLR", "Auto")
			M2R2 A 0	
			"####" A 0
			"####" BCDE 1
			Goto UnloadLeftSequence
		UnloadLeft:
			M2R1 A 0 A_PlaySoundEx("MP40CLR", "Auto")
			M2U1 HIJKLMN 1
			M2R8 EDCBA 1
			Goto UnloadLeftSequence
		UnloadLeftSequence:
			M2R2 A 0
			"####" A 0
			"####" FG 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			"####" HIJKLM 1
			"####" A 0 A_PlaySoundEx("MP40CLR", "Auto")
			"####" NOPQ 1 A_SetRoll(roll-1.3, SPF_INTERPOLATE)
			"####" RS 1 A_SetRoll(roll+1.3, SPF_INTERPOLATE)
			"####" TU 1 A_SetRoll(roll+1.3, SPF_INTERPOLATE)
			M2U2 FEDCBA 1
			TNT1 A 0 A_Giveinventory("LeftMP40WasEmpty",1)
			TNT1 A 0 A_GiveInventory("LeftMP40HasUnloaded", 1)
		RemoveBullets_Right:
			TNT1 A 0 A_JumpIfInventory("MP40Ammo",1,1)
			Goto RemoveBullets_Left
			TNT1 A 0
			{
				A_Takeinventory("MP40Ammo",1);
				A_Giveinventory("PB_LowCalMag",1);
			}
			Loop
		RemoveBullets_Left:
			TNT1 A 0 A_JumpIfInventory("LeftMP40Ammo",1,1)
			Goto FinishUnloadDual
			TNT1 A 0
			{
				A_Takeinventory("LeftMP40Ammo",1);
				A_Giveinventory("PB_LowCalMag",1);
			}
			Loop
	
		FInishUnloadDual:
			TNT1 A 0
			{
				A_GiveInventory("MP40HasUnloaded", 1);
				A_Takeinventory("Unloading",1);
			}
			Goto Ready3
//////////////////////////////////////////Unloading
		
		Spawn:
			VMP4 A 0 NoDelay
			AMP4 A 10 A_PbvpFramework("VMP4")
			"####" A 0 A_PbvpInterpolate()
		LOOP
		
		FlashVariation:
			TNT1 A 1 A_Jump(256, "Flash_Variant1", "Flash_Variant2", "Flash_Variant3", "Flash_Variant4", "Flash_Variant5", "Flash_Variant6")
		Flash_Variant1:
			MPFI E 1 BRIGHT
			stop
		Flash_Variant2:
			MPFI F 1 BRIGHT
			stop
		Flash_Variant3:
			MPFI G 1 BRIGHT
			stop
		Flash_Variant4:
			MPFI H 1 BRIGHT
			stop
		Flash_Variant5:
			MPFI I 1 BRIGHT
			stop
		Flash_Variant6:
			MPFI J 1 BRIGHT
			stop
		
		Flash2Variation:
			TNT1 A 1 A_Jump(256, "Flash2_Variant1", "Flash2_Variant2", "Flash2_Variant3", "Flash2_Variant4", "Flash2_Variant5", "Flash2_Variant6")
		Flash2_Variant1: 
			MPZO I 1 BRIGHT
			stop
		Flash2_Variant2: 
			MPZO J 1 BRIGHT
			stop
		Flash2_Variant3:
			MPZO K 1 BRIGHT
			stop
		Flash2_Variant4:
			MPZO L 1 BRIGHT
			stop
		Flash2_Variant5:
			MPZO M 1 BRIGHT
			stop
		Flash2_Variant6:
			MPZO N 1 BRIGHT
			stop
		
		LeftFlashVariation:
			TNT1 A 0 A_Jump(256, "LeftFlash_Variant1", "LeftFlash_Variant2", "LeftFlash_Variant3", "LeftFlash_Variant4")
		LeftFlash_Variant1:
			MP21 E 1 BRIGHT
			stop 
		LeftFlash_Variant2:
			MP21 F 1 BRIGHT
			stop
		LeftFlash_Variant3:
			MP21 G 1 BRIGHT
			stop
		LeftFlash_Variant4:
			MP21 H 1 BRIGHT
			stop

		RightFlashVariation:
			TNT1 A 0 A_Jump(256, "RightFlash_Variant1", "RightFlash_Variant2", "RightFlash_Variant3", "RightFlash_Variant4")
		RightFlash_Variant1: 
			MP22 E 1 BRIGHT
			stop
		RightFlash_Variant2:
			MP22 F 1 BRIGHT
			stop
		RightFlash_Variant3:
			MP22 G 1 BRIGHT
			stop
		RightFlash_Variant4:
			MP22 H 1 BRIGHT
			stop
		
		
		FlashPunching:
			TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "FlashBarrelPunching")
			TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "FlashBarrelPunching")
			TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "FlashBarrelPunching")
			TNT1 A 0 A_JumpIfInventory("DualWieldingMP40", 1, "FlashPunchingDW")
			MP4Q ABCDEF 1
			MP4Q G 1 A_WeaponOffset(-1,33)
			MP4Q GFEDCBA 1 A_WeaponOffset(0,32)
			STOP
			
		FlashKicking:
			TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "FlashBarrelKicking")
			TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "FlashBarrelKicking")
			TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "FlashBarrelKicking")
			TNT1 A 0 A_ClearOverlays(10,11)
			TNT1 A 0 A_JumpIfInventory("DualWieldingMP40", 1, "FlashKickingDW")
			MPKI ACDEFHIHFEDCBA 1 A_DoPBWeaponAction
			Goto Ready3
		
		FlashAirKicking:
			TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "FlashBarrelAirKicking")
			TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "FlashBarrelAirKicking")
			TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "FlashBarrelAirKicking")
			TNT1 A 0 A_ClearOverlays(10,11)
			TNT1 A 0 A_JumpIfInventory("DualWieldingMP40", 1, "FlashAirKickingDW")
			MPKI ABCDEFHIIHFEDCBA 1 A_DoPBWeaponAction
			Goto Ready3
		
		FlashKickingDW:
			MPKI JKLMNOOOONMLKJ 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE)
			Goto Ready3
		
		FlashAirKickingDW:
			MPKI JJKLMNNNNNNMLKJJ 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE)
			Goto Ready3
			
		FlashPunchingDW:
			TNT1 A 0 A_ClearOverlays(10,11)
			TNT1 A 15
			Stop
		
		FlashSlideKicking:
			TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "FlashBarrelSlideKicking")
			TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "FlashBarrelSlideKicking")
			TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "FlashBarrelSlideKicking")
			TNT1 A 0 A_ClearOverlays(10,11)
			TNT1 A 0 A_JumpIfInventory("DualWieldingMP40", 1, "FlashSlideKickingDW")
			MPKI ABCDEGHHHGFGHHHGHHHGFEDCBA 1 A_DoPBWeaponAction
			Goto Ready3
		FlashSlideKickingDW:
			MPKI JKLMNNNNNNNNNNNNNNNNMLKJ 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE)
			Goto Ready3
		
		FlashSlideKickingStop:
			TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "FlashBarrelSlideKickingStop")
			TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "FlashBarrelSlideKickingStop")
			TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "FlashBarrelSlideKickingStop")
			TNT1 A 0 A_ClearOverlays(10,11)
			TNT1 A 0 A_JumpIfInventory("DualWieldingMP40", 1, "FlashSlideKickingStopDW")
			MPKI HGFEDCB 1 A_DoPBWeaponAction
			Goto Ready3
		
		FlashSlideKickingStopDW:
			MPKI OONMLKJ 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE) 
			Goto Ready3
	}
}

ACTOR MP40Ammo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 32
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 32
   Inventory.Icon "AMP4A0"
   +INVENTORY.IGNORESKILL
}

ACTOR LeftMP40Ammo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 32
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 32
   Inventory.Icon "AMP4A0"
   +INVENTORY.IGNORESKILL
}
