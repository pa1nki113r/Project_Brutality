//This script is only for token purposes only.

Actor UseEquipment: Inventory {Inventory.maxamount 1}
Actor ToggleEquipment: Inventory{Inventory.maxamount 1}

Actor FragGrenadeSelected : Inventory {inventory.maxamount 1}
Actor ProximityMineSelected : Inventory {inventory.maxamount 1}
Actor StunGrenadeSelected : Inventory {inventory.maxamount 1}
Actor LeechSelected : Inventory {inventory.maxamount 1}
Actor RevGunSelected : Inventory {inventory.maxamount 1}

Actor WW_FragGrenadeSelected : Inventory {inventory.maxamount 1}
Actor WW_ProximityMineSelected : Inventory {inventory.maxamount 1}
Actor WW_StunGrenadeSelected : Inventory {inventory.maxamount 1}
Actor WW_LeechSelected : Inventory {inventory.maxamount 1}
Actor WW_RevGunSelected : Inventory {inventory.maxamount 1}

Actor DualFiring: Inventory {Inventory.maxamount 1}
Actor DualFireReload: Inventory {Inventory.maxamount 2}

//Actions observed by the AI!
Actor PlayerIsThrowingAGrenade : Inventory {inventory.maxamount 1}
Actor CantWeaponSpecial : Inventory {inventory.maxamount 1}
Actor DoingHelmetAnim : Inventory {inventory.maxamount 1}


// All of this is no longer used!
// PB_Weapon has been moved to ZScript, thanks to A_D_M_E_R_A_L.
/*
Actor PB_Weapon : PB_WeaponBase
{

	Weapon.BobRangeX 0.3
	Weapon.BobRangeY 0.5
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 2.4
	Weapon.UpSound "none"
	Weapon.Kickback 100
	-WEAPON.MELEEWEAPON	

States
{
	Select:
		TNT1 A 1 A_Raise
		Wait
		
	Fire:
	Ready:
	SelectAnimation:
		Goto GoingToReady
	Deselect:
		TNT1 A 1 A_Lower
		Wait
	
	
	
	// I call these "Mini Event Handlers" in decorate
	Equipment_Toggle_Handler_Overlay:
		TNT1 A 1 {
			
			if (CountInv("ToggleEquipment")==1) 
			{
				return ResolveState("SwitchEquipment");
			}
			return ResolveState("");
		}
		Loop
		
	
	Melee_Equipment_Handler_Overlay:
		TNT1 A 1 {
			
			if(JustPressed(BT_USER1) && !PB_usingMelee() && !PB_executingEnemy() && !PB_usingEquipment() &&
			!CheckInventory("GoFatality",1) && !CheckInventory("CantDoAction",1)) 
			{
				A_OverlayOffset(PSP_WEAPON, 0, 32);
				PB_SetUsingEquipment(true);
				A_Overlay(PSP_WEAPON, "UseEquipment");
				A_OverlayOffset(PSP_WEAPON, 0, 32);
			}
		
			if(JustPressed(BT_USER2) && !PB_usingMelee() && !PB_executingEnemy() && !PB_usingEquipment() && !CheckInventory("Zoomed", 1)
			&& !CheckInventory("GoFatality",1) && !CheckInventory("CantDoAction",1)) 
			{
				A_OverlayOffset(PSP_WEAPON, 0, 32);
				PB_SetUsingMelee(true);
				A_Overlay(PSP_WEAPON, "QuickMelee");
				A_OverlayOffset(PSP_WEAPON, 0, 32);
			}
		}
		Loop
	KickHandler_Overlay:
		TNT1 A 1 {
			if(JustPressed(BT_USER4) && !PB_usingKick() && !PB_executingEnemy() && !CheckInventory("Zoomed", 1) && PB_MeleeAttackKickCheck() &&
			!CheckInventory("GoFatality",1)) 
			{
				PB_SetUsingKick(true);
				A_OverlayOffset(-999, 0, 32);
				A_Overlay(-999, "DoKick");
				A_OverlayFlags(-999,PSPF_PLAYERTRANSLATED, true);
			}
		}
		Loop
		
	// Initialize Weapon upon selection
	GoingToReady:
		TNT1 A 0 A_JumpIfInventory ("HasBarrel", 1, "ReadyBarrel")
		TNT1 A 0 A_JumpIfInventory ("HasFlameBarrel", 1, "ReadyFlameBarrel")
		TNT1 A 0 A_JumpIfInventory ("HasIceBarrel", 1, "ReadyIceBarrel")
	SelectingAnimation:
		//TNT1 A 0 A_ClearOverlays(2)
		TNT1 A 0 {
			A_TakeInventory("KeepLaserDeactivated",1);
			A_TakeInventory("DoGrenade",1);
			A_TakeInventory("IsRunning",1);
			A_TakeInventory("Reloading",1);
			A_Overlay(-10, "FirstPersonLegsStand");
			
			// New 
			PB_SetUsingKick(false);
			PB_SetUsingMelee(false);
			PB_SetUsingEquipment(false);
			PB_SetExecutingEnemy(false);
			
		}
		TNT1 A 0 A_Jump(255,"Ready4")
		TNT1 AAAA 1 A_Jump(255, "Ready3")
		Loop
	
	
	// This is decoupled from the base weapon, so we can handle kicks and melee here
	// This will make combat more responsive and help with players reloading in a pinch
	SelectFirstPersonLegs:
	    TNT1 A 0 A_StopSound(1)
		TNT1 A 0 A_StopSound(CHAN_VOICE)
		TNT1 A 0 A_StopSound(5)
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_StopSound(7)
		TNT1 A 0 A_TakeInventory("Spin",1)
		//TNT1 A 0 A_Overlay(10, "Flash")
		TNT1 A 0 A_TakeInventory("CantWeaponSpecial",1) //Fixes bug with Weapon Special Key no longer working when changing SGL grenade type or RL missile mode
		TNT1 A 0 A_TakeInventory("MG42Selected",1) //Take this token on every weapon that's not the MG42.
		TNT1 A 0 A_SetInventory("Grabbing_A_Ledge", 0) //Fixed bug where movement is locked when vaulting after entering a level
		TNT1 A 0 A_Takeinventory("RandomHeadExploder",1)
		TNT1 A 0 A_TakeInventory("DualFireReload",2)
		TNT1 A 0 A_Overlay(-777, "Melee_Equipment_Handler_Overlay")
		TNT1 A 0 A_Overlay(-778, "KickHandler_Overlay")
		TNT1 A 0 A_Overlay(-779, "Equipment_Toggle_Handler_Overlay")
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand")
// 		TNT1 A 0 A_Overlay(-9, "LedgeGrabCheck")
		TNT1 A 0 A_Jump(255, "SelectContinue")
		Loop
		
	TryToSelectDrum:
		TNT1 AAAA 1 A_Jump(255, "Ready3")
		TNT1 AAAA 1 A_Jump(255, "BeltReady")
		Loop
		
    
	GoingToReady2:
		TNT1 A 0 {
			A_TakeInventory("KeepLaserDeactivated",1);
			A_TakeInventory("ToggleEquipment",1);
			
			PB_SetUsingMelee(false);
			PB_SetUsingEquipment(false);
			A_Overlay(-10, "FirstPersonLegsStand");
			
		}
		TNT1 A 0 A_JumpIfInventory("SawSelected", 1, "OnLoop")
		TNT1 AAAA 0 A_Jump(256, "SelectAnimation")
		TNT1 AAAA 1 A_Jump(256, "Ready")
		Loop
		
	Steady:
		TNT1 A 1 {
			// New 
			PB_SetUsingKick(false);
			PB_SetUsingMelee(false);
			PB_SetUsingEquipment(false);
			PB_SetExecutingEnemy(false);
		}
		Goto GoingToReady
		
	//First Person Legs in Doom
	FirstPersonLegsKickRight:
		//STGN A 0 A_JumpIfInventory("GreenBloodOnBoots",1,4)
	    //STBN A 0 A_JumpIfInventory("BlueBloodOnBoots",1,3)
	    //STRN A 0 A_JumpIfInventory("RedBloodOnBoots",1,2)
		STAN A 0
		"####" A 0
		"####" A 0 A_GiveInventory("KeepLaserDeactivated",1)
		"####" A 0 A_JumpIf(Height < 54, "FirstPersonLegsHide")
		"####" A 0 A_JumpIfInventory("FPSLegChecker", 1, 2)
		"####" O 1
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
			if(PB_executingEnemy()) {
				A_SetOverlaySprite(-10, "TNT1");
			}
		}
		Loop
		"####" P 1
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
			if(PB_executingEnemy()) {
				A_SetOverlaySprite(-10, "TNT1");
			}
		}
		Loop
	FirstPersonLegsKickLeft:
		//STGL A 0 A_JumpIfInventory("GreenBloodOnBoots",1,4)
	    //STBL A 0 A_JumpIfInventory("BlueBloodOnBoots",1,3)
	    //STRL A 0 A_JumpIfInventory("RedBloodOnBoots",1,2)
		STAL A 0
		"####" A 0
		"####" A 0 A_GiveInventory("KeepLaserDeactivated",1)
		"####" A 0 A_JumpIf(Height < 54, "FirstPersonLegsHide")
		"####" A 0 A_JumpIfInventory("FPSLegChecker", 1, 2)
		"####" P 1
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
			
			
			
			if(PB_executingEnemy()) {
				A_SetOverlaySprite(-10, "TNT1");
			}
			
		}
		Loop
		"####" O 1
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
			if(PB_executingEnemy()) {
				A_SetOverlaySprite(-10, "TNT1");
			}
		}
		Loop
	FirstPersonLegsHide:
		"####" Q 1 
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
			if(PB_executingEnemy()) {
				A_SetOverlaySprite(-10, "TNT1");
			}
		}
		Loop
	FirstPersonLegsStand:
		TNT1 A 0 
		TNT1 A 0 A_JumpIf(momx > 0.8 || momx < -0.8 || momy > 0.8 || momy < -0.8, "FirstPersonLegsWalk1")
		TNT1 A 0 A_JumpIf(momZ != 0, "FirstPersonLegsJump")
		TNT1 A 0 A_JumpIf(Height < 54, "FirstPersonLegsCrouch")
		TNT1 A 0 A_JumpIfInventory("FPSLegChecker", 1, 2)
		STAN A 1 
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
			if(PB_executingEnemy()) {
				A_SetOverlaySprite(-10, "TNT1");
			}
		}
		Loop
		TNT1 A 0 
		TNT1 A 0 A_JumpIf(Height < 54, "FirstPersonLegsCrouch")
		TNT1 A 0 A_JumpIf(momZ != 0, "FirstPersonLegsJump")
		STAN M 1 
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
			if(PB_executingEnemy()) {
				A_SetOverlaySprite(-10, "TNT1");
			}
		}
		Loop
		
	FirstPersonLegsCrouch:
		TNT1 A 0
		TNT1 A 0 A_PlaySound("IronSights", 0) //Sound when player crouches
		FirstPersonLegsCrouchContinue:
		TNT1 A 0 A_JumpIf(momZ != 0, "FirstPersonLegsJump")
		TNT1 A 0 A_JumpIf(momx > 0.8 || momx < -0.8 || momy > 0.8 || momy < -0.8, "FirstPersonLegsWalk1")
		TNT1 A 0 A_JumpIf(Height > 54, "FirstPersonLegsStand")
		STAN N 1 
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
			if(PB_executingEnemy()) {
				A_SetOverlaySprite(-10, "TNT1");
			}
		}
		Loop
		
	FirstPersonLegsWalk1:
		TNT1 A 0
		TNT1 A 0 A_JumpIf(momZ != 0, "FirstPersonLegsJump")
		TNT1 A 0 A_JumpIfInventory("FPSLegChecker", 1, "FirstPersonLegsWalk2")
		TNT1 A 0 A_JumpIf(momZ != 0, "FirstPersonLegsJump")
		TNT1 A 0 A_GiveInventory("FPSLegChecker",1)
		STAN BCCDDEEFF 1
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
			if(PB_executingEnemy()) {
				A_SetOverlaySprite(-10, "TNT1");
			}
			return A_JumpIf(momZ != 0, "FirstPersonLegsJump");
		}
		Goto FirstPersonLegsStand
		
	FirstPersonLegsWalk2:
		TNT1 A 0
		TNT1 A 0 A_JumpIf(momZ != 0, "FirstPersonLegsJump")
		TNT1 A 0 A_TakeInventory("FPSLegChecker",1)
		STAN GHHIIJJKLL 1 
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
			if(PB_executingEnemy()) {
				A_SetOverlaySprite(-10, "TNT1");
			}
			return A_JumpIf(momZ != 0, "FirstPersonLegsJump");
		}
		Goto FirstPersonLegsStand
			
	FirstPersonLegsJump:
		TNT1 A 0 
		STAN I 5
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
			if(PB_executingEnemy()) {
				A_SetOverlaySprite(-10, "TNT1");
			}
		}
		Goto FirstPersonLegsStand
			
		//NEW EQUIPMENT SYSTEM
		UseEquipment:
			TNT1 A 0 A_JumpIfInventory("CantDoAction",1,"FailOverlay")
			TNT1 A 0 A_JumpIfHealthLower(0, "FailOverlay")
			TNT1 A 0 {
				A_ClearOverlays(-10,65);
				A_GunFlash("Null"); //Fixes the Minigun heat overlay oversight
				A_TakeInventory("Zoomed", 1);
				A_TakeInventory("RailgunInfrared", 1);
				A_Zoomfactor(1.0);
				A_GiveInventory("KeepLaserDeactivated",1);
				A_StopSound(CHAN_WEAPON);
				A_StopSound(CHAN_VOICE);
				A_StopSound(CHAN_6);
				A_StopSound(CHAN_7);
			}
			TNT1 A 0 A_TakeInventory("UseEquipment", 1)
			TNT1 A 0 A_GiveInventory("KeepLaserDeactivated",1)
			TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "IdleBarrel")
			TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "IdleFlameBarrel")
			TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "IdleIceBarrel")
			TNT1 A 0 A_JumpIfInventory("FragGrenadeSelected", 1, "ThrowGrenade")
			TNT1 A 0 A_JumpIfInventory("ProximityMineSelected", 1, "ThrowMine")
			TNT1 A 0 A_JumpIfInventory("StunGrenadeSelected", 1, "ThrowStun")
			TNT1 A 0 A_JumpIfInventory("LeechSelected", 1, "ThrowLeech")
			TNT1 A 0 A_JumpIfInventory("RevGunSelected", 1, "FireRevGun")
			//More stuff to come.....
			
			
			Goto GoingToReady
			
		WheelCancelEquipment:
			TNT1 A 0
				{
				A_SetInventory("WW_ProximityMineSelected",0);
				A_SetInventory("WW_StunGrenadeSelected",0);
				A_SetInventory("WW_LeechSelected",0);
				A_SetInventory("WW_FragGrenadeSelected",0);
				A_SetInventory("WW_RevGunSelected",0);
				A_SetInventory("CantWeaponSpecial",0);
				}
			goto Equipment_Toggle_Handler_Overlay
		
		SwitchEquipment:	
		TNT1 A 0 A_TakeInventory("ToggleEquipment", 1)
		TNT1 A 0 {
			if(CountInv("WW_ProximityMineSelected") && CountInv("ProximityMineSelected") >=1)
				{A_Print("Equipment already selected: Proximity Mine"); Return State("WheelCancelEquipment");}
			if(CountInv("WW_StunGrenadeSelected") && CountInv("StunGrenadeSelected") >=1)
				{A_Print("Equipment already selected: Stun Grenade"); Return State("WheelCancelEquipment");}
			if(CountInv("WW_LeechSelected") && CountInv("LeechSelected") >=1)
				{A_Print("Equipment already selected: Leech"); Return State("WheelCancelEquipment");}
			if(CountInv("WW_FragGrenadeSelected") && CountInv("FragGrenadeSelected") >=1)
				{A_Print("Equipment already selected: Frag Grenade"); Return State("WheelCancelEquipment");}
			if(CountInv("WW_RevGunSelected") && CountInv("RevGunSelected") >=1)
				{A_Print("Equipment already selected: Revenant Launcher"); Return State("WheelCancelEquipment");}
			if(CountInv("WW_ProximityMineSelected") >=1)
				{
				if(CountInv("MineAmmo") <=0)
					{A_Print("No Mines Available"); Return State("WheelCancelEquipment");}
				}
			if(CountInv("WW_StunGrenadeSelected") >=1)
				{
				if(CountInv("StunGrenadeAmmo") <=0)
					{A_Print("No Stun Grenades Available"); Return State("WheelCancelEquipment");}
				}
			if(CountInv("WW_LeechSelected") >=1)
				{
				if(CountInv("HasLeech") <=0)
					{A_Print("No Leech Available"); Return State("WheelCancelEquipment");}
				}
			if(CountInv("WW_RevGunSelected") >=1)
				{
				if(CountInv("MiniHellRocketAmmo") <=0)
					{A_Print("No Revenant Launcher Available"); Return State("WheelCancelEquipment");}
				}
			if(CountInv("WW_FragGrenadeSelected") >=1)
				{
				if(CountInv("HandGrenadeAmmo") <=0)
					{A_Print("No Frag Grenades Available"); Return State("WheelCancelEquipment");}
				}
			Return State("");
			}
		TNT1 A 0 
			{
				if(CountInv("WW_ProximityMineSelected") >=1)
					{ 
						A_Print("Equipment Selected: Proximity Mine"); 
						A_SetInventory("ProximityMineSelected",1);
						A_SetInventory("StunGrenadeSelected",0);
						A_SetInventory("LeechSelected",0);
						A_SetInventory("RevGunSelected",0);
						A_SetInventory("FragGrenadeSelected",0);
						A_PlaySound("GRNPIN", 3);
						Return State("WheelCancelEquipment");
					}
				if(CountInv("WW_StunGrenadeSelected") >=1)
					{ 
						A_Print("Equipment Selected: Stun Grenade"); 
						A_SetInventory("ProximityMineSelected",0);
						A_SetInventory("StunGrenadeSelected",1);
						A_SetInventory("LeechSelected",0);
						A_SetInventory("RevGunSelected",0);
						A_SetInventory("FragGrenadeSelected",0);
						A_PlaySound("GRNPIN", 3);
						Return State("WheelCancelEquipment");
					}
				if(CountInv("WW_LeechSelected") >=1)
					{ 
						A_Print("Equipment Selected: Leech"); 
						A_SetInventory("ProximityMineSelected",0);
						A_SetInventory("StunGrenadeSelected",0);
						A_SetInventory("LeechSelected",1);
						A_SetInventory("RevGunSelected",0);
						A_SetInventory("FragGrenadeSelected",0);
						A_PlaySound("GRNPIN", 3);
						Return State("WheelCancelEquipment");
					}
				if(CountInv("WW_RevGunSelected") >=1)
					{ 
						A_Print("Equipment Selected: Revenant Launcher"); 
						A_SetInventory("ProximityMineSelected",0);
						A_SetInventory("StunGrenadeSelected",0);
						A_SetInventory("LeechSelected",0);
						A_SetInventory("RevGunSelected",1);
						A_SetInventory("FragGrenadeSelected",0);
						A_PlaySound("REVUP", 3);
						Return State("WheelCancelEquipment");
					}
				if(CountInv("WW_FragGrenadeSelected") >=1)
					{ 
						A_Print("Equipment Selected: Frag Grenade"); 
						A_SetInventory("ProximityMineSelected",0);
						A_SetInventory("StunGrenadeSelected",0);
						A_SetInventory("LeechSelected",0);
						A_SetInventory("RevGunSelected",0);
						A_SetInventory("FragGrenadeSelected",1);
						A_PlaySound("GRNPIN", 3);
						Return State("WheelCancelEquipment");
					}
			Return State("");
			}
		goto Equipment_Toggle_Handler_Overlay

	LeechBeam:
		SYNP WXYZWXYZWXYZ 1 BRIGHT
		SYNP WXYZWXYZWXYZ 1 BRIGHT
		SYNP WXYZWXYZWXYZ 1 BRIGHT
		SYNP WXYZWXYZWXYZ 1 BRIGHT
		sTOP
		
	ThrowLeech:
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("ADSMode", 1)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_JumpIfInventory("Demonpower", 100, 2)
		TNT1 A 0 A_Print("Need more Demon Energy")
		Goto GoingToReady
		TNT1 A 0 A_PlaySound("SiphonGrowl")
		SYNP GHIJGHIHIJGJIHG 2
		SYNP G 1 Offset(-2,40)
		SYNP H 1 Offset(-4,50)
		SYNP I 1 Offset(-6,60)
		SYNP J 1 Offset(-8,70)
		TNT1 A 0 Offset(0,32)
		SYNP KLMNO 1
		
		TNT1 A 0 A_Overlay(-5, "LeechBeam")
		TNT1 A 0 A_PlaySound("SiphonActive", 3)
		
		TNT1 A 0 A_TakeInventory("Demonpower", 100)
		SYNP ABCDEF 2 A_FireBullets (0, 0, -1, 3, "SiphonPuff", FBF_NORANDOM)
		SYNP ABCDEF 2 A_FireBullets (0, 0, -1, 3, "SiphonPuff", FBF_NORANDOM)
		SYNP ABCDEF 2 A_FireBullets (0, 0, -1, 3, "SiphonPuff", FBF_NORANDOM)
		SYNP ABCDEF 2 A_FireBullets (0, 0, -1, 3, "SiphonPuff", FBF_NORANDOM)
		
		
		SYNP ONMLK 1
		TNT1 A 0 A_WeaponOffset(0,32)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_TakeInventory("ToggleEquipment", 1)
		Goto GoingToReady2
		
			
	ThrowStun:
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("ADSMode", 1)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_JumpIfInventory("StunGrenadeAmmo", 1, 2)
		TNT1 A 0 A_Print("No Stun Grenades left")
		Goto GoingToReady
		STNG BCDEF 1
		STNG F 1 Offset(-2,34)
		NULL A 0 A_PlaySound("StunGrenadeArm", 2)
		STNG GIJJJIHGKLMNOP 1
		
		HND1 I 1 A_PlaySound("THRGRN", 1)
		TNT1 A 0 A_TakeInventory("StunGrenadeAmmo", 1)
		HND1 J 1 A_FireCustomMissile("ThrownStunGrenade",0,0,0,0,0,0)
		HND1 KLMNOPQ 1
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_TakeInventory("ToggleEquipment", 1)
		Goto GoingToReady2
		
	FireRevGun:
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("ADSMode", 1)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_JumpIfInventory("MiniHellRocketAmmo", 1, 2)
		TNT1 A 0 A_Print("No Revenant Launcher Ammo")
		Goto GoingToReady
		TNT1 A 0 A_TakeInventory("MiniHellRocketAmmo", 1)
		TNT1 A 0 A_PlaySound("revup")
	    RVCA ABCDEFGHIJK 1 
		RVCF AB 1 
        TNT1 A 0 A_AlertMonsters
	    TNT1 A 0 BRIGHT A_FireCustomMissile("Alerter", 0, 0, -1, 0)
		TNT1 A 0 A_ZoomFactor(0.98)
		TNT1 A 0 A_PlaySound("hellishmissle/fire", 1)
		RVCF C 1
        RVCF D 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker3", random(4,-4), 0, -8, 0)
		TNT1 A 0 A_ZoomFactor(0.975)
		TNT1 A 0 A_PlaySound("hellishmissle/fire", 2)
	    TNT1 A 0 A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
		RVCF E 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker2", random(4,-4), 0, 8, 0)
		RVCF FG 1 BRIGHT
		RVCF H 1 A_ZoomFactor(1.0)
		RVCF C 1
        RVCF D 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker3", random(4,-4), 0, -8, 0)
		TNT1 A 0 A_ZoomFactor(0.975)
		TNT1 A 0 A_PlaySound("hellishmissle/fire", 2)
	    TNT1 A 0 A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
		RVCF E 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker2", random(4,-4), 0, 8, 0)
		RVCF FG 1 BRIGHT
		RVCF H 1 A_ZoomFactor(1.0)
		RVCF C 1
        RVCF D 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker3", random(4,-4), 0, -8, 0)
		TNT1 A 0 A_ZoomFactor(0.975)
		TNT1 A 0 A_PlaySound("hellishmissle/fire", 2)
	    TNT1 A 0 A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
		RVCF E 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker2", random(4,-4), 0, 8, 0)
		RVCF FG 1 BRIGHT
		RVCF H 1 A_ZoomFactor(1.0)
		RVCF C 1
        RVCF D 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker3", random(4,-4), 0, -8, 0)
		TNT1 A 0 A_ZoomFactor(0.975)
		TNT1 A 0 A_PlaySound("hellishmissle/fire", 2)
	    TNT1 A 0 A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
		RVCF E 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker2", random(4,-4), 0, 8, 0)
		RVCF FG 1 BRIGHT
		RVCF H 1 A_ZoomFactor(1.0)
		RVCF IBA 1
		TNT1 A 0 A_PlaySound("revcyc")
		RVCA KJIHGFEDCBA 1
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_TakeInventory("ToggleEquipment", 1)
		Goto GoingToReady2
		
		
	ThrowGrenade:
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_StopSound(CHAN_VOICE)
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("ADSMode", 1)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_JumpIfInventory("HandGrenadeAmmo", 1, 2)
		TNT1 A 0 A_Print("No Grenades left")
		Goto GoingToReady
// 		TNT1 A 0 A_Giveinventory("PB_LockScreenTilt",1)
		TNT1 A 0 A_Giveinventory("PlayerIsThrowingAGrenade",1)
		
		HNDF ABCDE 1 A_SetRoll(roll+2.0, SPF_INTERPOLATE)
		HNDF FGHI 1 {
			A_SetRoll(roll+2.0, SPF_INTERPOLATE);
			if(JustPressed(BT_USER1)) {
				A_GiveInventory("UseEquipment",1);
				}
			}
		TNT1 A 0 A_PlaySoundEx("OPNGRN", "Auto")
		HNDF JKLMNOPQR 1 {
			A_SetRoll(roll+2.0, SPF_INTERPOLATE);
			if(JustPressed(BT_USER1)) {
				A_GiveInventory("UseEquipment",1);
				}
			}
		TNT1 A 0 A_JumpIfInventory("UseEquipment", 1, "TossGrenade")
		TNT1 A 1 A_SetRoll(roll-18.0)
		HND1 I 1 A_PlaySoundEx("THRGRN", "Auto")
		TNT1 A 0 A_TakeInventory("HandGrenadeAmmo", 1)
		TNT1 A 0 A_FireCustomMissile("Alerter",0,0,0,0,0,0)
		HND1 J 1 A_FireCustomMissile("ThrownGrenade30",0,0,0,0,0,0)
		HND1 KLMNOPQ 1 A_SetRoll(roll-5.0)
		TNT1 A 0 A_SetRoll(0, SPF_INTERPOLATE)
// 		TNT1 A 0 A_TakeInventory("PB_LockScreenTilt",1)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_TakeInventory("ToggleEquipment", 1)
		TNT1 A 0 A_TakeInventory("PlayerIsThrowingAGrenade", 1)
		Goto GoingToReady2
		
	TossGrenade:
		TNT1 A 1
		HND1 RSTU 1 A_SetRoll(roll-1.5, SPF_INTERPOLATE)
		TNT1 A 0 A_PlaySound("THRGRN", 1)
		TNT1 A 0 A_TakeInventory("HandGrenadeAmmo", 1)
		TNT1 A 0 A_FireCustomMissile("Alerter",0,0,0,0,0,0)
		TNT1 A 0 A_FireCustomMissile("ThrownGrenade15", 0,0,0,-2,0,3)
		HND1 VWXY 1 A_SetRoll(roll-1.5, SPF_INTERPOLATE)
		TNT1 A 0 A_SetRoll(0)
		TNT1 A 0 A_TakeInventory("PB_LockScreenTilt",1)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_TakeInventory("ToggleEquipment", 1)
		TNT1 A 0 A_TakeInventory("PlayerIsThrowingAGrenade", 1)
		Goto GoingToReady2
		
	ThrowMine:
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("ADSMode", 1)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_JumpIfInventory("MineAmmo", 1, 2)
		TNT1 A 0 A_Print("No Land Mines left")
		Goto GoingToReady
		XPFF FEDCBA 1
		XPFS B 1
		NULL A 0 A_PlaySound("weapons/pbarm", 2)
		XPFS B 3
		XHFF A 0 A_PlaySound("MINE002", 3)
		TNT1 A 0 A_ThrowGrenade("ThrownProxMine",4,11,1,0)
		TNT1 A 0 A_TakeInventory("MineAmmo", 1)
		XHFF MNOPQRSTUVWXYZ 1
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_TakeInventory("ToggleEquipment", 1)
		Goto GoingToReady2
		
	////////////////////////////////////////////////KNIFE COMBO//////////////////////////////////////////////////////////////
	
			
			
			
			
			
			
	// The quick melee is going to be reworked, knife combos are tacky and bloat the code
	// The quick melee should have a primary purpose of executing enemies or finishing them off to the point where they can be executed
	QuickMelee:
		TNT1 A 0 A_StopSound(CHAN_WEAPON)
		TNT1 A 0 A_StopSound(CHAN_VOICE)
		TNT1 A 0 A_StopSound(CHAN_6)
		TNT1 A 0 A_StopSound(CHAN_7)
		TNT1 A 0 A_JumpIfInventory("CantDoAction",1,"FailOverlay")
		TNT1 A 0 A_JumpIfHealthLower(0, "FailOverlay")
		TNT1 A 0 A_ClearOverlays(-10,65)
		TNT1 A 0 A_Gunflash("Null")
		TNT1 AAA 0 PB_Execute() // Check if monster can be executed, jump to execution handler instead
	GoMeleeInstead:
		TNT1 A 0 {
			A_Overlay(PSP_FLASH, "FlashPunching");
			A_GiveInventory("HasCutingWeapon", 1);
			//A_GiveInventory("Punching",1);
			A_TakeInventory("Zoomed",1);
			A_ZoomFactor(1.0);
			A_TakeInventory("ADSmode",1);
			A_PlaySound("KNIFSWNG", 1);
		}
		MC3S AB 1 {
			if(JustPressed(BT_USER2)) {return PB_Execute();}
			return state("");
		}
        MC3S C 1 {
// 			A_SetPitch(+2 + pitch, SPF_INTERPOLATE);
			
			if(JustPressed(BT_USER2)) {return PB_Execute();}
			return state("");
		}
		
        MC3S D 1 {
// 			A_SetPitch(pitch+, SPF_INTERPOLATE);
			
			
			if(JustPressed(BT_USER2)) {return PB_Execute();}
			return state("");
		}
			
		TNT1 A 0 {
		if(CountInv("PowerStrength") == 1) { 
			A_FireCustomMissile("SuperKnifeSwing", 0, 0, 0, 0);
			}
		else{
			A_FireCustomMissile("KnifeSwing", 0, 0, 0, 0);
			}
		}
        MC3S EFGHIJ 1 {
			if(JustPressed(BT_USER2)) {return PB_Execute();}
			return state("");
		}
		TNT1 AAAA 1 {
			if(JustPressed(BT_USER2)) {return PB_Execute();}
			return state("");
		}
		TNT1 A 0 {
			A_TakeInventory("KnifeHasHit",1);
			A_TakeInventory("HasCutingWeapon", 1);
			PB_SetUsingMelee(false);
		}
		TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "IdleBarrel")
		TNT1 A 0 A_JumpIfInventory ("GrabbedFlameBarrel", 1, "IdleFlameBarrel")
		TNT1 A 0 A_JumpIfInventory ("GrabbedIceBarrel", 1, "IdleIceBarrel")
		Goto Ready3
	
		
////////////////////////////////////////////////KNIFE COMBO//////////////////////////////////////////////////////////////
		
    DoKick:
		TNT1 A 0 A_JumpIfInventory("PlayerIsDead",1,"FailOverlay")
		TNT1 A 0 A_JumpIfHealthLower(0, "FailOverlay")
		TNT1 A 0 {
			//A_Giveinventory("PB_LockScreenTilt",1);
			A_Overlay(-10, "FirstPersonLegsKickRight");
			A_TakeInventory("Zoomed",1);
			A_TakeInventory("ADSmode",1);
			A_ZoomFactor(1.0);
			A_GiveInventory("Kicking",1);
			}
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		NULL A 0 A_JumpIfInventory("CanSlideKick", 1, "SlideKick")
		NULL A 0 A_JumpIf (velZ != 0, "AirKick")
		TNT1 A 0 A_OverlayFlags(-999,PSPF_PLAYERTRANSLATED, true)
		KIC1 A 1 {
			A_PlaySoundEx("KICK", "Auto");
			SetPlayerProperty(0,1,0);
			if(CountInv("GrabbedBarrel") == 1) {
				A_Overlay(PSP_WEAPON, "FlashBarrelKicking");
			}
			if(CountInv("GrabbedIceBarrel") == 1) {
				A_Overlay(PSP_WEAPON, "FlashBarrelKicking");
			}
			if(CountInv("GrabbedFlameBarrel") == 1) {
				A_Overlay(PSP_WEAPON, "FlashBarrelKicking");
			}
			else if(PB_WeaponIsInReadyState())
			{
				A_Overlay(PSP_WEAPON, "FlashKicking");
				A_OverlayOffset(PSP_WEAPON, 0, 32);
				A_GunFlash("Null");
			}
			A_SetAngle(-0.5 + angle, SPF_INTERPOLATE);
			A_SetPitch(+0.5 + pitch, SPF_INTERPOLATE);
			A_SetRoll(roll-2);
			A_ZoomFactor(0.98);
			}
		KIC1 B 1 {
			A_SetAngle(-0.5 + angle, SPF_INTERPOLATE);
			A_SetPitch(+0.5 + pitch, SPF_INTERPOLATE);
			A_SetRoll(roll-2);
			A_ZoomFactor(0.970);
			}
		KIC1 C 1 {
			A_SetAngle(-0.5 + angle, SPF_INTERPOLATE);
			A_SetPitch(+0.5 + pitch, SPF_INTERPOLATE);
			A_SetRoll(roll-2);
			A_ZoomFactor(0.965);
		}
		KIC1 D 1 { 
			A_SetPitch(+1.25 + pitch, SPF_INTERPOLATE);
			A_ZoomFactor(0.950);
			}
        KIC1 E 1 A_Recoil(-1)
        KIC1 F 1 { //No more unneeded Super states here, this now unified into a single state with an if else statement.
			if(CountInv("PowerStrength") == 1) {
				A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -7);
			}
			else{
				A_FireCustomMissile("KickAttack", 0, 0, 0, -7);
			}
		}
        KIC1 GG 1 
		KIC1 I 1 {
			A_ZoomFactor(0.965);
			A_SetAngle(+1 + angle, SPF_INTERPOLATE);
			A_TakeInventory("Kicking",1);
			}
		KIC1 H 1 {
			A_SetPitch(-0.5 + pitch, SPF_INTERPOLATE);
			A_SetAngle(+1 + angle, SPF_INTERPOLATE);
			A_SetRoll(roll+2);
			A_ZoomFactor(0.970);
		}
		KIC1 J 1 {
			A_SetPitch(-0.5 + pitch, SPF_INTERPOLATE);
			A_SetRoll(roll+2);
			A_SetAngle(+0.5 + angle, SPF_INTERPOLATE);
			A_ZoomFactor(0.98);
			}
		KIC1 K 1 {
			A_SetPitch(-0.5 + pitch, SPF_INTERPOLATE);
			A_SetRoll(roll+2);
			A_SetAngle(+0.5 + angle, SPF_INTERPOLATE);
			A_ZoomFactor(0.99);
		}
		KIC1 L 1 {
			A_SetAngle(+0.5 + angle, SPF_INTERPOLATE);
			A_SetPitch(-0.5 + pitch, SPF_INTERPOLATE);
			A_ZoomFactor(1.0);
			}
		KIC1 A 1 {
			A_SetAngle(-0.5 + angle, SPF_INTERPOLATE);
			A_SetPitch(-1.25 + pitch, SPF_INTERPOLATE);
			SetPlayerProperty(0,0,0);
		//	A_Takeinventory("PB_LockScreenTilt",1);
			PB_SetUsingKick(false);
		}
		TNT1 A 0 {
			A_OverlayFlags(-999,PSPF_PLAYERTRANSLATED, false);
			A_Overlay(-10, "FirstPersonLegsStand");
		}
		Stop
	
	FailOverlay:
		TNT1 A 0 A_StopSound(CHAN_WEAPON)
		TNT1 A 0 A_StopSound(CHAN_VOICE)
		TNT1 A 0 A_StopSound(CHAN_6)
		TNT1 A 0 A_StopSound(CHAN_7)
		TNT1 A 0 A_JumpIfInventory("CantDoAction",1,1)
		Goto StopFail
		TNT1 A 0 A_JumpIf(Health > 0, 2)
		TNT1 A 1 {
			PB_SetUsingKick(false);
			PB_SetUsingMelee(false);
			PB_SetUsingEquipment(false);
			PB_SetExecutingEnemy(false);
			}
		Loop
	StopFail:
		TNT1 AA 0
		TNT1 A 1 A_SetInventory("CantDoAction",0)
		TNT1 A 1
		Stop
		
	SlideKick:
		TNT1 A 0 {
			A_GiveInventory("KeepLaserDeactivated",1);
			A_GiveInventory("IsSlideKicking", 1);
			if(CountInv("GrabbedBarrel") == 1) {
				A_Overlay(PSP_WEAPON, "FlashBarrelSlideKicking");
			}
			if(CountInv("GrabbedIceBarrel") == 1) {
				A_Overlay(PSP_WEAPON, "FlashBarrelSlideKicking");
			}
			if(CountInv("GrabbedFlameBarrel") == 1) {
				A_Overlay(PSP_WEAPON, "FlashBarrelSlideKicking");
			}
			else if(PB_WeaponIsInReadyState())
			{
				A_Overlay(PSP_WEAPON, "FlashSlideKicking");
				A_GunFlash("Null");
				A_OverlayOffset(PSP_WEAPON, 0, 32);
			}
			A_OverlayFlags(-999,PSPF_PLAYERTRANSLATED, true);
			}
		SLDK A 1 A_ZoomFactor(0.90)
		SLDK B 1 A_ZoomFactor(0.85)
		SLDK C 1 A_ZoomFactor(0.80)
		SLDK D 1 A_ZoomFactor(0.75)
		SLDK EF 1
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		TNT1 A 0 A_JumpIfInventory("KickHasHitAnObject", 1, "LowerKick")
		SLDK GHIJKLMNMLKJ 1 {
			if(CountInv("PowerStrength") == 1) {
				A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -31);
			}
			else{
				A_FireCustomMissile("KickAttack", 0, 0, 0, -31);
			}
			if (CountInv("KickHasHitAnObject") == 1) { return state("LowerKick"); }
			if (Height > 50) { return state("LowerKick"); }
			return state("");
		}
	LowerKick:
		TNT1 A 0 {
			if(CountInv("GrabbedBarrel") == 1) {
				A_Overlay(PSP_WEAPON, "FlashBarrelSlideKickingStop");
			}
			if(CountInv("GrabbedIceBarrel") == 1) {
				A_Overlay(PSP_WEAPON, "FlashBarrelSlideKickingStop");
			}
			if(CountInv("GrabbedFlameBarrel") == 1) {
				A_Overlay(PSP_WEAPON, "FlashBarrelSlideKickingStop");
			}
			else if(PB_WeaponIsInReadyState())
			{
				A_Overlay(PSP_WEAPON, "FlashSlideKickingStop");
				A_GunFlash("Null");
				A_OverlayOffset(PSP_WEAPON, 0, 32);
			}
			A_ZoomFactor(1.0);
			A_PlaySoundEx("SlideKick/End", "Auto");
			A_Takeinventory("Kicking",1);
			A_Takeinventory("KickHasHitAnObject",1);
			A_TakeInventory("IsSlideKicking", 1);
			A_Takeinventory("PB_LockScreenTilt",1);
			PB_SetUsingKick(false);
			A_OverlayFlags(-999,PSPF_PLAYERTRANSLATED, true);
		}
		SLDK OPQRSTU 1
		TNT1 A 0 {
			A_OverlayFlags(-999,PSPF_PLAYERTRANSLATED, false);
			A_Overlay(-10, "FirstPersonLegsStand");
		}
		Stop
	AirKick:
		TNT1 A 0 {
			A_PlaySound("KICK", 6);
			A_Recoil (-6);
			if(CountInv("GrabbedBarrel") == 1) {
				A_Overlay(PSP_WEAPON, "FlashBarrelAirKicking");
			}
			if(CountInv("GrabbedIceBarrel") == 1) {
				A_Overlay(PSP_WEAPON, "FlashBarrelAirKicking");
			}
			if(CountInv("GrabbedFlameBarrel") == 1) {
				A_Overlay(PSP_WEAPON, "FlashBarrelAirKicking");
			}
			else if(PB_WeaponIsInReadyState())
			{
				A_Overlay(PSP_WEAPON, "FlashAirKicking");
				A_GunFlash("Null");
				A_OverlayOffset(PSP_WEAPON, 0, 32);
			}
			A_OverlayOffset(PSP_WEAPON, 0, 32);
			A_ZoomFactor(0.95);
			A_OverlayFlags(-999,PSPF_PLAYERTRANSLATED, true);
		}
		AKCK A 1 A_SetRoll(roll-2, SPF_INTERPOLATE)
		AKCK B 1 A_SetRoll(roll-2, SPF_INTERPOLATE)
		AKCK C 1 A_SetRoll(roll-2, SPF_INTERPOLATE)
		AKCK DEFGH 1
        RIFF A 0 {
			if(CountInv("PowerStrength") == 1) {
				A_FireCustomMissile("SuperAirKickAttack", 0, 0, 0, -31);
			}
			else{
			A_FireCustomMissile("AirKickAttack", 0, 0, 0, -31);
			}
		}
		TNT1 A 0 A_ZoomFactor(0.975)
        AKCK IJK 1
		TNT1 A 0 A_ZoomFactor(0.995)
		TNT1 A 0 A_TakeInventory("Kicking",1)
		AKCK LM 1
		AKCK N 1 A_SetRoll(roll+2, SPF_INTERPOLATE)
		AKCK O 1 A_SetRoll(roll+2, SPF_INTERPOLATE)
		TNT1 A 1 A_SetRoll(roll+2, SPF_INTERPOLATE)
		TNT1 A 0 {
			A_ZoomFactor(1.0);
			A_Takeinventory("PB_LockScreenTilt",1);
			A_OverlayFlags(-999,PSPF_PLAYERTRANSLATED, false);
			PB_SetUsingKick(false);
			A_Overlay(-10, "FirstPersonLegsStand");
		}
		Stop
		
	GrabEnemy:	
	    TNT1 A 0
		TNT1 A 0 A_ClearOverlays(-10,65)
	    TNT1 A 0 A_PlaySound("weapons/fistwhoosh")
        PKUP ABCDEF 1
		TNT1 AAAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait
	
	
	
	/////BARREL THROWER BY PopeOfDope69///////////////////////////////////////////////////////////////
//There is so much shit i had to cram into the weapons to make this 
//convoluted daisy chain of code function, but on god i feel untouchable

//Raise		
	ReadyBarrel:
		TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "IdleBarrel")
		TNT1 A 0 A_ClearOverlays(-10,65)
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_Stopsound(1)
		TNT1 A 0 A_StopSound(CHAN_VOICE)
		TNT1 A 0 A_Stopsound(5)
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_Takeinventory("HasUnloaded",1)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		TNT1 A 0 A_Takeinventory("Zoomed",1)
		TNT1 A 0 A_ZoomFactor(1.0)
		BANE ABCDEFG 1
		TNT1 A 0 A_TakeInventory("HasBarrel",1)
		TNT1 A 0 A_GiveInventory("GrabbedBarrel", 1)
		goto IdleBarrel
	
	ReadyFlameBarrel:
		TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "IdleFlameBarrel")
		TNT1 A 0 A_ClearOverlays(-10,65)
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_Stopsound(1)
		TNT1 A 0 A_StopSound(CHAN_VOICE)
		TNT1 A 0 A_Stopsound(5)
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_Takeinventory("HasUnloaded",1)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		TNT1 A 0 A_Takeinventory("Zoomed",1)
		TNT1 A 0 A_ZoomFactor(1.0)
		BAFE ABCDEFG 1
		TNT1 A 0 A_TakeInventory("HasFlameBarrel",1)
		TNT1 A 0 A_GiveInventory("GrabbedFlameBarrel", 1)
		goto IdleFlameBarrel
	
	ReadyIceBarrel:
		TNT1 A 0 A_JumpIfInventory ("GrabbedBarrel", 1, "IdleIceBarrel")
		TNT1 A 0 A_ClearOverlays(-10,65)
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_Stopsound(1)
		TNT1 A 0 A_StopSound(CHAN_VOICE)
		TNT1 A 0 A_Stopsound(5)
		TNT1 A 0 A_StopSound(CHAN_6)
		TNT1 A 0 A_Takeinventory("HasUnloaded",1)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		TNT1 A 0 A_Takeinventory("Zoomed",1)
		TNT1 A 0 A_ZoomFactor(1.0)
		BAIE ABCDEFG 1
		TNT1 A 0 A_TakeInventory("HasIceBarrel",1)
		TNT1 A 0 A_GiveInventory("GrabbedIceBarrel", 1)
		goto IdleIceBarrel

//Idle		
	IdleBarrel:
		TNT1 A 0 {
			A_Takeinventory("GoWeaponSpecialAbility",1);
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			A_ZoomFactor(1.0);
			A_ClearOverlays(10,11);
			}
        THRG LKJIHIJKL 2 {	
					A_WeaponReady (WRF_ALLOWRELOAD);
					return A_DoPBWeaponAction (WRF_ALLOWRELOAD); }
		loop
		
	IdleFlameBarrel:
		TNT1 A 0 {
			A_Takeinventory("GoWeaponSpecialAbility",1);
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			A_ZoomFactor(1.0);
			A_ClearOverlays(10,11);
			}
        THRG DEFGFED 2 {	
					A_WeaponReady (WRF_ALLOWRELOAD);
					return A_DoPBWeaponAction (WRF_ALLOWRELOAD); }
		loop
		
	IdleIceBarrel:
		TNT1 A 0 {
			A_Takeinventory("GoWeaponSpecialAbility",1);
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			A_ZoomFactor(1.0);
			A_ClearOverlays(10,11);
			}
        THRG M 1 {	
					A_WeaponReady (WRF_ALLOWRELOAD);
					return A_DoPBWeaponAction (WRF_ALLOWRELOAD); }
		loop

//Throw
	ThrowBarrel:
		TNT1 A 0 A_JumpIfInventory("PowerStrength",1,1)
		Goto IdleBarrel
		TNT1 A 0
		BANE HIJKLMN 1
		TNT1 A 0 A_PlaySound("weapons/fistwhoosh")
		BANE ONLJH 1
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		TNT1 A 0 A_FireCustomMissile("ThrownBarrel", 0, 1, 0, 0, FPF_NOAUTOAIM)
		TNT1 A 0 A_TakeInventory("Grab1",1)
		TNT1 A 0 A_TakeInventory("Grab2",1)
		TNT1 A 0 A_TakeInventory("Grab3",1)
		TNT1 A 0 A_TakeInventory("Grab4",1)
		TNT1 A 0 A_TakeInventory("Grab5",1)
		TNT1 A 0 A_TakeInventory("Grab6",1)
		TNT1 A 0 A_TakeInventory("Grab7",1)
		TNT1 A 0 A_TakeInventory("Grab8",1)
		TNT1 A 0 A_TakeInventory("GrabbedBarrel",1)
        THRF ABCDEF 2
		goto GoingToReady
		
	ThrowFlameBarrel:
		TNT1 A 0 A_JumpIfInventory("PowerStrength",1,1)
		Goto IdleFlameBarrel
		TNT1 A 0
		BAFE HIJKLMN 1
		TNT1 A 0 A_PlaySound("weapons/fistwhoosh")
		BAFE ONLJH 1
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		TNT1 A 0 A_FireCustomMissile("ThrownFlameBarrel", 0, 1, 0, 0, FPF_NOAUTOAIM)
		TNT1 A 0 A_TakeInventory("FGrab1",1)
		TNT1 A 0 A_TakeInventory("FGrab2",1)
		TNT1 A 0 A_TakeInventory("FGrab3",1)
		TNT1 A 0 A_TakeInventory("FGrab4",1)
		TNT1 A 0 A_TakeInventory("FGrab5",1)
		TNT1 A 0 A_TakeInventory("FGrab6",1)
		TNT1 A 0 A_TakeInventory("FGrab7",1)
		TNT1 A 0 A_TakeInventory("FGrab8",1)
		TNT1 A 0 A_TakeInventory("GrabbedFlameBarrel",1)
        THRF ABCDEF 2
		goto GoingToReady
		
	ThrowIceBarrel:
		TNT1 A 0 A_JumpIfInventory("PowerStrength",1,1)
		Goto IdleIceBarrel
		TNT1 A 0
		BAIE HIJKLMN 1
		TNT1 A 0 A_PlaySound("weapons/fistwhoosh")
		BAIE ONLJH 1
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		TNT1 A 0 A_FireCustomMissile("ThrownIceBarrel", 0, 1, 0, 0, FPF_NOAUTOAIM)
		TNT1 A 0 A_TakeInventory("IGrab1",1)
		TNT1 A 0 A_TakeInventory("IGrab2",1)
		TNT1 A 0 A_TakeInventory("IGrab3",1)
		TNT1 A 0 A_TakeInventory("IGrab4",1)
		TNT1 A 0 A_TakeInventory("IGrab5",1)
		TNT1 A 0 A_TakeInventory("IGrab6",1)
		TNT1 A 0 A_TakeInventory("IGrab7",1)
		TNT1 A 0 A_TakeInventory("IGrab8",1)
		TNT1 A 0 A_TakeInventory("GrabbedIceBarrel",1)
        THRF ABCDEF 2
		goto GoingToReady
		
//Place
	PlaceBarrel:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		BANE GFEDCBA 1
		TNT1 A 0 A_JumpIfInventory("Grab1", 1, "BarrelPlacement1")
		TNT1 A 0 A_JumpIfInventory("Grab2", 1, "BarrelPlacement2")
		TNT1 A 0 A_JumpIfInventory("Grab3", 1, "BarrelPlacement3")
		TNT1 A 0 A_JumpIfInventory("Grab4", 1, "BarrelPlacement4")
		TNT1 A 0 A_JumpIfInventory("Grab5", 1, "BarrelPlacement5")
		TNT1 A 0 A_JumpIfInventory("Grab6", 1, "BarrelPlacement6")
		TNT1 A 0 A_JumpIfInventory("Grab7", 1, "BarrelPlacement7")
		TNT1 A 0 A_JumpIfInventory("Grab8", 1, "BarrelPlacement8")
		
	BarrelPlacement1:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_NukageBarrel",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	BarrelPlacement2:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_NukageBarrelHoles",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	BarrelPlacement3:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_NukageBarrelCut",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	BarrelPlacement4:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_NukageBarrelDented",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	BarrelPlacement5:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_NukageBarrel_RedBlood",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	BarrelPlacement6:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_NukageBarrelHoles_RedBlood",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	BarrelPlacement7:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_NukageBarrelCut_RedBlood",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	BarrelPlacement8:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_NukageBarrelDented_RedBlood",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement

	PlaceFlameBarrel:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		BAFE GFEDCBA 1
		TNT1 A 0 A_JumpIfInventory("FGrab1", 1, "FBarrelPlacement1")
		TNT1 A 0 A_JumpIfInventory("FGrab2", 1, "FBarrelPlacement2")
		TNT1 A 0 A_JumpIfInventory("FGrab3", 1, "FBarrelPlacement3")
		TNT1 A 0 A_JumpIfInventory("FGrab4", 1, "FBarrelPlacement4")
		TNT1 A 0 A_JumpIfInventory("FGrab5", 1, "FBarrelPlacement5")
		TNT1 A 0 A_JumpIfInventory("FGrab6", 1, "FBarrelPlacement6")
		TNT1 A 0 A_JumpIfInventory("FGrab7", 1, "FBarrelPlacement7")
		TNT1 A 0 A_JumpIfInventory("FGrab8", 1, "FBarrelPlacement8")
		
	FBarrelPlacement1:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_FlameBarrel",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	FBarrelPlacement2:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_FlameBarrelHoles",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	FBarrelPlacement3:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_FlameBarrelCut",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	FBarrelPlacement4:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_FlameBarrelDented",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	FBarrelPlacement5:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_FlameBarrel_RedBlood",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	FBarrelPlacement6:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_FlameBarrelHoles_RedBlood",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	FBarrelPlacement7:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_FlameBarrelCut_RedBlood",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	FBarrelPlacement8:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_FlameBarrelDented_RedBlood",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement

		
	PlaceIceBarrel:
		BAIE GFEDCBA 1
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		TNT1 A 0 A_JumpIfInventory("IGrab1", 1, "IBarrelPlacement1")
		TNT1 A 0 A_JumpIfInventory("IGrab2", 1, "IBarrelPlacement2")
		TNT1 A 0 A_JumpIfInventory("IGrab3", 1, "IBarrelPlacement3")
		TNT1 A 0 A_JumpIfInventory("IGrab4", 1, "IBarrelPlacement4")
		TNT1 A 0 A_JumpIfInventory("IGrab5", 1, "IBarrelPlacement5")
		TNT1 A 0 A_JumpIfInventory("IGrab6", 1, "IBarrelPlacement6")
		TNT1 A 0 A_JumpIfInventory("IGrab7", 1, "IBarrelPlacement7")
		TNT1 A 0 A_JumpIfInventory("IGrab8", 1, "IBarrelPlacement8")
		
	IBarrelPlacement1:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_IceBarrel",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	IBarrelPlacement2:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_IceBarrelHoles",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	IBarrelPlacement3:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_IceBarrelCut",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	IBarrelPlacement4:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_IceBarrelDented",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement

	IBarrelPlacement5:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_IceBarrel_RedBlood",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	IBarrelPlacement6:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_IceBarrelHoles_RedBlood",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	IBarrelPlacement7:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_IceBarrelCut_RedBlood",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	IBarrelPlacement8:
		PKPB HGFEDCBA 1
		TNT1 A 0 A_SpawnItemEx ("PB_IceBarrelDented_RedBlood",17,0,0,12,0,0,0,SXF_NOCHECKPOSITION,0)
		Goto CompletePlacement
		
	CompletePlacement:
		TNT1 A 0 A_PlaySound("barrel/pain")
		TNT1 A 0 A_TakeInventory("Grab1",1)
		TNT1 A 0 A_TakeInventory("Grab2",1)
		TNT1 A 0 A_TakeInventory("Grab3",1)
		TNT1 A 0 A_TakeInventory("Grab4",1)
		TNT1 A 0 A_TakeInventory("Grab5",1)
		TNT1 A 0 A_TakeInventory("Grab6",1)
		TNT1 A 0 A_TakeInventory("Grab7",1)
		TNT1 A 0 A_TakeInventory("Grab8",1)
		TNT1 A 0 A_TakeInventory("IGrab1",1)
		TNT1 A 0 A_TakeInventory("IGrab2",1)
		TNT1 A 0 A_TakeInventory("IGrab3",1)
		TNT1 A 0 A_TakeInventory("IGrab4",1)
		TNT1 A 0 A_TakeInventory("IGrab5",1)
		TNT1 A 0 A_TakeInventory("IGrab6",1)
		TNT1 A 0 A_TakeInventory("IGrab7",1)
		TNT1 A 0 A_TakeInventory("IGrab8",1)
		TNT1 A 0 A_TakeInventory("FGrab1",1)
		TNT1 A 0 A_TakeInventory("FGrab2",1)
		TNT1 A 0 A_TakeInventory("FGrab3",1)
		TNT1 A 0 A_TakeInventory("FGrab4",1)
		TNT1 A 0 A_TakeInventory("FGrab5",1)
		TNT1 A 0 A_TakeInventory("FGrab6",1)
		TNT1 A 0 A_TakeInventory("FGrab7",1)
		TNT1 A 0 A_TakeInventory("FGrab8",1)
		TNT1 A 0 A_TakeInventory("GrabbedBarrel",1)
		TNT1 A 0 A_TakeInventory("GrabbedIceBarrel",1)
		TNT1 A 0 A_TakeInventory("GrabbedFlameBarrel",1)
		TNT1 A 2 
		goto GoingToReady
		
//Flashes
	FlashBarrelKicking:
		BAIE A 0 A_JumpIfInventory("GrabbedIceBarrel", 1, 3)
		BAFE A 0 A_JumpIfInventory("GrabbedFlameBarrel", 1, 2)
		BANE A 0
		"####" IJKLMNOONMLKJI 1 A_DoPBWeaponAction
		TNT1 A 0 A_JumpIfInventory("GrabbedBarrel", 1, "IdleBarrel")
		TNT1 A 0 A_JumpIfInventory("GrabbedIceBarrel", 1, "IdleIceBarrel")
		TNT1 A 0 A_JumpIfInventory("GrabbedFlameBarrel", 1, "IdleFlameBarrel")
		Stop
	FLASHBarrelPUNCHING: 
		BAIQ I 0 A_JumpIfInventory("GrabbedIceBarrel", 1, 3)
		BAFQ I 0 A_JumpIfInventory("GrabbedFlameBarrel", 1, 2)
		BANQ I 0
		"####" I 1 A_DoPBWeaponAction
		"####" J 1 A_DoPBWeaponAction
		"####" K 1 A_DoPBWeaponAction
		"####" L 1 A_DoPBWeaponAction
		"####" M 6 A_DoPBWeaponAction
		"####" L 1 A_DoPBWeaponAction
		"####" K 1 A_DoPBWeaponAction
		"####" J 1 A_DoPBWeaponAction
		"####" I 1 A_DoPBWeaponAction
		Stop
	FlashBarrelAirKicking:
		BAIE A 0 A_JumpIfInventory("GrabbedIceBarrel", 1, 3)
		BAFE A 0 A_JumpIfInventory("GrabbedFlameBarrel", 1, 2)
		BANE A 0
		"####" IJKLMNOOOOONMLKJI 1 A_DoPBWeaponAction
		TNT1 A 0 A_JumpIfInventory("GrabbedBarrel", 1, "IdleBarrel")
		TNT1 A 0 A_JumpIfInventory("GrabbedIceBarrel", 1, "IdleIceBarrel")
		TNT1 A 0 A_JumpIfInventory("GrabbedFlameBarrel", 1, "IdleFlameBarrel")
		Stop
	FlashBarrelSlideKicking:
		BAIE A 0 A_JumpIfInventory("GrabbedIceBarrel", 1, 3)
		BAFE A 0 A_JumpIfInventory("GrabbedFlameBarrel", 1, 2)
		BANE A 0
		"####" IJKLMNOOOOO 1 A_DoPBWeaponAction
		"####" OOOOOOOOOOOOOOO 1 A_DoPBWeaponAction
		TNT1 A 0 A_JumpIfInventory("GrabbedBarrel", 1, "IdleBarrel")
		TNT1 A 0 A_JumpIfInventory("GrabbedIceBarrel", 1, "IdleIceBarrel")
		TNT1 A 0 A_JumpIfInventory("GrabbedFlameBarrel", 1, "IdleFlameBarrel")
		Stop
	FlashBarrelSlideKickingStop:
		BAIE A 0 A_JumpIfInventory("GrabbedIceBarrel", 1, 3)
		BAFE A 0 A_JumpIfInventory("GrabbedFlameBarrel", 1, 2)
		BANE A 0
		"####" ONMLKJI 1 A_DoPBWeaponAction
		TNT1 A 0 A_JumpIfInventory("GrabbedBarrel", 1, "IdleBarrel")
		TNT1 A 0 A_JumpIfInventory("GrabbedIceBarrel", 1, "IdleIceBarrel")
		TNT1 A 0 A_JumpIfInventory("GrabbedFlameBarrel", 1, "IdleFlameBarrel")
		Stop
	
	
	
		
	Steady:
	TNT1 A 1
	TNT1 A 0 A_JumpIfInventory("GoFatality",1,"Steady")
	Goto GoingToReady
	
	// This portion of the class will expand as we add executions
	// ZScript Functions (currently in BaseWeapon.zc) will handle to execution logic and set the according state)
	
		Execution_Zombieman1_Overlay1:
			KIC5 ABCDEFGH 1
			KIC5 IJKLM 1
			Stop
		Execution_Zombieman1:
			TNT1 A 0  {
				A_SpawnItemEx("PB_Zombieman_Execution_1", 32, 0,0,0,0,0,0,SXF_NOCHECKPOSITION);
				A_SetPitch(0, SPF_INTERPOLATE);
				A_ZoomFactor(1.1);
			}
				
			
			// Frame 1: 5 Ticks
			TNT1 A 0 A_StartSound("weapons/ultrwhoosh", CHAN_AUTO)
			P1N0 AB 1 {
				A_SetPitch(pitch-3, SPF_INTERPOLATE);
				A_SetRoll(roll+2, SPF_INTERPOLATE);
				A_SetAngle(angle-2);
			}
			P1N0 CD 1 { 
				A_SetRoll(roll+2, SPF_INTERPOLATE);
				A_SetAngle(angle-2);
			}
			P1N0 E 1 {
				A_SetRoll(roll-4, SPF_INTERPOLATE);
				A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
				A_StartSound("player/cyborg/fist", CHAN_AUTO);
				A_SetAngle(angle+9);
				A_SetPitch(pitch-2, SPF_INTERPOLATE);
			}
			
			// Frame 2: 12 Ticks
			P2NO FGHIJKLMOP 1 {
				A_SetRoll(roll-1,SPF_INTERPOLATE);
				A_SetAngle(angle+2);
				A_SetPitch(pitch+1, SPF_INTERPOLATE);
			}
			TNT1 A 0 A_StartSound("weapons/ultrwhoosh", CHAN_AUTO)
			P1NK FG 1 {
				A_SetRoll(roll+5,SPF_INTERPOLATE);
				A_SetPitch(pitch+2, SPF_INTERPOLATE);
				A_SetAngle(angle-5);
				A_SetPitch(pitch-15, SPF_INTERPOLATE);
			}
			
			// Frame 3: 15 Ticks
			TNT1 A 0 { 
				A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
				A_StartSound("misc/xdeath3", CHAN_AUTO);
				A_StartSound("player/cyborg/fist", CHAN_AUTO);
			}
			P2NK HIJKLMNOPQRSTUV 1 {
				A_SetRoll(roll+2);
				A_SetAngle(angle-5);
				A_SetPitch(pitch+2);
			}
			
			
			//Frame 4: 8
			TNT1 A 0 {
				A_Overlay(-9,"Execution_Zombieman1_Overlay1");
				A_SetRoll(0,SPF_INTERPOLATE);
				A_StartSound("KICK", CHAN_AUTO );
				A_OverlayFlags(-9,PSPF_PLAYERTRANSLATED, true);
			}
			P6NA ABCDE 1 { 
				A_SetRoll(roll-1,SPF_INTERPOLATE);
				A_SetPitch(pitch+4);
				A_SetAngle(angle+10);
			}
			P6NA FGH 1 {
				A_SetPitch(pitch-10);
				A_SetRoll(roll-5);
				A_SetAngle(angle+4);
			}
			TNT1 A 0 { 
				A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
				A_StartSound("player/cyborg/fist", CHAN_AUTO);
				
			}
			P6NA IJKLM 1 A_SetRoll(roll+2,SPF_INTERPOLATE)
			
			
			
			
			
			TNT1 A 0 {
				PB_UnsetPlayerExecutionProperties();
				A_SetRoll(0, SPF_INTERPOLATE);
				A_SetPitch(0, SPF_INTERPOLATE);
				A_ZoomFactor(1.0);
				A_GiveInventory("Stimpack", 2);
				A_OverlayFlags(-9,PSPF_PLAYERTRANSLATED, false);
			}
			Goto GoingToReady2
			
			Execution_Zombieman2_Overlay1:
				//Frame 3: 6 ticks
				KIC2 ABCDEE 1
				//Frame 4: 12 ticks
				KIC2 E 1 OffSet(-1,33)
				KIC2 E 1 OffSet(-2,34)
				KIC2 E 1 OffSet(-3,35)
				KIC2 E 1 OffSet(-4,36)
				KIC2 E 1 OffSet(-2,34)
				KIC2 E 1 OffSet(0,32)
				KIC2 E 1 OffSet(1,33)
				KIC2 E 1 OffSet(2,34)
				KIC2 E 1 OffSet(3,35)
				KIC2 E 1 OffSet(4,36)
				KIC2 E 1 OffSet(2,34)
				KIC2 E 1 OffSet(0,32)
				
				//Frame 5: 7 ticks
				KIC2 FGHIJKL 1
				Stop
			Execution_Zombieman2:
				TNT1 A 0  {
					A_SpawnItemEx("PB_Zombieman_Execution_2", 32, 0,0,0,0,0,0,SXF_NOCHECKPOSITION);
					A_SetPitch(0, SPF_INTERPOLATE);
					A_ZoomFactor(1.3);
				}
				
				//Frame 1: 5 ticks
				CL1M ABCDE 1 {
					A_SetPitch(pitch-3);
					A_SetRoll(roll+1);
				}
				TNT1 A 0 A_ZoomFactor(1.45)
				
				
				//Frame 2: 6 ticks
				CL1M FGFEFG 1 {
					A_SetPitch(pitch+4);
					A_SetRoll(roll-2);
				}
				TNT1 A 0 A_ZoomFactor(1.75, ZOOM_INSTANT)
				
				//Frame 3: 6 ticks
				TNT1 A 0 {
					A_Overlay(-9,"Execution_Zombieman2_Overlay1");
					A_StartSound("KICK", CHAN_AUTO );
					A_OverlayFlags(-9,PSPF_PLAYERTRANSLATED, true);
				}
				CL1M HIJJJJ 1 {
					A_SetPitch(pitch+1, SPF_INTERPOLATE);
					A_SetRoll(roll-1,SPF_INTERPOLATE);
				}
				TNT1 A 0 {
					A_ZoomFactor(1.5, ZOOM_INSTANT);
					A_SetPitch(pitch-2, SPF_INTERPOLATE);
					
					}
				
				//Frame 4:  12 ticks
				TNT1 A 0 A_StartSound("gore/tension", CHAN_AUTO)
				CL1M J 1 OffSet(1,33) A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
				CL1M J 1 OffSet(2,34) A_ZoomFactor(1.64, ZOOM_INSTANT)
				CL1M J 1 OffSet(3,35) A_ZoomFactor(1.62, ZOOM_INSTANT)
				CL1M J 1 OffSet(4,36) A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
				CL1M J 1 OffSet(2,34) A_ZoomFactor(1.6, ZOOM_INSTANT)
				CL1M J 1 OffSet(0,32) A_ZoomFactor(1.58, ZOOM_INSTANT)
				CL1M J 1 OffSet(-1,33) A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
				CL1M J 1 OffSet(-2,34) A_ZoomFactor(1.56, ZOOM_INSTANT)
				CL1M J 1 OffSet(-3,35) A_ZoomFactor(1.54, ZOOM_INSTANT)
				CL1M J 1 OffSet(-4,36) A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
				1L1M J 1 OffSet(-2,34) A_ZoomFactor(1.5, ZOOM_INSTANT)
				1L1M J 1 OffSet(0,32) A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
				TNT1 A 0 A_ZoomFactor(1.2)
				
				//Frame 5: 
				TNT1 A 0 A_StartSound("gore/break", CHAN_AUTO)
				TNT1 A 0 A_SetRoll(roll+20)
				1L1M KKLL 1 A_SetPitch(pitch-10, SPF_INTERPOLATE)
				TNT1 A 5 {
					A_SetPitch(pitch+15, SPF_INTERPOLATE);
					A_SetRoll(roll-12,SPF_INTERPOLATE);
				}
				TNT1 A 2
				TNT1 A 0 {
					PB_UnsetPlayerExecutionProperties();
					A_SetRoll(0, SPF_INTERPOLATE);
					A_SetPitch(0, SPF_INTERPOLATE);
					A_ZoomFactor(1.0);
					A_GiveInventory("Stimpack", 2);
					A_OverlayFlags(-9,PSPF_PLAYERTRANSLATED, false);
				}
				Goto GoingToReady2
				
			Execution_Zombieman3_Overlay1:
				KIC4 ABCDEFGHIIIIJKLM 1
				Stop
			Execution_Zombieman3:
				TNT1 A 0  {
					A_SpawnItemEx("PB_Zombieman_Execution_3", 32, 0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
					A_SetPitch(0, SPF_INTERPOLATE);
					A_ZoomFactor(1.35);
				}
				// Frame 1: 12 ticks
				TNT1 A 0 A_StartSound("weapons/ultrwhoosh", CHAN_AUTO)
				THRF ABCDEF 1 {
					A_SetRoll(roll-6);
					A_Setpitch(pitch+2);
					A_SetAngle(angle+4);
				}
				TNT1 A 6 {
					A_SetRoll(roll+36,SPF_INTERPOLATE);
					A_SetAngle(angle-24);
				}
				
				// Frame 2: 4 ticks
				TNT1 AA 2 A_Recoil(-2)
				TNT1 A 0 A_Stop
				
				// Frame 3: 7 ticks
				TNT1 A 0 {
					A_Overlay(-9,"Execution_Zombieman3_Overlay1");
					A_OverlayFlags(-9,PSPF_PLAYERTRANSLATED, true);
					A_StartSound("KICK", CHAN_AUTO );
					A_ZoomFactor(1.85, ZOOM_INSTANT);
				}
				P5NA ABCDEFG 1 {
					A_SetRoll(roll+10);
					A_SetAngle(angle-1);
					
				}
				TNT1 A 0 {
					A_ZoomFactor(2.2, ZOOM_INSTANT);
					A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
					A_SetPitch(pitch-2);
				}
				P5NA HH 1 {
					A_SetPitch(pitch-4);
					A_SetAngle(angle+3);
				}
				TNT1 A 0 A_ZoomFactor(1.48)
				// Frame 4: 7 ticks
				P5NA HIJKLMN 1 A_SetRoll(roll-10)
				
				TNT1 A 0 {
					PB_UnsetPlayerExecutionProperties();
					A_SetRoll(0, SPF_INTERPOLATE);
					A_SetPitch(0, SPF_INTERPOLATE);
					A_ZoomFactor(1.0);
					A_GiveInventory("Stimpack", 2);
					A_OverlayFlags(-9,PSPF_PLAYERTRANSLATED, false);
				}
				Goto GoingToReady2
				
			Execution_Zombieman4_Overlay1:
				CL1M CBA 1
				Stop
			Execution_Zombieman4_Overlay2:
				P5NA ABCDEFGHIJKLMN 1
				Stop
			Execution_Zombieman4:
				TNT1 A 0  {
					A_SetAngle(angle-180);
					A_SpawnItemEx("PB_Zombieman_Execution_4", 8, 4,-52,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
					A_SetPitch(50, SPF_INTERPOLATE);
					A_ZoomFactor(2.25,ZOOM_INSTANT);
					A_StartSound("player/cyborg/fist", CHAN_AUTO);
					A_Overlay(9,"Execution_Zombieman4_Overlay1");
					A_OverlayFlags(PSP_WEAPON,PSPF_PLAYERTRANSLATED, true);
				}
				// Frame 1: 12 ticks
				TNT1 A 0 A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
				SLDK ABCDE 1 {
					A_SetPitch(pitch+6);
					ThrustThingZ(0,25, 1,0);
					A_SetRoll(roll-4);
					A_SetAngle(angle-2);
				}
				SLDK FGHI 1 A_SetRoll(roll+5)
				
				TNT1 A 0 {
					A_StartSound("NECK_BRK", CHAN_AUTO );
					A_StartSound("BODYF", CHAN_AUTO );
				}
				TNT1 A 0 A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
				// Frame 1: 8 ticks
				SLDK O 1
				TNT1 A 0 A_ZoomFactor(2.15)
				SLDK P 1 {
					A_SetPitch(pitch-2, SPF_INTERPOLATE);
					A_SetAngle(angle-1);
				}
				SLDK Q 1 {
					A_SetPitch(pitch-2, SPF_INTERPOLATE);
					A_SetAngle(angle-1);
				}
				TNT1 A 0 A_ZoomFactor(2.0)
				SLDK R 1 {
					A_SetPitch(pitch-2, SPF_INTERPOLATE);
					A_SetAngle(angle-1);
				}
				SLDK S 1 {
					A_SetPitch(pitch-2, SPF_INTERPOLATE);
					A_SetAngle(angle-1);
				}
				TNT1 A 0 A_ZoomFactor(1.8)
				SLDK T 1 {
					A_SetPitch(pitch-4, SPF_INTERPOLATE);
				}
				SLDK U 1 {
					A_SetPitch(pitch-4, SPF_INTERPOLATE);
				}
				TNT1 A 0 A_ZoomFactor(1.6)
				
				// 12
				TNT1 A 5 Offset(0,32)
				TNT1 A 0 A_ZoomFactor(1.86)
				TNT1 A 0 A_Overlay(9,"Execution_Zombieman4_Overlay2")
				TNT1 A 0 A_SetPitch(pitch-3)
				KIC2 ABCDEFG 1 {
					A_SetRoll(roll-10);
					A_SetAngle(angle+3);
				}
				TNT1 A 0 {
					A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
					A_SpawnItemEx("PB_ZombiemanHeadExplode", 15, 0, 25);
					A_SpawnItemEx("BigBloodSpot", 15, 0, 25);
					
				}
				KIC2 HHHHH 1 {
					A_SetPitch(pitch+2);
					A_SetAngle(angle-1);
				}
				//5
				KIC2 HIJKL 1 A_SetRoll(roll+5)
				
				TNT1 AAAAAAAA 1 A_SetPitch(pitch-10, SPF_INTERPOLATE)
				
				
				TNT1 A 0 {
					PB_UnsetPlayerExecutionProperties();
					A_SetRoll(0, SPF_INTERPOLATE);
					A_SetPitch(0, SPF_INTERPOLATE);
					A_ZoomFactor(1.0);
					A_GiveInventory("Stimpack", 2);
					A_OverlayFlags(PSP_WEAPON,PSPF_PLAYERTRANSLATED, false);
				}
				Goto GoingToReady2
				
			Execution_Zombieman5:
				TNT1 A 0  {
					A_SpawnItemEx("PB_Zombieman_Execution_5", 38, 0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
					A_SetPitch(0, SPF_INTERPOLATE);
					A_ZoomFactor(1.1);
				}
				
				// Frame 1: 5 Ticks
				TNT1 A 0 A_StartSound("weapons/ultrwhoosh", CHAN_AUTO)
				PBFT A 1 {
					A_ZoomFactor(1.25, ZOOM_INSTANT);
					A_SetPitch(pitch+2);
					A_SetAngle(angle+1);
					A_SetRoll(roll-5);
				}
				PBFT B 1 {
					A_ZoomFactor(1.35, ZOOM_INSTANT);
					A_SetPitch(pitch+2);
					A_SetAngle(angle+2);
					A_SetRoll(roll-5);
				}
				PBFT C 1 {
					A_ZoomFactor(1.45, ZOOM_INSTANT);
					A_SetPitch(pitch+2);
					A_SetAngle(angle+2);
					A_SetRoll(roll-5);
				}
				PBFT D 1 {
					A_ZoomFactor(1.55, ZOOM_INSTANT);
					A_SetPitch(pitch+2);
					A_SetAngle(angle+3);
					A_SetRoll(roll-5);
				}
				PBFT E 1 {
					A_ZoomFactor(1.65, ZOOM_INSTANT);
					A_SetPitch(pitch+2);
					A_SetAngle(angle-8);
					A_SetRoll(roll-5);
				}
				TNT1 A 0 {
					A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
					A_StartSound("NECK_BRK", CHAN_AUTO);
					A_StartSound("EYEPULL", CHAN_AUTO);
				}
				// Frame 2: 24 ticks
				TNT1 A 0 A_StartSound("gore/tension", CHAN_BODY)
				PBFT EFGH 1 {
					A_ZoomFactor(1.67, ZOOM_INSTANT);
					A_SetPitch(pitch-2);
					A_SetAngle(angle-1);
					A_SetRoll(roll+2);
				}
				PBFT EFGH 1 {
					A_ZoomFactor(1.68, ZOOM_INSTANT);
					A_SetPitch(pitch+2);
					A_SetAngle(angle+1);
					A_SetRoll(roll-2);
				}
				PBFT IJKL 1 {
					A_ZoomFactor(1.69, ZOOM_INSTANT);
					A_SetPitch(pitch-2);
					A_SetAngle(angle-1);
					A_SetRoll(roll+2);
					A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
				}
				PBFT MNOP 1 {
					A_ZoomFactor(1.70, ZOOM_INSTANT);
					A_SetPitch(pitch+2);
					A_SetAngle(angle+1);
					A_SetRoll(roll-2);
				}
				PBFT QRST 1 {
					A_ZoomFactor(1.71, ZOOM_INSTANT);
					A_SetPitch(pitch-2);
					A_SetAngle(angle-1);
					A_SetRoll(roll+2);
				}
				TNT1 A 0 {
					A_StartSound("NeckSnap", CHAN_AUTO);
				}
				PBFT UVWXY 1 {
					A_ZoomFactor(1.72, ZOOM_INSTANT);
					A_SetPitch(pitch+2);
					A_SetAngle(angle+1);
					A_SetRoll(roll-2);
				}
				
				
				PBFT Z 1 {
					A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
					A_ZoomFactor(1.8, ZOOM_INSTANT);
					A_StopSound(CHAN_BODY);
					A_StartSound("misc/gibbed", CHAN_AUTO);
				}
					
				PBf1 A 1 {
					A_SetPitch(pitch+6);
					A_SetAngle(angle-8);
					A_SetRoll(roll+10);
				}
				PBf1 BCD 1 {
					A_SetPitch(pitch+3);
					A_SetAngle(angle-2);
					A_SetRoll(roll+8);
				}
				TNT1 A 0 A_ZoomFactor(1.2)
				TNT1 AA 1 A_SetPitch(pitch+1)
				TNT1 AA 1 
				TNT1 AAAAA 1 {
					A_SetPitch(pitch-4);
					A_SetAngle(angle+1);
					A_SetRoll(roll-9);
				}
					
				TNT1 A 0 {
					PB_UnsetPlayerExecutionProperties();
					A_SetRoll(0, SPF_INTERPOLATE);
					A_SetPitch(0, SPF_INTERPOLATE);
					A_ZoomFactor(1.0);
					A_GiveInventory("Stimpack", 2);
				}
				Goto GoingToReady2
				
			Execution_Zombieman6_Overlay1:
				KIC4 ABCDEFGHIJKLM 1
				Stop
			Execution_Zombieman6:
				TNT1 A 0  {
					A_SpawnItemEx("PB_Zombieman_Execution_6", 41, 0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
					A_SetPitch(0, SPF_INTERPOLATE);
					A_ZoomFactor(1.2);
					A_Overlay(-9, "Execution_Zombieman6_Overlay1");
					A_OverlayFlags(-9,PSPF_PLAYERTRANSLATED, true);
				}
				// 7
				P5NA ABCDEFG 1 {
					A_SetPitch(pitch+6);
					A_SetAngle(angle-1);
					A_SetRoll(roll+5);
				}
				
				TNT1 A 0 {
					A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
					A_StartSound("NeckSnap", CHAN_AUTO);
				}
				// 14
				TNT1 A 5 A_Zoomfactor(1.3, ZOOM_INSTANT)
				TNT1 AAAAA 1 {
					A_SetAngle(angle+1);
					A_SetPitch(pitch-2);
					A_SetRoll(roll-7);
				}
				TNT1 A 0 A_Zoomfactor(1.4, ZOOM_INSTANT)
				TNT1 A 0 A_StartSound("weapons/fistwhoosh", CHAN_AUTO)
				TNT1 A 0 A_SetRoll(roll-12)
				G000 ABCD 1 {
					A_SetPitch(pitch-8);
					A_SetAngle(angle+3);
					A_SetRoll(roll-8);
				}
				TNT1 A 0 {
					A_Zoomfactor(1.6, ZOOM_INSTANT);
					A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
				}
				
				// 
				TNT1 A 0 {
					A_StartSound("gore/break", CHAN_AUTO);
					A_SetAngle(angle-6);
					A_SetPitch(pitch-6);
				}
				
				G000 EE 1 {
					A_SetPitch(pitch-10);
					A_SetAngle(angle-1);
					A_SetRoll(roll+9);
				}
				G000 F 1 {
					A_SetPitch(pitch-6);
					A_SetAngle(angle-1);
					A_SetRoll(roll+9);
					A_Zoomfactor(1.5, ZOOM_INSTANT);
				}
				G000 G 1 {
					A_SetPitch(pitch-4);
					A_SetAngle(angle-1);
					A_SetRoll(roll+9);
					A_Zoomfactor(1.44, ZOOM_INSTANT);
				}
				G000 H 1 {
					A_SetPitch(pitch-4);
					A_SetAngle(angle-1);
					A_SetRoll(roll+9);
					A_Zoomfactor(1.32, ZOOM_INSTANT);
				}
					
				G000 I 1 {
					A_SetPitch(pitch-4);
					A_SetRoll(roll+9);
					A_Zoomfactor(1.25, ZOOM_INSTANT);
				}
				G000 I 6
				
				TNT1 A 0 {
					PB_UnsetPlayerExecutionProperties();
					A_SetRoll(0, SPF_INTERPOLATE);
					A_SetPitch(0, SPF_INTERPOLATE);
					A_ZoomFactor(1.0);
					A_GiveInventory("Stimpack", 2);
					A_OverlayFlags(-9,PSPF_PLAYERTRANSLATED, false);
				}
				Goto GoingToReady2
				
		//Imp
		Execution_Imp1_Overlay1:
				P5NA ABCDEFG 1
				Stop
		Execution_Imp1:
				TNT1 A 0  {
					A_SpawnItemEx("PB_Imp_Execution_1", 41, 0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
					A_SetPitch(0, SPF_INTERPOLATE);
					A_ZoomFactor(1.1, ZOOM_INSTANT);
					A_StartSound("KICK", CHAN_AUTO);
					A_Overlay(9,"Execution_Imp1_Overlay1");
					A_OverlayFlags(PSP_WEAPON,PSPF_PLAYERTRANSLATED, true);
				}
				
				// Frame 1: 5 Ticks
				AKCK ABCDE 1 {
					A_SetPitch(pitch-5.0);
					A_SetAngle(angle+2);
					A_SetRoll(roll-9.0);
				}
				
				// Frame 2: 14 Ticks
				AKCK E 1 Offset(-4,32) 
				AKCK E 1 Offset(-8,32) 
				AKCK E 1 Offset(-12,32) {
					A_SetPitch(pitch-12.0);
					A_SetAngle(angle+9.0);
					A_SetRoll(roll-19.0);
					A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
					A_StartSound("execution/impact", CHAN_AUTO);
					A_ZoomFactor(1.25, ZOOM_INSTANT);
				}
				
				AKCK E 1 Offset(-8,32) {
					A_SetPitch(pitch+6.0);
					A_SetAngle(angle-2.0);
					A_SetRoll(roll+5.0);
				}
				AKCK E 1 Offset(-4,32) {
					A_SetPitch(pitch+4.0);
					A_SetAngle(angle-2.0);
					A_SetRoll(roll+5.0);
				}
				
				AKCK E 1 Offset(0,32) {
					A_SetPitch(pitch+6.0);
					A_SetAngle(angle-4.0);
					A_SetRoll(roll+5.0);
					A_ZoomFactor(1.12, ZOOM_INSTANT);
				}
				AKCK DCBA 1 {
					A_SetPitch(pitch+7.0);
					A_SetAngle(angle-1);
					A_SetRoll(roll+1.0);
				}
				TNT1 AA 1 A_ZoomFactor(1.15, ZOOM_INSTANT)
				
				// Frame 3: 10 
				TNT1 A 0 {
					A_StartSound("weapons/ultrwhoosh", CHAN_AUTO);
					A_OverlayFlags(PSP_WEAPON,PSPF_PLAYERTRANSLATED, false);
				}
				TNT1 AAA 1 {
					A_SetAngle(angle+11);
					A_SetPitch(pitch-12);
					A_SetRoll(roll-6.0);
				}
				TNT1 AAAA 1 {
					A_SetAngle(angle-3);
					A_SetPitch(pitch+2);
					A_SetRoll(roll+4.0);
				}
				P1NK EFG 1 {
					A_ZoomFactor(1.42, ZOOM_INSTANT);
					A_SetAngle(angle-6);
					A_SetPitch(pitch+3);
					A_SetRoll(roll+8.0);
				}
				
				// Frame 4
				
				P2NK H 1 {
					A_StartSound("execution/impactHeavy", CHAN_AUTO);
					A_SetPitch(pitch+4);
					A_SetAngle(angle-20);
					A_SetRoll(roll+25.0);
					A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
				}
				
				P2NK IJKLMNO 1 {
					A_SetPitch(pitch+3);
					A_SetAngle(angle-2);
					A_SetRoll(roll+5.0);
				}
				
				
				P2NK PQR 1 {
					A_ZoomFactor(1.15, ZOOM_INSTANT);
					A_SetPitch(pitch-6);
					A_SetAngle(angle+6);
					A_SetRoll(roll-15);
				}
				TNT1 A 5
				
				
				
				TNT1 A 0 {
					PB_UnsetPlayerExecutionProperties();
					A_SetRoll(0, SPF_INTERPOLATE);
					A_SetPitch(0, SPF_INTERPOLATE);
					A_ZoomFactor(1.0);
					A_GiveInventory("Stimpack", 2);
				}
				Goto GoingToReady2
				
		Execution_Imp2:
				TNT1 A 0  {
					A_SpawnItemEx("PB_Imp_Execution_2", 41, 0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
					A_SetPitch(0, SPF_INTERPOLATE);
					A_ZoomFactor(1.2, ZOOM_INSTANT);
// 					A_OverlayFlags(PSP_WEAPON,PSPF_PLAYERTRANSLATED, true);
					A_StartSound("KNIFUP", CHAN_AUTO);
				}
				
				TNT1 A 0 A_SetPitch(pitch+19)
				
				// Frame 1: 9 Ticks
				TNT1 AAA 1 {
					A_SetRoll(roll-75);
					A_SetPitch(pitch-4);
					A_SetAngle(angle+9);
				}
				TNT1 A 0 {
					A_ZoomFactor(1.4, ZOOM_INSTANT);
					A_StartSound("KNIFSWNG", CHAN_AUTO);
				}
				MC3S ABCDEF 1 {
					A_SetRoll(roll+6);
					A_SetPitch(pitch+1);
					A_SetAngle(angle-4);
				}
				
				// Frame 2: 4 Ticks
				TNT1 A 0 A_StartSound("Machete/Yum", CHAN_AUTO)
				MC3S GHIJ 1 {
					A_SetRoll(roll+6);
					A_SetPitch(pitch+2);
					A_SetAngle(angle-6);
				}
				TNT1 A 0 {
					A_ZoomFactor(1.15, ZOOM_INSTANT);
					A_OverlayFlags(PSP_WEAPON,PSPF_PLAYERTRANSLATED, true);
					A_StartSound("KICK", CHAN_AUTO);
				}
				// Frame 3: 12 Ticks
				KIC4 ABCDE 1 {
					A_SetRoll(roll-3);
					A_SetPitch(pitch-1);
					A_SetAngle(angle+2);
				}
				TNT1 A 0 A_ZoomFactor(1.05, ZOOM_INSTANT)
				KIC4 FFFF 1 {
					A_SetPitch(pitch-3);
					A_SetAngle(angle+4);
				}
				TNT1 A 0 A_ZoomFactor(1.5, ZOOM_INSTANT)
				KIC4 GHI 1 {
					A_SetRoll(roll+6);
					A_SetPitch(pitch-3);
					A_SetAngle(angle-3);
				}
				TNT1 A 0 {
					A_StartSound("gore/heavyimpact", CHAN_AUTO);
					A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
				}
				TNT1 A 0 A_ZoomFactor(1.1)
				
				KIC4 JKLM 1
				TNT1 A 0 A_OverlayFlags(PSP_WEAPON,PSPF_PLAYERTRANSLATED, false)
				
				
				
				
				TNT1 A 0 {
					PB_UnsetPlayerExecutionProperties();
					A_SetRoll(0, SPF_INTERPOLATE);
					A_SetPitch(0, SPF_INTERPOLATE);
					A_ZoomFactor(1.0);
					A_GiveInventory("Stimpack", 2);
				}
				Goto GoingToReady2
		
		
			Execution_Imp3_Overlay1:
				G003 ABCDEFGHIJKLMNOP 1
				Stop
			
			Execution_Imp3_Overlay2:
				P6NA CDEFGGGG 1
				Stop
		
		Execution_Imp3:
				TNT1 A 0  {
					A_SetAngle(angle-180);
					A_SpawnItemEx("PB_Imp_Execution_3", 8, 4,-52,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
					A_SetPitch(35);
					A_ZoomFactor(2.6,ZOOM_INSTANT);
					A_StartSound("player/cyborg/fist", CHAN_AUTO);
					A_Overlay(9,"Execution_Imp3_Overlay1");
					A_OverlayFlags(PSP_WEAPON,PSPF_PLAYERTRANSLATED, true);
				}
				// Frame 1: 12 ticks
				TNT1 A 0 A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
				SLDK ABCDE 1 {
					A_SetPitch(pitch+6);
					ThrustThingZ(0,25, 1,0);
					A_SetRoll(roll-4);
					//A_SetAngle(angle+2);
				}
				SLDK FGHI 1 { 	
					A_SetRoll(roll+5);
					A_SetPitch(pitch+9);
				}
				
				TNT1 A 0 {
					A_ZoomFactor(2.5,ZOOM_INSTANT);
					A_StartSound("NECK_BRK", CHAN_AUTO );
					A_StartSound("BODYF", CHAN_AUTO );
				}
				TNT1 A 0 A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
				// Frame 2: 8 ticks
				SLDK O 1
				TNT1 A 0 A_ZoomFactor(2.25, ZOOM_INSTANT)
				SLDK P 1 {
					A_SetPitch(pitch-3);
					//A_SetAngle(angle-1);
				}
				SLDK Q 1 {
					A_SetPitch(pitch-3);
					//A_SetAngle(angle-1);
				}
				TNT1 A 0 A_ZoomFactor(2.10, ZOOM_INSTANT)
				SLDK R 1 {
					A_SetPitch(pitch-4);
					//A_SetAngle(angle-1);
				}
				SLDK S 1 {
					A_SetPitch(pitch-4);
					//A_SetAngle(angle-1);
				}
				TNT1 A 0 A_ZoomFactor(1.8, ZOOM_INSTANT)
				SLDK T 1 {
					A_SetPitch(pitch-5);
				}
				SLDK U 1 {
					A_SetPitch(pitch-5);
				}
				TNT1 A 0 A_ZoomFactor(1.6, ZOOM_INSTANT)
				
				// Frame 3: 
				TNT1 A 1 Offset(0,32) {
					A_OverlayFlags(PSP_WEAPON,PSPF_PLAYERTRANSLATED, true);
					A_ZoomFactor(1.86);
				}
				
				
				// Frame 3: 8
				PUNS JIH 1
				TNT1 A 0 A_StartSound("weapons/fistwhoosh", CHAN_AUTO)
				P1NN ABC 1 {
					A_SetAngle(angle+3);
					A_SetPitch(pitch-2);
				}
				TNT1 A 0 A_StartSound("execution/impact", CHAN_AUTO)
				P2NN DE 1 {
					A_SetAngle(angle+2);
					A_SetPitch(pitch+4);
				}
				
				TNT1 AAAA 1 {
					A_SetAngle(angle-1);
					A_SetPitch(pitch-3);
				}
				
				// Frame 4: 6
				TNT1 A 0 A_StartSound("weapons/ultrwhoosh", CHAN_AUTO)
				P2NK ABCD 1 {
					A_SetAngle(angle-1);
					A_SetPitch(pitch-4);
					A_SetRoll(roll-2);
				}
				P2NK EF 1 {
					A_SetAngle(angle+4);
					A_SetPitch(pitch+6);
					A_SetRoll(roll-1);
				}
				
				TNT1 A 0 A_StartSound("execution/impact", CHAN_AUTO)
				// Frame 5: 13
				P2NK GHIJ 1 {
					A_SetAngle(angle-3);
					A_SetPitch(pitch+3);
					A_SetRoll(roll+4);
				}
				P2NK KLMNO 1 {
					A_SetAngle(angle-3);
					A_SetPitch(pitch+2);
					A_SetRoll(roll+2);
				}
				
				P2NK P 1 {
					A_SetAngle(angle+2);
					A_SetPitch(pitch-2);
					A_SetRoll(roll-9);
					A_Zoomfactor(1.7, ZOOM_INSTANT);
				}
				P2NK Q 1 {
					A_SetAngle(angle+2);
					A_SetPitch(pitch-2);
					A_SetRoll(roll-9);
					A_Zoomfactor(1.6, ZOOM_INSTANT);
				}
				P2NK R 1 {
					A_SetAngle(angle+2);
					A_SetPitch(pitch-2);
					A_SetRoll(roll-9);
					A_Zoomfactor(1.5, ZOOM_INSTANT);
				}
				P2NK S 1 {
					A_SetAngle(angle+2);
					A_SetPitch(pitch-2);
					A_SetRoll(roll-9);
					A_Zoomfactor(1.4, ZOOM_INSTANT);
				}
				
				TNT1 A 0 {
					A_Overlay(9,"Execution_Imp3_Overlay2");
					A_OverlayFlags(PSP_WEAPON,PSPF_PLAYERTRANSLATED, true);
					
				}
				
				// Frame 6: 13
				TNT1 A 0 {
					A_SetPitch(pitch-3);
					A_StartSound("KICK", CHAN_AUTO);
				}
				KIC1 A 1 {
					A_SetPitch(pitch-2);
					A_SetRoll(roll-1);
					A_Zoomfactor(1.35, ZOOM_INSTANT);
				}
				KIC1 B 1 {
					A_SetPitch(pitch-2);
					A_SetRoll(roll-1);
					A_Zoomfactor(1.3, ZOOM_INSTANT);
				}
				KIC1 C 1 {
					A_SetPitch(pitch-4);
					A_SetRoll(roll-2);
					A_Zoomfactor(1.25, ZOOM_INSTANT);
				}
				KIC1 D 1 {
					A_SetPitch(pitch-4);
					A_SetRoll(roll-2);
					A_Zoomfactor(1.2, ZOOM_INSTANT);
				}
				KIC1 EE 1 A_Zoomfactor(1.1, ZOOM_INSTANT)
				KIC1 E 1 {
					A_SetPitch(pitch+5);
					A_SetAngle(angle+3);
					A_SetRoll(roll-3);
				}
				
				TNT1 A 0 A_Zoomfactor(1.8)
				KIC1 FG 1 {
					A_SetPitch(pitch+5);
					A_SetAngle(angle+3);
					A_SetRoll(roll-3);
				}
				
				TNT1 A 0 {
					A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0);
					A_SpawnItemEx("BigBloodSpot", 15, 0, 25);
					
				}
				TNT1 A 0 A_StartSound("gore/heavyimpact", CHAN_AUTO)
				KIC1 HHHHHHHH 1
				TNT1 A 0 A_Zoomfactor(1.2)
				
				
				// Frame 7: 13
				KIC1 HIJKL 1 {
					A_SetPitch(pitch-1);
					A_SetRoll(roll+1);
				}
				TNT1 AAAAAAAA 1 A_SetPitch(pitch-10, SPF_INTERPOLATE)
				
				TNT1 A 0 {
					PB_UnsetPlayerExecutionProperties();
					A_SetRoll(0, SPF_INTERPOLATE);
					A_SetPitch(0, SPF_INTERPOLATE);
					A_ZoomFactor(1.0);
					A_GiveInventory("Stimpack", 2);
					A_OverlayFlags(PSP_WEAPON,PSPF_PLAYERTRANSLATED, false);
				}
				Goto GoingToReady2
				
			
		Execution_ShotgunGuy1:
			TNT1 A 0  {
				A_SpawnItemEx("PB_ShotgunGuy_Execution_1", 32, 0,0,0,0,0,0,SXF_NOCHECKPOSITION);
				A_SetPitch(0, SPF_INTERPOLATE);
				A_ZoomFactor(1.1);
			}
			Goto Execution_Zombieman1+2
		Execution_ShotgunGuy2:
			TNT1 A 0  {
				A_SpawnItemEx("PB_ShotgunGuy_Execution_2", 32, 0,0,0,0,0,0,SXF_NOCHECKPOSITION);
				A_SetPitch(0, SPF_INTERPOLATE);
				A_ZoomFactor(1.3);
			}
			Goto Execution_Zombieman2+2
		Execution_ShotgunGuy3:
			TNT1 A 0  {
				A_SpawnItemEx("PB_ShotgunGuy_Execution_3", 32, 0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
				A_SetPitch(0, SPF_INTERPOLATE);
				A_ZoomFactor(1.35);
			}
			Goto Execution_Zombieman3+2
		Execution_ShotgunGuy4:
			TNT1 A 0  {
				A_SetAngle(angle-180);
				A_SpawnItemEx("PB_ShotgunGuy_Execution_4", 8, 4,-52,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
				A_SetPitch(50, SPF_INTERPOLATE);
				A_ZoomFactor(2.25,ZOOM_INSTANT);
				A_StartSound("player/cyborg/fist", CHAN_AUTO);
				A_Overlay(9,"Execution_Zombieman4_Overlay1");
				A_OverlayFlags(PSP_WEAPON,PSPF_PLAYERTRANSLATED, true);
			}
			Goto Execution_Zombieman4+2
		Execution_ShotgunGuy5:
			TNT1 A 0  {
				A_SpawnItemEx("PB_ShotgunGuy_Execution_5", 32, 0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
				A_SetPitch(0, SPF_INTERPOLATE);
				A_ZoomFactor(1.35);
			}
			Goto Execution_Zombieman5+2
		Execution_ShotgunGuy6:
			TNT1 A 0  {
				A_SpawnItemEx("PB_ShotgunGuy_Execution_6", 41, 0,0,0,0,0,0,SXF_NOCHECKPOSITION|SXF_SETMASTER);
				A_SetPitch(0, SPF_INTERPOLATE);
				A_ZoomFactor(1.2);
				A_Overlay(-9, "Execution_Zombieman6_Overlay1");
				A_OverlayFlags(-9,PSPF_PLAYERTRANSLATED, true);
			}
			Goto Execution_Zombieman6+2
			
			
	}
}

Actor PB_DualWeapon : PB_Weapon
{
States
	{
	 ThrowMine:
	 ThrowGrenade:
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("ADSMode", 1)
		TNT1 A 0 A_TakeInventory("DoGrenade", 1)
		TNT1 A 0 A_TakeInventory("DoMine", 1)
		TNT1 A 0
		TNT1 A 0 A_Print("You can't throw right now!")
		Goto GoingToReady
	}
}
*/

ACTOR MagTG
{
	Projectile
	+BLOODLESSIMPACT
	+NOBLOCKMAP
	+DOOMBOUNCE
	+USEBOUNCESTATE
	+MOVEWITHSECTOR
	+NOTRIGGER
	+BOUNCEONWALLS
	+BOUNCEONACTORS
renderstyle Normal
}

Actor ECS
{
  Scale 0.1
    States
  {
  Spawn:
  TNT1 A 0
  Stop
  Disappear:
  TNT1 A 0
  Stop
  }
}