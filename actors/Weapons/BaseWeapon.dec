Actor UseEquipment: Inventory {Inventory.maxamount 1}
Actor ToggleEquipment: Inventory{Inventory.maxamount 1}

Actor FragGrenadeSelected : Inventory {inventory.maxamount 1}
Actor ProximityMineSelected : Inventory {inventory.maxamount 1}
Actor StunGrenadeSelected : Inventory {inventory.maxamount 1}
Actor LeechSelected : Inventory {inventory.maxamount 1}
Actor RevGunSelected : Inventory {inventory.maxamount 1}

Actor WW_FragGrenadeSelected : Inventory {inventory.maxamount 1}
Actor WW_ProximityMineSelected : Inventory {inventory.maxamount 1}
Actor WW_StunGrenadeSelected : Inventory {inventory.maxamount 1}
Actor WW_LeechSelected : Inventory {inventory.maxamount 1}
Actor WW_RevGunSelected : Inventory {inventory.maxamount 1}

Actor DualFiring: Inventory {Inventory.maxamount 1}
Actor DualFireReload: Inventory {Inventory.maxamount 2}

//Actions observed by the AI!
Actor PlayerIsThrowingAGrenade : Inventory {inventory.maxamount 1}
Actor CantWeaponSpecial : Inventory {inventory.maxamount 1}

Actor PB_Weapon : PB_WeaponBase
{

	Weapon.BobRangeX 0.3
	Weapon.BobRangeY 0.5
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 2.4
	Weapon.UpSound "none"
	Weapon.Kickback 100
	-WEAPON.MELEEWEAPON	

States
{
	Select:
		TNT1 A 1 A_Raise
		Wait
		
	Fire:
	Ready:
	SelectAnimation:
		Goto GoingToReady
	Deselect:
		TNT1 A 1 A_Lower
		Wait
		
		
	GoingToReady:
	SelectingAnimation:
		//TNT1 A 0 A_ClearOverlays(2)
		TNT1 A 0 A_TakeInventory("KeepLaserDeactivated",1)
//		TNT1 A 0 A_JumpIfInventory("ASGSelected", 1, "SelectingAnimationAutoSG")
//		TNT1 A 0 A_JumpIfInventory("CarbineSelected", 1, "TryToSelectDrum")
		TNT1 A 0 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_TakeInventory("Salute1", 1)
		TNT1 A 0 A_TakeInventory("Salute2", 1)
		TNT1 A 0 A_TakeInventory("Taunting",1)
		TNT1 A 0 A_TakeInventory("DoGrenade",1)
		TNT1 A 0 A_TakeInventory("IsRunning",1)
		TNT1 A 0 A_TakeInventory("Reloading",1)
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand")
		TNT1 A 0 A_Jump(255,"Ready4")
		TNT1 AAAA 1 A_Jump(255, "Ready3")
		Loop
	
	SelectFirstPersonLegs:
	    TNT1 A 0 A_StopSound(1)
		//TNT1 A 0 A_Overlay(10, "Flash")
		TNT1 A 0 A_TakeInventory("CantWeaponSpecial",1) //Fixes bug with Weapon Special Key no longer working when changing SGL grenade type or RL missile mode
		TNT1 A 0 A_TakeInventory("DualFireReload",2)
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand")
		TNT1 A 0 A_Overlay(-9, "LedgeGrabCheck")
		TNT1 A 0 A_Jump(255, "SelectContinue")
		Loop
		
	TryToSelectDrum:
		TNT1 A 0 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_TakeInventory("Salute1", 1)
		TNT1 A 0 A_TakeInventory("Salute2", 1)
		TNT1 A 0 A_TakeInventory("Taunting",1)
		TNT1 A 0 A_TakeInventory("DoGrenade",1)
		TNT1 A 0 A_TakeInventory("IsRunning",1)
		TNT1 A 0 A_TakeInventory("Reloading",1)
		TNT1 AAAA 1 A_Jump(255, "Ready3")
		TNT1 AAAA 1 A_Jump(255, "BeltReady")
		Loop
		
	SelectingAnimationAutoSG: //Is this state really needed anymore? This code is outdated and imo this should be removed. -JMartinez2098
		TNT1 A 0
		TNT1 A 0 A_TakeInventory("KeepLaserDeactivated",1)
		TNT1 A 0 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_TakeInventory("Salute1", 1)
		TNT1 A 0 A_TakeInventory("Salute2", 1)
		TNT1 A 0 A_TakeInventory("Taunting",1)
		TNT1 A 0 A_TakeInventory("DoGrenade",1)
		TNT1 A 0 A_TakeInventory("IsRunning",1)
		TNT1 A 0 A_TakeInventory("Reloading",1)
		TNT1 A 0 A_JumpIfInventory("AutoShotgunDrumMag", 1, 2)
		TNT1 AAAA 1 A_Jump(255, "Ready3")
		TNT1 AAAA 1 A_Jump(255, "DrumReady2")
		Loop
    
	GoingToReady2:
		TNT1 A 0 A_TakeInventory("KeepLaserDeactivated",1)
		TNT1 A 2 //A_JumpIfInventory("ASGSelected", 1, "GoingToReadyAutoSG")
		TNT1 A 0 //A_JumpIfInventory("CarbineSelected", 1, "TryToSelectDrum2")
		TNT1 A 0 //A_JumpIfInventory("EquipDeathDealer", 5, "GoingToReady2DeathDealer")
		TNT1 A 0 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_TakeInventory("Salute1", 1)
		TNT1 A 0 A_TakeInventory("Salute2", 1)
		TNT1 A 0 A_TakeInventory("Taunting",1)
		TNT1 A 0 A_TakeInventory("ToggleEquipment",1)
		TNT1 A 0 A_TakeInventory("Reloading",1)
		TNT1 A 0 A_JumpIfInventory("SawSelected", 1, "OnLoop")
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand")
		TNT1 AAAA 0 A_Jump(255, "SelectAnimation")
		TNT1 AAAA 1 A_Jump(255, "Ready")
		Loop
		
	TryToSelectDrum2: //Is this state really needed anymore? This code is outdated and imo this should be removed. -JMartinez2098
		TNT1 A 0 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_TakeInventory("Salute1", 1)
		TNT1 A 0 A_TakeInventory("Salute2", 1)
		TNT1 A 0 A_TakeInventory("Taunting",1)
		TNT1 A 0 A_TakeInventory("DoGrenade",1)
		TNT1 A 0 A_TakeInventory("Reloading",1)
		TNT1 A 0 A_JumpIfInventory("LMGAmmoBelt", 1, 5)
		TNT1 AAAA 1 A_Jump(255, "Ready")
		TNT1 AAAA 1 A_Jump(255, "BeltReadyUp")
		Loop
    
	GoingToReady2AutoSG: //Is this state really needed anymore? This code is outdated and imo this should be removed. -JMartinez2098
		TNT1 A 2
		TNT1 A 0 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_TakeInventory("Salute1", 1)
		TNT1 A 0 A_TakeInventory("Salute2", 1)
		TNT1 A 0 A_TakeInventory("Taunting",1)
		TNT1 A 0 A_TakeInventory("ToggleEquipment",1)
		TNT1 A 0 A_TakeInventory("Reloading",1)
		TNT1 A 0 A_JumpIfInventory("AutoShotgunDrumMag", 1, 2)
		TNT1 AAAA 1 A_Jump(255, "Ready")
		TNT1 AAAA 1 A_Jump(255, "DrumReady")
		Loop
		
	GoingToReady2DeathDealer: //Is this state really needed anymore? This code is outdated and imo this should be removed. -JMartinez2098
		TNT1 A 2
		TNT1 A 0 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_TakeInventory("Salute1", 1)
		TNT1 A 0 A_TakeInventory("Salute2", 1)
		TNT1 A 0 A_TakeInventory("Taunting",1)
		TNT1 A 0 A_TakeInventory("ToggleEquipment",1)
		TNT1 A 0 A_TakeInventory("Reloading",1)
		TNT1 A 0 //A_JumpIfInventory("EquipDeathDealer", 5, 2)
		TNT1 AAAA 1 A_Jump(255, "Ready")
		TNT1 AAAA 1 A_Jump(255, "DeathDealerReady")
		Loop	
		
	Steady:
		TNT1 A 1
		Goto GoingToReady
		
	//First Person Legs in Doom (because, you know, "I'm not original")
	FirstPersonLegsKickRight:
		//STGN A 0 A_JumpIfInventory("GreenBloodOnBoots",1,4)
	    //STBN A 0 A_JumpIfInventory("BlueBloodOnBoots",1,3)
	    //STRN A 0 A_JumpIfInventory("RedBloodOnBoots",1,2)
		STAN A 0
		"####" A 0
		"####" A 0 A_GiveInventory("KeepLaserDeactivated",1)
		"####" A 0 A_JumpIf(Height < 54, "FirstPersonLegsHide")
		"####" A 0 A_JumpIfInventory("FPSLegChecker", 1, 2)
		"####" O 1
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
		}
		Loop
		"####" P 1
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
		}
		Loop
	FirstPersonLegsKickLeft:
		//STGL A 0 A_JumpIfInventory("GreenBloodOnBoots",1,4)
	    //STBL A 0 A_JumpIfInventory("BlueBloodOnBoots",1,3)
	    //STRL A 0 A_JumpIfInventory("RedBloodOnBoots",1,2)
		STAL A 0
		"####" A 0
		"####" A 0 A_GiveInventory("KeepLaserDeactivated",1)
		"####" A 0 A_JumpIf(Height < 54, "FirstPersonLegsHide")
		"####" A 0 A_JumpIfInventory("FPSLegChecker", 1, 2)
		"####" P 1
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
		}
		Loop
		"####" O 1
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
		}
		Loop
	FirstPersonLegsHide:
		"####" Q 1 
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
		}
		Loop
	FirstPersonLegsStand:
		TNT1 A 0 
		TNT1 A 0 A_JumpIf(momx > 0.8 || momx < -0.8 || momy > 0.8 || momy < -0.8, "FirstPersonLegsWalk1")
		TNT1 A 0 A_JumpIf(momZ != 0, "FirstPersonLegsJump")
		TNT1 A 0 A_JumpIf(Height < 54, "FirstPersonLegsCrouch")
		TNT1 A 0 A_JumpIfInventory("FPSLegChecker", 1, 2)
		STAN A 1 
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
		}
		Loop
		TNT1 A 0 
		TNT1 A 0 A_JumpIf(Height < 54, "FirstPersonLegsCrouch")
		TNT1 A 0 A_JumpIf(momZ != 0, "FirstPersonLegsJump")
		STAN M 1 
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
		}
		Loop
		
	FirstPersonLegsCrouch:
		TNT1 A 0
		TNT1 A 0 A_PlaySound("IronSights", 0) //Sound when player crouches
		FirstPersonLegsCrouchContinue:
		TNT1 A 0 A_JumpIf(momZ != 0, "FirstPersonLegsJump")
		TNT1 A 0 A_JumpIf(momx > 0.8 || momx < -0.8 || momy > 0.8 || momy < -0.8, "FirstPersonLegsWalk1")
		TNT1 A 0 A_JumpIf(Height > 54, "FirstPersonLegsStand")
		STAN N 1 
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
		}
		Loop
		
	FirstPersonLegsWalk1:
		TNT1 A 0
		TNT1 A 0 A_JumpIf(momZ != 0, "FirstPersonLegsJump")
		TNT1 A 0 A_JumpIfInventory("FPSLegChecker", 1, "FirstPersonLegsWalk2")
		TNT1 A 0 A_JumpIf(momZ != 0, "FirstPersonLegsJump")
		TNT1 A 0 A_GiveInventory("FPSLegChecker",1)
		STAN BCCDDEEFF 1
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
			return A_JumpIf(momZ != 0, "FirstPersonLegsJump");
		}
		Goto FirstPersonLegsStand
		
	FirstPersonLegsWalk2:
		TNT1 A 0
		TNT1 A 0 A_JumpIf(momZ != 0, "FirstPersonLegsJump")
		TNT1 A 0 A_TakeInventory("FPSLegChecker",1)
		STAN GHHIIJJKLL 1 
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
			return A_JumpIf(momZ != 0, "FirstPersonLegsJump");
		}
		Goto FirstPersonLegsStand
			
	FirstPersonLegsJump:
		TNT1 A 0 
		STAN I 5
		{
			A_OverlayFlags(-10, PSPF_ADDWEAPON, False);
			A_OverlayFlags(-10, PSPF_PLAYERTRANSLATED, True);
			A_OverlayOffset(-10, 0, (-pitch*2)+230);
		}
		Goto FirstPersonLegsStand
			
	//NEW EQUIPMENT SYSTEM
	UseEquipment:
		TNT1 A 0 A_TakeInventory("RailgunInfrared", 1)
		TNT1 A 0 {
			A_ClearOverlays(10,11);
			A_ClearOverlays(3,4);
			A_GunFlash("Null"); //Fixes the Minigun heat overlay oversight
			}
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_GiveInventory("KeepLaserDeactivated",1)
		TNT1 A 0 A_JumpIfInventory("FragGrenadeSelected", 1, "ThrowGrenade")
		TNT1 A 0 A_JumpIfInventory("ProximityMineSelected", 1, "ThrowMine")
		TNT1 A 0 A_JumpIfInventory("StunGrenadeSelected", 1, "ThrowStun")
		TNT1 A 0 A_JumpIfInventory("LeechSelected", 1, "ThrowLeech")
		TNT1 A 0 A_JumpIfInventory("RevGunSelected", 1, "FireRevGun")
		//More stuff to come.....
		
		
		Goto GoingToReady
		
		WheelCancelEquipment:
			TNT1 A 0
				{
				A_SetInventory("WW_ProximityMineSelected",0);
				A_SetInventory("WW_StunGrenadeSelected",0);
				A_SetInventory("WW_LeechSelected",0);
				A_SetInventory("WW_FragGrenadeSelected",0);
				A_SetInventory("WW_RevGunSelected",0);
				A_SetInventory("CantWeaponSpecial",0);
				}
			goto GoingToReady
		
		SwitchEquipment:	
		TNT1 A 0 A_TakeInventory("ToggleEquipment", 1)
		TNT1 A 0 {
			if(CountInv("WW_ProximityMineSelected") && CountInv("ProximityMineSelected") >=1)
				{A_Log("Equipment already selected: Proximity Mine"); Return State("WheelCancelEquipment");}
			if(CountInv("WW_StunGrenadeSelected") && CountInv("StunGrenadeSelected") >=1)
				{A_Log("Equipment already selected: Stun Grenade"); Return State("WheelCancelEquipment");}
			if(CountInv("WW_LeechSelected") && CountInv("LeechSelected") >=1)
				{A_Log("Equipment already selected: Leech"); Return State("WheelCancelEquipment");}
			if(CountInv("WW_FragGrenadeSelected") && CountInv("FragGrenadeSelected") >=1)
				{A_Log("Equipment already selected: Frag Grenade"); Return State("WheelCancelEquipment");}
			if(CountInv("WW_RevGunSelected") && CountInv("RevGunSelected") >=1)
				{A_Log("Equipment already selected: Revenant Launcher"); Return State("WheelCancelEquipment");}
			if(CountInv("WW_ProximityMineSelected") >=1)
				{
				if(CountInv("MineAmmo") <=0)
					{A_Log("No Mines Available"); Return State("WheelCancelEquipment");}
				}
			if(CountInv("WW_StunGrenadeSelected") >=1)
				{
				if(CountInv("StunGrenadeAmmo") <=0)
					{A_Log("No Stun Grenades Available"); Return State("WheelCancelEquipment");}
				}
			if(CountInv("WW_LeechSelected") >=1)
				{
				if(CountInv("HasLeech") <=0)
					{A_Log("No Leech Available"); Return State("WheelCancelEquipment");}
				}
			if(CountInv("WW_RevGunSelected") >=1)
				{
				if(CountInv("MiniHellRocketAmmo") <=0)
					{A_Log("No Revenant Launcher Available"); Return State("WheelCancelEquipment");}
				}
			if(CountInv("WW_FragGrenadeSelected") >=1)
				{
				if(CountInv("HandGrenadeAmmo") <=0)
					{A_Log("No Frag Grenades Available"); Return State("WheelCancelEquipment");}
				}
			Return State("");
			}
		TNT1 A 0 
			{
				if(CountInv("WW_ProximityMineSelected") >=1)
					{ 
						A_Print("Equipment Selected: Proximity Mine"); 
						A_SetInventory("ProximityMineSelected",1);
						A_SetInventory("StunGrenadeSelected",0);
						A_SetInventory("LeechSelected",0);
						A_SetInventory("RevGunSelected",0);
						A_SetInventory("FragGrenadeSelected",0);
						A_PlaySound("GRNPIN", 3);
						Return State("WheelCancelEquipment");
					}
				if(CountInv("WW_StunGrenadeSelected") >=1)
					{ 
						A_Print("Equipment Selected: Stun Grenade"); 
						A_SetInventory("ProximityMineSelected",0);
						A_SetInventory("StunGrenadeSelected",1);
						A_SetInventory("LeechSelected",0);
						A_SetInventory("RevGunSelected",0);
						A_SetInventory("FragGrenadeSelected",0);
						A_PlaySound("GRNPIN", 3);
						Return State("WheelCancelEquipment");
					}
				if(CountInv("WW_LeechSelected") >=1)
					{ 
						A_Print("Equipment Selected: Leech"); 
						A_SetInventory("ProximityMineSelected",0);
						A_SetInventory("StunGrenadeSelected",0);
						A_SetInventory("LeechSelected",1);
						A_SetInventory("RevGunSelected",0);
						A_SetInventory("FragGrenadeSelected",0);
						A_PlaySound("GRNPIN", 3);
						Return State("WheelCancelEquipment");
					}
				if(CountInv("WW_RevGunSelected") >=1)
					{ 
						A_Print("Equipment Selected: Revenant Launcher"); 
						A_SetInventory("ProximityMineSelected",0);
						A_SetInventory("StunGrenadeSelected",0);
						A_SetInventory("LeechSelected",0);
						A_SetInventory("RevGunSelected",1);
						A_SetInventory("FragGrenadeSelected",0);
						A_PlaySound("REVUP", 3);
						Return State("WheelCancelEquipment");
					}
				if(CountInv("WW_FragGrenadeSelected") >=1)
					{ 
						A_Print("Equipment Selected: Frag Grenade"); 
						A_SetInventory("ProximityMineSelected",0);
						A_SetInventory("StunGrenadeSelected",0);
						A_SetInventory("LeechSelected",0);
						A_SetInventory("RevGunSelected",0);
						A_SetInventory("FragGrenadeSelected",1);
						A_PlaySound("GRNPIN", 3);
						Return State("WheelCancelEquipment");
					}
			Return State("");
			}
		
	goto GoingToReady

	LeechBeam:
		SYNP WXYZWXYZWXYZ 1 BRIGHT
		SYNP WXYZWXYZWXYZ 1 BRIGHT
		SYNP WXYZWXYZWXYZ 1 BRIGHT
		SYNP WXYZWXYZWXYZ 1 BRIGHT
		sTOP
		
	ThrowLeech:
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("ADSMode", 1)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_JumpIfInventory("Demonpower", 100, 2)
		TNT1 A 0 A_Print("Need more Demon Energy")
		Goto GoingToReady
		TNT1 A 0 A_PlaySound("SiphonGrowl")
		SYNP GHIJGHIHIJGJIHG 2
		SYNP G 1 Offset(-2,40)
		SYNP H 1 Offset(-4,50)
		SYNP I 1 Offset(-6,60)
		SYNP J 1 Offset(-8,70)
		TNT1 A 0 Offset(0,32)
		SYNP KLMNO 1
		
		TNT1 A 0 A_Overlay(-5, "LeechBeam")
		TNT1 A 0 A_PlaySound("SiphonActive", 3)
		
		TNT1 A 0 A_TakeInventory("Demonpower", 100)
		SYNP ABCDEF 2 A_FireBullets (0, 0, -1, 3, "SiphonPuff", FBF_NORANDOM)
		SYNP ABCDEF 2 A_FireBullets (0, 0, -1, 3, "SiphonPuff", FBF_NORANDOM)
		SYNP ABCDEF 2 A_FireBullets (0, 0, -1, 3, "SiphonPuff", FBF_NORANDOM)
		SYNP ABCDEF 2 A_FireBullets (0, 0, -1, 3, "SiphonPuff", FBF_NORANDOM)
		
		
		SYNP ONMLK 1
		TNT1 A 0 A_WeaponOffset(0,32)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_TakeInventory("ToggleEquipment", 1)
		Goto GoingToReady2
		
			
	ThrowStun:
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("ADSMode", 1)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_JumpIfInventory("StunGrenadeAmmo", 1, 2)
		TNT1 A 0 A_Print("No Stun Grenades left")
		Goto GoingToReady
		STNG BCDEF 1
		STNG F 1 Offset(-2,34)
		NULL A 0 A_PlaySound("StunGrenadeArm", 2)
		STNG GIJJJIHGKLMNOP 1
		
		HND1 I 1 A_PlaySound("THRGRN", 1)
		TNT1 A 0 A_TakeInventory("StunGrenadeAmmo", 1)
		HND1 J 1 A_FireCustomMissile("ThrownStunGrenade",0,0,0,0,0,0)
		HND1 KLMNOPQ 1
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_TakeInventory("ToggleEquipment", 1)
		Goto GoingToReady2
		
	FireRevGun:
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("ADSMode", 1)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_JumpIfInventory("MiniHellRocketAmmo", 1, 2)
		TNT1 A 0 A_Print("No Revenant Launcher Ammo")
		Goto GoingToReady
		TNT1 A 0 A_TakeInventory("MiniHellRocketAmmo", 1)
		TNT1 A 0 A_PlaySound("revup")
	    RVCA ABCDEFGHIJK 1 
		RVCF AB 1 
        TNT1 A 0 A_AlertMonsters
	    TNT1 A 0 BRIGHT A_FireCustomMissile("Alerter", 0, 0, -1, 0)
		TNT1 A 0 A_ZoomFactor(0.98)
		TNT1 A 0 A_PlaySound("hellishmissle/fire", 1)
		RVCF C 1
        RVCF D 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker3", random(4,-4), 10, -8, 0)
		TNT1 A 0 A_ZoomFactor(0.975)
		TNT1 A 0 A_PlaySound("hellishmissle/fire", 2)
	    TNT1 A 0 A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
		RVCF E 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker2", random(4,-4), 10, 8, 0)
		RVCF FG 1 BRIGHT
		RVCF H 1 A_ZoomFactor(1.0)
		RVCF C 1
        RVCF D 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker3", random(4,-4), 10, -8, 0)
		TNT1 A 0 A_ZoomFactor(0.975)
		TNT1 A 0 A_PlaySound("hellishmissle/fire", 2)
	    TNT1 A 0 A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
		RVCF E 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker2", random(4,-4), 10, 8, 0)
		RVCF FG 1 BRIGHT
		RVCF H 1 A_ZoomFactor(1.0)
		RVCF C 1
        RVCF D 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker3", random(4,-4), 10, -8, 0)
		TNT1 A 0 A_ZoomFactor(0.975)
		TNT1 A 0 A_PlaySound("hellishmissle/fire", 2)
	    TNT1 A 0 A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
		RVCF E 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker2", random(4,-4), 10, 8, 0)
		RVCF FG 1 BRIGHT
		RVCF H 1 A_ZoomFactor(1.0)
		RVCF C 1
        RVCF D 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker3", random(4,-4), 10, -8, 0)
		TNT1 A 0 A_ZoomFactor(0.975)
		TNT1 A 0 A_PlaySound("hellishmissle/fire", 2)
	    TNT1 A 0 A_FireCustomMissile("ShakeYourAss", 0, 0, 0, 0)
		RVCF E 1 BRIGHT A_FireCustomMissile("DoomerRevenantSeeker2", random(4,-4), 10, 8, 0)
		RVCF FG 1 BRIGHT
		RVCF H 1 A_ZoomFactor(1.0)
		RVCF IBA 1
		TNT1 A 0 A_PlaySound("revcyc")
		RVCA KJIHGFEDCBA 1
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_TakeInventory("ToggleEquipment", 1)
		Goto GoingToReady2
		
		
	ThrowGrenade:
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("ADSMode", 1)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_JumpIfInventory("HandGrenadeAmmo", 1, 2)
		TNT1 A 0 A_Print("No Grenades left")
		Goto GoingToReady
		TNT1 A 0 A_Giveinventory("PB_LockScreenTilt",1)
		TNT1 A 0 A_Giveinventory("PlayerIsThrowingAGrenade",1)
		HNDF ABCDEFGHI 1 A_SetRoll(roll+0.5, SPF_INTERPOLATE)
		TNT1 A 0 A_PlaySoundEx("OPNGRN", "Auto")
		HNDF JKLMNOPQR 1 A_SetRoll(roll+0.5, SPF_INTERPOLATE)
		TNT1 A 0 A_JumpIfInventory("UseEquipment", 1, "TossGrenade")
		TNT1 A 1
		HND1 I 1 A_PlaySoundEx("THRGRN", "Auto")
		TNT1 A 0 A_TakeInventory("HandGrenadeAmmo", 1)
		TNT1 A 0 A_FireCustomMissile("Alerter",0,0,0,0,0,0)
		HND1 J 1 A_FireCustomMissile("ThrownGrenade30",0,0,0,0,0,0)
		HND1 KLMNOPQ 1 A_SetRoll(roll-1.5, SPF_INTERPOLATE)
		TNT1 A 0 A_SetRoll(0)
		TNT1 A 0 A_TakeInventory("PB_LockScreenTilt",1)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_TakeInventory("ToggleEquipment", 1)
		TNT1 A 0 A_TakeInventory("PlayerIsThrowingAGrenade", 1)
		Goto GoingToReady2
		
	TossGrenade:
		TNT1 A 1
		HND1 RSTU 1 A_SetRoll(roll-1.5, SPF_INTERPOLATE)
		TNT1 A 0 A_PlaySound("THRGRN", 1)
		TNT1 A 0 A_TakeInventory("HandGrenadeAmmo", 1)
		TNT1 A 0 A_FireCustomMissile("Alerter",0,0,0,0,0,0)
		TNT1 A 0 A_FireCustomMissile("ThrownGrenade15", 0,0,0,-2,0,3)
		HND1 VWXY 1 A_SetRoll(roll-1.5, SPF_INTERPOLATE)
		TNT1 A 0 A_SetRoll(0)
		TNT1 A 0 A_TakeInventory("PB_LockScreenTilt",1)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_TakeInventory("ToggleEquipment", 1)
		TNT1 A 0 A_TakeInventory("PlayerIsThrowingAGrenade", 1)
		Goto GoingToReady2
		
	ThrowMine:
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("ADSMode", 1)
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_JumpIfInventory("MineAmmo", 1, 2)
		TNT1 A 0 A_Print("No Land Mines left")
		Goto GoingToReady
		XPFF FEDCBA 1
		XPFS B 1
		NULL A 0 A_PlaySound("weapons/pbarm", 2)
		XPFS B 3
		XHFF A 0 A_PlaySound("MINE002", 3)
		TNT1 A 0 A_ThrowGrenade("ThrownProxMine",4,11,1,0)
		TNT1 A 0 A_TakeInventory("MineAmmo", 1)
		XHFF MNOPQRSTUVWXYZ 1
		TNT1 A 0 A_TakeInventory("UseEquipment", 1)
		TNT1 A 0 A_TakeInventory("ToggleEquipment", 1)
		Goto GoingToReady2
		
	////////////////////////////////////////////////KNIFE COMBO//////////////////////////////////////////////////////////////
				
	QuickPunch:
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsHide")
//		TNT1 A 0 A_JumpIfInventory("PowerStrength",1,"SuperQuickPunch")
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 A_GunFlash("FlashPunching")
		TNT1 A 0 A_GiveInventory("HasCutingWeapon", 1)
		TNT1 A 0 A_PlaySound("KNIFUP", 0)
		TNT1 AA 1
		TNT1 A 0 A_TakeInventory("Zoomed",1)
        TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("ADSmode",1)
		TNT1 AA 1
		TNT1 A 0 A_PlaySound("KNIFSWNG", 1)
		TNT1 A 0 A_ZoomFactor(1.015)
		MC3S AB 1 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch) 
		TNT1 A 0 A_ZoomFactor(1.03)
		TNT1 A 0 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
        MC3S C 1 A_SetPitch(+2 + pitch, SPF_INTERPOLATE)
		TNT1 A 0 A_ZoomFactor(1.045)
		TNT1 A 0 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
        MC3S D 1 A_SetPitch(-3 + pitch, SPF_INTERPOLATE)
		TNT1 A 0 A_ZoomFactor(1.055)
		TNT1 A 0 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 {
		if(CountInv("PowerStrength") == 1) { 
			A_FireCustomMissile("SuperKnifeSwing", 0, 0, 0, 0);
			}
		else{
			A_FireCustomMissile("KnifeSwing", 0, 0, 0, 0);
			}
		}
        MC3S EF 1 A_SetPitch(+1 + pitch, SPF_INTERPOLATE)
		TNT1 A 0 A_ZoomFactor(1.025)
		MC3S GHIJ 1 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickLeft")
		TNT1 A 0 A_JumpIfInventory("KnifeHasHit",1,"KnifeCombo1")
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 A_TakeInventory("KnifeHasHit",1)
		TNT1 A 0 A_TakeInventory("HasCutingWeapon", 1)
		Goto GoingToReady
		
	KnifeCombo1:
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 A_TakeInventory("KnifeHasHit",1)
		TNT1 A 0 A_TakeInventory("HasCutingWeapon", 1)
		Goto GoingToReady
		TNT1 AAAAAAAAAAA 0
		pun4 ABCDE 1
	    TNT1 A 0 A_PlaySound("weapons/fistwhoosh", 5)
		TNT1 A 0 A_GiveInventory("Punching",1)
		pun4 F 1
		RIfF A 0 {
		if(CountInv("PowerStrength") == 1) {
			A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, 0, 5);
			}
		else{
			A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 5);
			}
		}
		pun4 GHI 1
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		pun4 JKL 1 A_JumpIfInventory("Kicking",1,"KickLeft")
        TNT1 AAAAA 1 A_JumpIfInventory("DoPunch",1,"KnifeCombo2")
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 A_TakeInventory("KnifeHasHit",1)
		TNT1 A 0 A_TakeInventory("HasCutingWeapon", 1)
		Goto GoingToReady2//+6
		
	KnifeCombo2:
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 A_TakeInventory("KnifeHasHit",1)
		TNT1 A 0 A_TakeInventory("HasCutingWeapon", 1)
		Goto GoingToReady2//+6
		TNT1 AAAAAAAAAAA 0
		TNT1 A 0 A_PlaySound("KNIFUP", 0)
		TNT1 A 0 A_ZoomFactor(1.015)
		MC1S AB 1 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch) 
		TNT1 A 0 A_PlaySound("KNIFSWNG", 1)
		TNT1 A 0 A_ZoomFactor(1.03)
		TNT1 A 0 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
        MC1S C 1 A_SetPitch(+2 + pitch,SPF_INTERPOLATE)
		TNT1 A 0 A_ZoomFactor(1.045)
		TNT1 A 0 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
        MC1S D 1 A_SetPitch(-3 + pitch, SPF_INTERPOLATE)
		TNT1 A 0 A_ZoomFactor(1.055)
		TNT1 A 0 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 {
			if(CountInv("PowerStrength") == 1) {
				A_FireCustomMissile("SuperKnifeSwing", 0, 0, 0, 0);
				}
			else{
				A_FireCustomMissile("KnifeSwing", 0, 0, 0, 0);
			}
		}
        MC1S EF 1 A_SetPitch(+1 + pitch, SPF_INTERPOLATE)
		TNT1 A 0 A_ZoomFactor(1.025)
		MC1S GHIJ 1 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		TNT1 A 0 A_JumpIfInventory("KnifeHasHit",1,"KnifeCombo3")
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 A_TakeInventory("KnifeHasHit",1)
		TNT1 A 0 A_TakeInventory("HasCutingWeapon", 1)
		Goto GoingToReady2//+6
		
	KnifeCombo3:
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 A_TakeInventory("KnifeHasHit",1)
		TNT1 A 0 A_TakeInventory("HasCutingWeapon", 1)
		Goto GoingToReady2//+6
		TNT1 AAAAAAAAAAA 0
		TNT1 A 0 A_ZoomFactor(1.015)
		TNT1 A 0 A_PlaySound("weapons/ultrwhoosh")
		P0NC AB 1 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch) 
		TNT1 A 0 A_ZoomFactor(1.03)
		TNT1 A 0 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
        P0NC C 1 A_SetPitch(+2 + pitch, SPF_INTERPOLATE)
		TNT1 A 0 A_ZoomFactor(1.045)
		TNT1 A 0 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
        P0NC D 1 A_SetPitch(-3 + pitch, SPF_INTERPOLATE)
		TNT1 A 0 A_ZoomFactor(1.055)
		P0NG A 0 {
			if(CountInv("PowerStrength") == 1) {
				A_FireCustomMissile("MeleeStrikeSuperHook", 0, 0, 0, 0);
				}
			else {
				A_FireCustomMissile("MeleeStrike1", 0, 0, 0, 0);
			}
		}
		TNT1 A 0 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
        P0NC E 1 A_SetPitch(+1 + pitch, SPF_INTERPOLATE)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 A_ZoomFactor(1.025)
		P0NR BCD 1 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickLeft")
		TNT1 AAAA 1 A_JumpIfInventory("DoPunch",1,"KnifeCombo4")
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 A_TakeInventory("KnifeHasHit",1)
		TNT1 A 0 A_TakeInventory("HasCutingWeapon", 1)
		Goto GoingToReady2//+6
		
	KnifeCombo4:
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 1 A_JumpIfInventory("DoPunch",1, 10)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 A_TakeInventory("KnifeHasHit",1)
		TNT1 A 0 A_TakeInventory("HasCutingWeapon", 1)
		Goto GoingToReady2//+6
		TNT1 AAAAAAAAAAA 0
		TNT1 A 0 A_PlaySound("KNIFUP", 0)
		TNT1 A 0 A_ZoomFactor(1.015)
		MC6S AB 1 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch) 
		TNT1 A 0 A_PlaySound("KNIFSWNG", 1)
		TNT1 A 0 A_ZoomFactor(1.03)
		TNT1 A 0 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
        MC6S C 1 A_SetPitch(+2 + pitch, SPF_INTERPOLATE)
		TNT1 A 0 A_ZoomFactor(1.045)
		TNT1 A 0 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
        MC6S D 1 A_SetPitch(-3 + pitch, SPF_INTERPOLATE)
		TNT1 A 0 A_ZoomFactor(1.055)
		TNT1 A 0 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 {
			if(CountInv("PowerStrength") == 1) {
				A_FireCustomMissile("SuperKnifeSwing", 0, 0, 0, 0);
			}
			else{
				A_FireCustomMissile("KnifeSwing", 0, 0, 0, 0);
			}
		}
        MC6S EF 1 A_SetPitch(+1 + pitch, SPF_INTERPOLATE)
		TNT1 A 0 A_ZoomFactor(1.025)
		MC6S GHIJ 1 //A_WeaponReady(WRF_NoFire|WRF_NoSwitch)
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_JumpIfInventory("KnifeHasHit",1,"KnifeCombo1")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"KickRight")
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 A_TakeInventory("KnifeHasHit",1)
		TNT1 A 0 A_TakeInventory("HasCutingWeapon", 1)
		Goto GoingToReady2//+6
		
	KickLeft:
		TNT1 A 0 {
			A_Overlay(-10, "FirstPersonLegsKickLeft");
			A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, true);
		}
		KIK1 ABC 1
        TNT1 A 0 A_PlaySound("KICK", 5)
		TNT1 A 0 //A_GiveInventory("Punching",1)
		TNT1 A 0 A_GiveInventory("Kicking",1)
		TNT1 A 0 A_SetPitch(-6 + pitch, SPF_INTERPOLATE)
		KIK1 D 1
		RIfF A 0 {
			if(CountInv("PowerStrength") == 1) {
				A_FireCustomMissile("SuperKickAttack", 0, 0, 5, 5);
			}	
			else {
				A_FireCustomMissile("KickAttack", 0, 0, 5, 5);
			}
		}
		KIK1 DD 1
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		KIK1 ECBA 1
		TNT1 A 0 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
        TNT1 AAAAA 1 A_JumpIfInventory("DoPunch",1,"KnifeCombo2")
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 A_TakeInventory("KnifeHasHit",1)
		TNT1 A 0 A_TakeInventory("HasCutingWeapon", 1)
		Goto GoingToReady2
		
	KickRight:
		TNT1 A 0 {
			A_Overlay(-10, "FirstPersonLegsKickRight");
			A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, true);
		}
		KIK2 ABC 1
        TNT1 A 0 A_PlaySound("KICK", 5)
		TNT1 A 0 //A_GiveInventory("Punching",1)
		TNT1 A 0 A_GiveInventory("Kicking",1)
		TNT1 A 0 A_SetPitch(-6 + pitch, SPF_INTERPOLATE)
		KIK2 D 1
		RIfF A 0 {
		if(CountInv("PowerStrength") == 1) {
			A_FireCustomMissile("SuperKickAttack", 0, 0, 5, 5);
			}
		else {
			A_FireCustomMissile("KickAttack", 0, 0, 5, 5);
			}
		}
		KIK2 DD 1
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		KIK2 ECBA 1
		TNT1 A 0 A_TakeInventory("Kicking",1)
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
        TNT1 AAAAA 1 A_JumpIfInventory("DoPunch",1,"KnifeCombo2")
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 A_TakeInventory("KnifeHasHit",1)
		TNT1 A 0 A_TakeInventory("HasCutingWeapon", 1)
		Goto GoingToReady2
		
////////////////////////////////////////////////KNIFE COMBO//////////////////////////////////////////////////////////////
		
    DoKick:
		TNT1 A 0 {
			A_Giveinventory("PB_LockScreenTilt",1);
			A_Overlay(-10, "FirstPersonLegsKickRight");
			A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, true);
			A_TakeInventory("Zoomed",1);
			A_TakeInventory("ADSmode",1);
			A_ZoomFactor(1.0);
			}
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		NULL A 0 A_JumpIfInventory("CanSlideKick", 1, "SlideKick")
		NULL A 0 A_JumpIf (momZ > 0, "AirKick")
		NULL A 0 A_JumpIf (momZ < 0, "AirKick")
		KIC1 A 1 {
			A_PlaySoundEx("KICK", "Auto");
			SetPlayerProperty(0,1,0);
			//A_Overlay(2,"FlashKicking");
			A_GunFlash("FlashKicking");
			A_SetAngle(-0.5 + angle, SPF_INTERPOLATE);
			A_SetPitch(+0.5 + pitch, SPF_INTERPOLATE);
			A_SetRoll(roll-1, SPF_INTERPOLATE);
			A_ZoomFactor(0.98);
			}
		KIC1 B 1 {
			A_SetAngle(-0.5 + angle, SPF_INTERPOLATE);
			A_SetPitch(+0.5 + pitch, SPF_INTERPOLATE);
			A_SetRoll(roll-1, SPF_INTERPOLATE);
			A_ZoomFactor(0.970);
			}
		KIC1 C 1 {
			A_SetAngle(-0.5 + angle, SPF_INTERPOLATE);
			A_SetPitch(+0.5 + pitch, SPF_INTERPOLATE);
			A_SetRoll(roll-1, SPF_INTERPOLATE);
			A_ZoomFactor(0.965);
		}
		KIC1 D 1 { 
			A_SetPitch(+1.25 + pitch, SPF_INTERPOLATE);
			A_ZoomFactor(0.950);
			}
        KIC1 E 1 A_Recoil(-1)
        KIC1 F 1 { //No more unneeded Super states here, this now unified into a single state with an if else statement.
			if(CountInv("PowerStrength") == 1) {
				A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -7);
			}
			else{
				A_FireCustomMissile("KickAttack", 0, 0, 0, -7);
			}
		}
        KIC1 GG 1 
		KIC1 I 1 {
			A_ZoomFactor(0.965);
			A_SetAngle(+1 + angle, SPF_INTERPOLATE);
			A_TakeInventory("Kicking",1);
			}
		KIC1 H 1 {
			A_SetPitch(-0.5 + pitch, SPF_INTERPOLATE);
			A_SetAngle(+1 + angle, SPF_INTERPOLATE);
			A_SetRoll(roll+1, SPF_INTERPOLATE);
			A_ZoomFactor(0.970);
		}
		KIC1 J 1 {
			A_SetPitch(-0.5 + pitch, SPF_INTERPOLATE);
			A_SetRoll(roll+1, SPF_INTERPOLATE);
			A_SetAngle(+0.5 + angle, SPF_INTERPOLATE);
			A_ZoomFactor(0.98);
			}
		KIC1 K 1 {
			A_SetPitch(-0.5 + pitch, SPF_INTERPOLATE);
			A_SetRoll(roll+1, SPF_INTERPOLATE);
			A_SetAngle(+0.5 + angle, SPF_INTERPOLATE);
			A_ZoomFactor(0.99);
		}
		KIC1 L 1 {
			A_SetAngle(+0.5 + angle, SPF_INTERPOLATE);
			A_SetPitch(-0.5 + pitch, SPF_INTERPOLATE);
			A_ZoomFactor(1.0);
			}
		KIC1 A 1 {
			A_SetAngle(-0.5 + angle, SPF_INTERPOLATE);
			A_SetPitch(-1.25 + pitch, SPF_INTERPOLATE);
			SetPlayerProperty(0,0,0);
			A_Takeinventory("PB_LockScreenTilt",1);
		}
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
		Goto GoingToReady
		
	SlideKick:
		TNT1 A 0 {
			A_GiveInventory("KeepLaserDeactivated",1);
			A_GiveInventory("IsSlideKicking", 1);
			//A_Overlay(2,"FlashSlideKicking");
			A_GunFlash("FlashSlideKicking");
			A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, true);
			}
		SLDK A 1 A_ZoomFactor(0.90)
		SLDK B 1 A_ZoomFactor(0.85)
		SLDK C 1 A_ZoomFactor(0.80)
		SLDK D 1 A_ZoomFactor(0.75)
		SLDK EF 1
		NULL A 0 A_JumpIf(Height > 54, "LowerKick")
		TNT1 A 0 A_JumpIfInventory("KickHasHitAnObject", 1, "LowerKick")
		SLDK GHIJKLMNMLKJ 1 {
			if(CountInv("PowerStrength") == 1) {
				A_FireCustomMissile("SuperKickAttack", 0, 0, 0, -31);
			}
			else{
				A_FireCustomMissile("KickAttack", 0, 0, 0, -31);
			}
			if (CountInv("KickHasHitAnObject") == 1) { return state("LowerKick"); }
			if (Height > 50) { return state("LowerKick"); }
			return state("");
		}
	LowerKick:
		TNT1 A 0 {
			//A_Overlay(2,"FlashSlideKickingStop");
			A_GunFlash("FlashSlideKickingStop");
			A_ZoomFactor(1.0);
			A_PlaySoundEx("SlideKick/End", "Auto");
			A_Takeinventory("Kicking",1);
			A_Takeinventory("KickHasHitAnObject",1);
			A_TakeInventory("IsSlideKicking", 1);
			A_Takeinventory("PB_LockScreenTilt",1);
			A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, true);
		}
		SLDK OPQRSTU 1
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
		Goto GoingToReady
	AirKick:
		TNT1 A 0 {
			A_PlaySound("KICK", 6);
			A_Recoil (-6);
			//A_Overlay(2,"FlashAirKicking");
			A_GunFlash("FlashAirKicking");
			A_ZoomFactor(0.95);
			A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, true);
		}
		AKCK A 1 A_SetRoll(roll-2, SPF_INTERPOLATE)
		AKCK B 1 A_SetRoll(roll-2, SPF_INTERPOLATE)
		AKCK C 1 A_SetRoll(roll-2, SPF_INTERPOLATE)
		AKCK DEFGH 1
        RIFF A 0 {
			if(CountInv("PowerStrength") == 1) {
				A_FireCustomMissile("SuperAirKickAttack", 0, 0, 0, -31);
			}
			else{
			A_FireCustomMissile("AirKickAttack", 0, 0, 0, -31);
			}
		}
		TNT1 A 0 A_ZoomFactor(0.975)
        AKCK IJK 1
		TNT1 A 0 A_ZoomFactor(0.995)
		TNT1 A 0 A_TakeInventory("Kicking",1)
		AKCK LM 1
		AKCK N 1 A_SetRoll(roll+2, SPF_INTERPOLATE)
		AKCK O 1 A_SetRoll(roll+2, SPF_INTERPOLATE)
		TNT1 A 1 A_SetRoll(roll+2, SPF_INTERPOLATE)
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_Takeinventory("PB_LockScreenTilt",1)
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		TNT1 A 0 A_OverlayFlags(1,PSPF_PLAYERTRANSLATED, false)
		Goto GoingToReady
		
    Taunt:
		TNT1 A 0 A_StopSound(6)
		TNT1 A 0 A_TakeInventory("Zoomed", 1)
    TNT1 A 0 A_ZoomFactor(1.0)
    TNT1 A 1 {
			A_ClearOverlays(10,11);
			A_ClearOverlays(3,4);
			A_Gunflash("Null"); //Fixes the Minigun heat overlay oversight
			}
		FUCK A 1
		TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", 0, 0, -1, 0)
		TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", -9, 0, -1, 0)
		TNT1 A 0 BRIGHT A_FireCustomMissile("Taunter", 9, 0, -1, 0)
        FUCK B 1 A_PlaySound("FUCK", 1)
        FUCK C 1 A_AlertMonsters
		FUCK D 15 A_TakeInventory("Taunting",1)
        FUCK CBA 1
        TNT1 A 1
		Goto GoingToReady2
		
	Salute:
		TNT1 A 0 A_StopSound(6)
	  TNT1 A 0 SetPlayerProperty(0,1,0)
		TNT1 A 0 A_ALertMonsters
		 TNT1 A 0 {
			A_ClearOverlays(10,11);
			A_ClearOverlays(3,4);
			A_Gunflash("Null"); //Fixes the Minigun heat overlay oversight
			}
		SALU ABCDEDCDEDCDEDCBA 4
		TNT1 A 0 A_TakeInventory("Salute1",1)
		TNT1 A 0 A_TakeInventory("Salute2",1)
		TNT1 A 0 SetPlayerProperty(0,0,0)
		TNT1 A 0 //A_JumpIfInventory("EquipDeathDealer", 1, 3)
		Goto GoingToReady2
		
	GrabEnemy:	
	    TNT1 A 0
	    TNT1 A 0 A_PlaySound("weapons/fistwhoosh")
        PKUP ABCDEF 1
		TNT1 AAAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait
	GrabBarrel:
		TNT1 A 0
		TNT1 A 0 A_Takeinventory("HasUnloaded",1)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		TNT1 A 0 A_Takeinventory("Zoomed",1)
        TNT1 A 0 A_ZoomFactor(1.0)
	    TNT1 A 0 A_PlaySound("weapons/fistwhoosh")
		TNT1 A 0 A_TakeInventory("GrabbedBarrel", 1)
		TNT1 A 0 A_TakeInventory("GrabbedBurningBarrel", 1)
        PKUP ABCDEF 1
		TNT1 A 0 A_SelectWeapon("BarrelThrower")
		TNT1 AAAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait
		
	Steady:
	TNT1 A 1
	TNT1 A 0 A_JumpIfInventory("GoFatality",1,"Steady")
	Goto GoingToReady
}
}

Actor PB_DualWeapon : PB_Weapon
{
States
	{
	 ThrowMine:
	 ThrowGrenade:
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("ADSMode", 1)
		TNT1 A 0 A_TakeInventory("DoGrenade", 1)
		TNT1 A 0 A_TakeInventory("DoMine", 1)
		TNT1 A 0
		TNT1 A 0 A_Print("You can't throw right now!")
		Goto GoingToReady
	}
}


ACTOR MagTG
{
	Projectile
	+BLOODLESSIMPACT
	+NOBLOCKMAP
	+DOOMBOUNCE
	+USEBOUNCESTATE
	+MOVEWITHSECTOR
	+NOTRIGGER
	+BOUNCEONWALLS
	+BOUNCEONACTORS
renderstyle Normal
}

Actor ECS
{
  Scale 0.1
    States
  {
  Spawn:
  TNT1 A 0
  Stop
  Disappear:
  TNT1 A 0
  Stop
  }
}