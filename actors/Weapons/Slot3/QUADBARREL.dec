// --------------------------------------------------------------------------
//
// QUAD_SSG (SSG)
//
// --------------------------------------------------------------------------
ACTOR QSSGAmmoCounter: Ammo
{
	Inventory.Amount 0
	Inventory.MaxAmount 4
	Ammo.BackpackAmount 0
	Ammo.BackpackMaxAmount 4
	Inventory.Icon "QSGSA0"
	+Inventory.IgnoreSkill
}

Actor LeftQSSGAmmoCounter : Ammo
{
	Inventory.Amount 0
	Inventory.MaxAmount 4
	Ammo.BackpackAmount 0
	Ammo.BackpackMaxAmount 4
	Inventory.Icon "QSGSA0"
	+Inventory.IgnoreSkill
}

Actor QuadFlameSpawnerCheap //Those actors are required to spawn QuadFlameMissileCheap with separate random rotations
{
+NOBLOCKMAP
+missile
+NOBLOCKMONST
+NOGRAVITY
Speed 3
States {
	Spawn:
		TNT1 A 1
		TNT1 A 1  A_CustomMissile("QuadFlameMissileCheap", random(-35, 35),  random(-35, 35), random(-45, 45), CMF_AIMDIRECTION )
		TNT1 A 2
		Stop
	}
}

Actor QuadFlameSpawnerCheaper : QuadFlameSpawnerCheap {
States {
	Spawn:
		TNT1 A 1
		TNT1 A 1  A_CustomMissile("QuadFlameMissileCheaper", random(-22, 25),  random(-25, 25), random(-25, 25), CMF_AIMDIRECTION )
		TNT1 A 2
		Stop
}
}

Actor QuadFlameSpawnerCheapest : QuadFlameSpawnerCheap {
States {
 Spawn:
   TNT1 A 1
    TNT1 A 1  A_CustomMissile("QuadFlameMissileCheaper", random(-15, 18),  random(-15, 18), random(-22, 18), CMF_AIMDIRECTION )
   TNT1 A 2
   Stop 
}
}

ACTOR QuadFlameMissileCheap : FlamethrowerMissile
{
+NOGRAVITY
+RIPPER
Damage 3
States
	{
		Spawn:
	    TNT1 A 0
		FIR5 ABC 1 BRIGHT
        FIR3 A 1 BRIGHT 
		DB54 D 1 
		TNT1 A 0 
		DB54 E 1 BRIGHT A_SpawnItem("RedFlareSmall", 0, 0)
		EXPL A 0 A_CustomMissile ("SmallFireTrail", 6, 0, 0, 2, random (0, 40))
		DB54 F 1 
		DB54 G 1 BRIGHT A_SpawnItem("RedFlareSmall", 0, 0)
		EXPL A 0 A_CustomMissile ("SmallFireTrail", 6, 0, 0, 2, random (-10, 60))
		DB54 H 1 BRIGHT A_SpawnItem("RedFlareSmall", 0, 0)
		DB54 I 1 
		DB54 J 1 BRIGHT A_SpawnItem("RedFlareSmall", 0, 0)
// 		EXPL A 0 A_CustomMissile ("FlamethrowerFireParticles", 6, 0, 0, 2, random (10, 20))
		DB54 KL 1 BRIGHT A_SpawnItem("RedFlare", 0, 0)
		TNT1 A 0 A_Playsound("Afrit/Hellfire")
		Stop
	Death:
	TNT1 A 0 A_SpawnItemEx("TinyBurningPiece2", random (-25, 25), random (-15, 15))
	TNT1 A 0 A_SpawnItemEx("TinyBurningPiece", random (-15, 15), random (-15, 15))
	EXPL AA 0 A_CustomMissile ("FlamethrowerFireParticles", 6, 0, random (0, 360), 2, random (10, 90))
	Stop
	}
}

ACTOR QuadFlameMissileCheaper : QuadFlameMissileCheap {
scale 0.45
DAMAGE 2
States {
	Spawn:
	    FIR5 BC 1 BRIGHT
        FIR3 A 1 BRIGHT 
		DB54 D 1 
		DB54 E 1 BRIGHT
		EXPL A 0 A_CustomMissile ("SmallFireTrail", 6, 0, 0, 2, random (0, 40))
		DB54 F 0
		DB54 G 1 BRIGHT A_SpawnItem("RedFlareSmall", 0, 0)
		EXPL A 0
		DB54 H 1 BRIGHT A_SpawnItem("RedFlareSmall", 0, 0)
		DB54 I 1 
		DB54 J 1 BRIGHT A_SpawnItem("RedFlareSmall", 0, 0)
// 		EXPL A 0 A_CustomMissile ("FlamethrowerFireParticles", 6, 0, 0, 2, random (10, 20))
		DB54 L 1 BRIGHT A_SpawnItem("RedFlare", 0, 0)
		TNT1 A 0 A_Playsound("Afrit/Hellfire")
		Stop
}
}

ACTOR QuadDemonicBreath4Blast: FastProjectile
{
	Damage 66
	MissileType"QuadFlameSpawnerCheap"
	Gravity 0.2
	Radius 6
	DamageType Fire
	Height 6
	Scale 0.8
	+NOGRAVITY
	+NOBLOOD
	+BLOODLESSIMPACT
	DeathSound "Explosion"
	Speed 80
States
{
	
	Spawn:
	    TNT1 A 0
		TNT1 A 0 ACS_ExecuteAlways(798, 0, 0, 0, 0)//Check Effects
		TNT1 A 0 A_JumpIfInventory("lowgraphicsmode", 1, "SpawnCheap")
		TNT1 A 0 A_Playsound("BGFLMBL", 6, 1, 1)
	Spawn1:
		TNT1 A 0 
		BLHD CD 1 BRIGHT A_SpawnItem ("FireballExplosionFlamesSmall")
		TNT1 A 0 A_SpawnItemEx("BurningEmberParticlesFloating_Bigger", random(7,-7), random(7,-7), random(8,-8), 0, 0, 0, 0, 128, 0)
		TNT1 A 0 A_CustomMissile ("RocketSmokeTrail52", 2, 0, random (70, 110), 2, random (0, 360))
		Loop
	Death:
// 			TNT1 A 0 A_Explode(175,125, XF_HURTSOURCE, 1, 0, 0, 0, "Fire")
			TNT1 A 0 {
				if(GetCvar("pb_realdamage")) {
				A_Explode(175,125);
				}
				else {
					A_Explode(175,125,0);
				}
			}
			TNT1 A 0 A_PlaySound("RAILIMP")
			TNT1 A 0 A_PlaySound("FAREXPL", 1)
			TNT1 A 0 A_SpawnItem("WhiteShockwave")
			EXPL A 0 Radius_Quake (5, 10, 0, 15, 0)
// 			TNT1 A 0 A_SpawnItemEx("RailgunImpactExplosionSFX", 0, 0, 0, 0, 0, 0, 0, 128)
			TNT1 AAAAA 0 A_CustomMissile ("PBExplosionparticles", 0, 0, random (0, 360), 2, random (40, 90))
			TNT1 AAAA 0 A_CustomMissile ("PBExplosionparticles2", 0, 0, random (0, 360), 2, random (40, 90))
			TNT1 AAAA 0 A_CustomMissile ("PBExplosionparticles3", 10, 0, random (0, 360), 2, random (40, 90))
			EXPL AAAAAAA 0 A_CustomMissile ("ExplosionSmokeFast22", 0, 0, random (0, 360), 2, random (0, 360))
			TNT1 AAAAAAAA 0 A_CustomMissile ("FireworkSFXType2", 2, 0, random (0, 360), 2, random (10, 80))
			TNT1 A 0 A_SpawnItemEx ("DetectFloorCraterSmall",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
			Goto ExplosionEffect
		ExplosionEffect:
			TNT1 A 0
			TNT1 A 0 A_StopSound(6)
			TNT1 A 0 A_JumpIfInventory("lowgraphicsmode", 1, "DeathCheap")
			TNT1 AAAA 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
			EXPL A 0 A_SpawnItem("ExplosionParticleSpawner")
			TNT1 AAA 0 A_SpawnItemEx("BurningEmberParticlesFloating_Bigger_Faster", random(12,-12), random(12,-12), random(2,12), 0, 0, 0, 0, 128, 0)
			EXPL AAA 0 A_CustomMissile ("FlamethrowerFireParticles", 6, 0, random (0, 360), 2, random (0, 90))
			TNT1 AA 0 A_CustomMissile ("FireworkSFXType2", 0, 0, random (0, 360), 2, random (30, 60))
			TNT1 A 0 A_SpawnItemEx("TinyBurningPiece", random (-15, 15), random (-15, 15))
			TNT1 A 0 A_SpawnItemEx("TinyBurningPiece2", random (-35, 35), random (-35, 35))
			TNT1 A 0 A_SpawnItemEx("TinyBurningPiece3", random (-45, 45), random (-45, 35))
			TNT1 A 1 Light("BIGREDTORCH")
			TNT1 AAAAAA 20 A_CustomMissile ("BigBlackSmoke", 0, 0, random (0, 360), 2, random (40, 160))
			Stop
				
			DeathCheap:
			TNT1 A 0 A_StopSound(6)
			TNT1 AAAA 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
			EXPL A 0 A_SpawnItem("ExplosionParticleSpawner")
			EXPL AAA 0 A_CustomMissile ("FlamethrowerFireParticles", 6, 0, random (0, 360), 2, random (0, 90))
			TNT1 AAA 20 A_CustomMissile ("BigBlackSmoke", 0, 0, random (0, 360), 2, random (40, 160))
			Stop
}
}

ACTOR QuadDemonicBreathBlast: QuadDemonicBreath4Blast
{
Damage 33
Gravity 0.2
Scale 0.6
MissileType"QuadFlameSpawnerCheaper"
+NOGRAVITY
+NOBLOOD
+BLOODLESSIMPACT
Speed 120
States
{
	
	Spawn:
	    TNT1 A 0
		TNT1 A 0 ACS_ExecuteAlways(798, 0, 0, 0, 0)//Check Effects
		TNT1 A 0 A_JumpIfInventory("lowgraphicsmode", 1, "SpawnCheap")
		TNT1 A 0 A_Playsound("BGFLMBL", 6, 1, 1)
	Spawn1:
		TNT1 A 0 
		BLHD CD 1 BRIGHT A_SpawnItem ("FireballExplosionFlamesSmall")
		TNT1 A 0 A_SpawnItemEx("BurningEmberParticlesFloating_Bigger", random(7,-7), random(7,-7), random(8,-8), 0, 0, 0, 0, 128, 0)
		TNT1 A 0 A_CustomMissile ("RocketSmokeTrail52", 2, 0, random (70, 110), 2, random (0, 360))
		Loop
	
	Death:
			TNT1 A 0 {
			if(GetCvar("pb_realdamage")) {
				A_Explode(95,70, XF_HURTSOURCE, 1, 0, 0, 0);//, "Fire")
				}
			else {
				A_Explode(95,70, 0, 1, 0, 0, 0);
				}
			}
			TNT1 A 0 A_PlaySound("RAILIMP")
			TNT1 A 0 A_PlaySound("FAREXPL", 1)
			TNT1 A 0 A_SpawnItem("WhiteShockwave")
			EXPL A 0 Radius_Quake (5, 10, 0, 15, 0)
// 			TNT1 A 0 A_SpawnItemEx("RailgunImpactExplosionSFX", 0, 0, 0, 0, 0, 0, 0, 128)
			TNT1 AAAAA 0 A_CustomMissile ("PBExplosionparticles", 0, 0, random (0, 360), 2, random (40, 90))
			TNT1 AAAA 0 A_CustomMissile ("PBExplosionparticles2", 0, 0, random (0, 360), 2, random (40, 90))
			TNT1 AAAA 0 A_CustomMissile ("PBExplosionparticles3", 10, 0, random (0, 360), 2, random (40, 90))
			EXPL AAAAA 0 A_CustomMissile ("ExplosionSmokeFast22", 0, 0, random (0, 360), 2, random (0, 360))
			TNT1 AAAAAA 0 A_CustomMissile ("FireworkSFXType2", 2, 0, random (0, 360), 2, random (10, 80))
			TNT1 A 0 A_SpawnItemEx ("DetectFloorCraterSmall",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
			Goto ExplosionEffect
}
}

ACTOR QuadDemonicBreathOneBlast : QuadDemonicBreathBlast {
Scale 0.45
Damage 12
States {
Death:
			TNT1 A 0 {
				if(GetCvar("pb_realdamage")) {
					A_Explode(70,35, XF_HURTSOURCE, 1, 0, 0, 0);//, "Fire")
					}
				else {
					A_Explode(70,35, 0, 1, 0, 0, 0);
					}
				}
			TNT1 A 0 A_PlaySound("RAILIMP")
			TNT1 A 0 A_PlaySound("FAREXPL", 1)
			TNT1 A 0 A_SpawnItem("WhiteShockwave")
			EXPL A 0 Radius_Quake (5, 10, 0, 15, 0)
// 			TNT1 A 0 A_SpawnItemEx("RailgunImpactExplosionSFX", 0, 0, 0, 0, 0, 0, 0, 128)
			TNT1 AAAAA 0 A_CustomMissile ("PBExplosionparticles", 0, 0, random (0, 360), 2, random (40, 90))
			TNT1 AAAA 0 A_CustomMissile ("PBExplosionparticles2", 0, 0, random (0, 360), 2, random (40, 90))
			TNT1 AAAA 0 A_CustomMissile ("PBExplosionparticles3", 10, 0, random (0, 360), 2, random (40, 90))
			EXPL AAAAA 0 A_CustomMissile ("ExplosionSmokeFast22", 0, 0, random (0, 360), 2, random (0, 360))
			TNT1 AAAAAA 0 A_CustomMissile ("FireworkSFXType2", 2, 0, random (0, 360), 2, random (10, 80))
			TNT1 A 0 A_SpawnItemEx ("DetectFloorCraterSmall",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
			Goto ExplosionEffect
}
}

ACTOR ShotgunDemonicBreathUpdated: QuadDemonicBreathOneBlast {
-RIPPER
Damage 9 
MissileType "QuadFlameSpawnerCheapest"
}

Actor QuadShotgunHasUnloaded : Inventory { inventory.maxamount 1}
Actor LeftQuadShotgunHasUnloaded : Inventory { inventory.maxamount 1}
Actor QSGRespected : Inventory { inventory.maxamount 1}
Actor QuadAkimboMode : Inventory { inventory.maxamount 1}
Actor BreathMode : Inventory { inventory.maxamount 1}
Actor FullBlastMode : Inventory { inventory.maxamount 1}

//Wheel

Actor BlastToggle : Inventory { inventory.maxamount 1}
Actor BreathToggle : Inventory { inventory.maxamount 1}
Actor SelectDualWieldQuads : Inventory { inventory.maxamount 1}

ACTOR PB_QuadSG  : PB_Weapon
{
	SpawnID 9360
	Weapon.BobRangeX 0.3
	Weapon.BobRangeY 0.5
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 2.4
	Game Doom
    Weapon.Kickback 50
	Weapon.AmmoUse1 0
	Weapon.AmmoUse2 0
	Weapon.AmmoGive1 2
	Weapon.AmmoGive2 0
	Weapon.AmmoType "NewShell"
	Weapon.AmmoType2 "QSSGAmmoCounter"
	Scale 0.52
	+FLOORCLIP
	+DONTGIB
    +WEAPON.NOAUTOAIM
	Inventory.MaxAmount 3
	Tag "Quad-Barrel Shotgun"
	+WEAPON.NOAUTOFIRE
    +WEAPON.MELEEWEAPON
	+POWERED_UP
	+WEAPON.CHEATNOTWEAPON
	Weapon.SisterWeapon pb_ssg
	+COUNTITEM
	Inventory.PickupMessage "You got the Quad-Barrel Shotgun Upgrade! (Slot 3)"
	Obituary "%o was eviscerated by %k's QSG"
    Inventory.PickupSound "CLIPINSS"
	PB_WeaponBase.respectItem "QSGRespected"
	PB_WeaponBase.UnloaderToken "QuadShotgunHasUnloaded"
	States
	{
    Spawn:
		QSPG A 10 //BRIGHT Light("WeaponUpgradeSpawner")
		Loop
		
	Deselect:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(41);
			A_ClearOverlays(10,11);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		TNT1 A 0 A_Takeinventory("Unloading",1)
		TNT1 A 0 A_Takeinventory("Zoomed",1) 
		TNT1 A 0 A_Takeinventory("QSGSelected",1) 
        TNT1 A 0 A_ZoomFactor(1.0)
	    TNT1 A 0 A_PlaySound("weapons/changing", 1)
		TNT1 A 0 A_TakeInventory("ADSmode", 1)
		TNT1 A 0 A_JumpIfInventory("GotMeatShield", 1, "GrabEnemy")
		TNT1 A 0 A_JumpIfInventory("QuadAkimboMode", 1, "DeselectDual")
        QSGS ABCD 1
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait
	DeselectDual:
		QAKS NOPQR 1
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait
	Select:
		TNT1 A 0
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(41);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		Goto SelectFirstPersonLegs
	SelectContinue:
//		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand")
		TNT1 A 0 A_Takeinventory("Unloading",1)
		TNT1 A 0 A_TakeInventory("RifleSelected",1)
		TNT1 A 0 A_TakeInventory("CarbineSelected",1)
		TNT1 A 0 A_TakeInventory("FistsSelected",1)
		TNT1 A 0 A_TakeInventory("SawSelected",1)
		TNT1 A 0 A_TakeInventory("SledgeSelected",1)
		TNT1 A 0 A_TakeInventory("HandgunSelected",1)
		TNT1 A 0 A_TakeInventory("DualHandgunSelected",1)
		TNT1 A 0 A_TakeInventory("RevolverSelected",1)
		TNT1 A 0 A_TakeInventory("ShotgunSelected",1)
		TNT1 A 0 A_TakeInventory("SSGSelected",1)
		TNT1 A 0 A_TakeInventory("ASGSelected",1)
		TNT1 A 0 A_GiveInventory("QSGSelected",1)
		TNT1 A 0 A_TakeInventory("MinigunSelected",1)
		TNT1 A 0 A_TakeInventory("NewChaingunSelected",1)	
		TNT1 A 0 A_TakeInventory("RocketLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("GrenadeLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("SGLSelected",1)
		TNT1 A 0 A_TakeInventory("PlasmaGunSelected",1)
		TNT1 A 0 A_TakeInventory("M2Selected",1)	
		TNT1 A 0 A_TakeInventory("FreezerSelected",1)
		TNT1 A 0 A_TakeInventory("RailGunSelected",1)
		TNT1 A 0 A_TakeInventory("BFGSelected",1)
		TNT1 A 0 A_TakeInventory("BFGBeamSelected",1)
		TNT1 A 0 A_TakeInventory("BHCSelected",1)
		TNT1 A 0 A_TakeInventory("RevenantLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("FlameCannonSelected",1)
		TNT1 A 0 A_TakeInventory("HellRifleSelected",1)
		TNT1 A 0 A_TakeInventory("LandMineSelected",1)
		TNT1 A 0 A_TakeInventory("UACSMGSelected",1)
		TNT1 A 0 A_TakeInventory("SubMachineGunSelected",1)
		TNT1 A 0 A_TakeInventory("LostSoulSelected",1)
		TNT1 A 0 A_TakeInventory("HasBarrel",1)
		TNT1 A 0 A_TakeInventory("HasIceBarrel", 1)
		TNT1 A 0 A_TakeInventory("HasBurningBarrel",1)
		TNT1 A 0 A_TakeInventory("HasIncendiaryWeapon", 1)
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Raise
		TNT1 AAAAAAAA 1 A_Raise
		Wait
		
	Steady:
		TNT1 A 1
		Goto Ready
	
	Ready:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
		TNT1 A 0 PB_RespectIfNeeded
	WeaponRespect:
		TNT1 A 0 { 
		A_PlaySound("CLIPINSS");
		A_GiveInventory("QSGRespected");
		}
		QRES ABCDEFGHIJKLMNO 1  A_DoPBWeaponAction(wrf_allowreload)
		TNT1 A 0 { 
		A_FireCustomMissile("ShakeYourAssDouble", 0, 0, 0, 0);
		A_PlaySound("QSGCHRG", 8);
		}
		QRES PQRSTUVWXYZ 1  A_DoPBWeaponAction(wrf_allowreload)
		QR1S ABCDEFGHIJK 1 A_DoPBWeaponAction(wrf_allowreload)
		TNT1 A 0 A_PlaySoundEx("weapons/ssg/inspect3", "Auto") //SSG close sound
		QR1S LMNOPQRSTUVXYZ 1 A_DoPBWeaponAction(wrf_allowreload)
		QR2S ABCDE 1 A_DoPBWeaponAction(wrf_allowreload)
		TNT1 A 0 A_PlaySound("") //quad deselect sound? maybe not...
		QR2S FGHIJKLMN 1 A_DoPBWeaponAction(wrf_allowreload)
		TNT1 A 0 A_PlaySoundEx("weapons/ssg/open", "Auto") //SSG open sound
		QR2S OPQRS 1 A_DoPBWeaponAction(wrf_allowreload)
		TNT1 A 0 A_PlaySoundEx("weapons/ssg/inspect2", "Auto") //SSG load sound
		QR2S TUVWXYZ 1 A_DoPBWeaponAction(wrf_allowreload)
		QR3S ABCDEFGHIJKLMN 1 A_DoPBWeaponAction(wrf_allowreload)
		TNT1 A 0 A_PlaySound("CLIPINSS") //QSG select sound
		QR3S OPQRSTUVWXYZ 1 A_DoPBWeaponAction(wrf_allowreload)
		QR4S ABCDEFGH 1 A_DoPBWeaponAction(wrf_allowreload)
		TNT1 A 0 A_PlaySound("QSGOPN", 8) //Quad open sound
		QR4S IJKLMN 1 A_DoPBWeaponAction(wrf_allowreload)
		Q1R0 A 6 A_DoPBWeaponAction(wrf_allowreload)
		Q1R1 ABCDEFFFG 1 A_DoPBWeaponAction(wrf_allowreload)
		TNT1 A 0 A_PlaySoundEx("weapons/qsg/singlein", "Auto")
		Q1R1 HIIIIH 1 A_DoPBWeaponAction(wrf_allowreload)
		Q1R2 GFEEEFG 1 A_DoPBWeaponAction(wrf_allowreload)
		TNT1 A 0 A_PlaySoundEx("weapons/qsg/singlein", "Auto")
		Q1R2 HIIIIH 1 A_DoPBWeaponAction(wrf_allowreload)
		Q1R3 GFEEEFG 1 A_DoPBWeaponAction(wrf_allowreload)
		TNT1 A 0 A_PlaySoundEx("weapons/qsg/singlein", "Auto")
		Q1R3 HIIIIHG 1 A_DoPBWeaponAction(wrf_allowreload)
		Q1R4 FEEEEFH 1 A_DoPBWeaponAction(wrf_allowreload)
		TNT1 A 0 A_PlaySoundEx("weapons/qsg/singlein", "Auto")
		Q1R4 GHIIIIIJKL 1 A_DoPBWeaponAction(wrf_allowreload)
		QRS4 I 7 A_DoPBWeaponAction(wrf_allowreload)
		QSS1 NOPQ 1 A_DoPBWeaponAction(wrf_allowreload)
		TNT1 A 0 A_PlaySound("QSGCLSE", 8)
		QSS1 RSTUVWXYZ 1 A_DoPBWeaponAction(wrf_allowreload)
		QSS2 ABCD 1 A_DoPBWeaponAction(wrf_allowreload)
		Goto Ready3
	SelectAnimationDual:
		QAKS RQPONM 1
		goto Ready3
	SelectAnimation:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
        TNT1 A 0 A_PlaySound("CLIPINSS")
		TNT1 A 0 A_JumpIfInventory("QuadAkimboMode", 1, "SelectAnimationDual")
        QSGS DCBA 1
	RealReady:
	Ready3:
		TNT1 A 0 A_JumpIfInventory("QuadAkimboMode", 1,"ReadyDualWield")
		QSSG A 1 A_DoPBWeaponAction(wrf_allowreload)
		Loop
		
	ReadyDualWield:
		TNT1 A 0 {
			A_SetRoll(0);
			PB_HandleCrosshair(92);
			A_TakeInventory("PB_LockScreenTilt",1);
			A_SetFiringRightWeapon(False);
			A_SetFiringLeftWeapon(False);
			A_TakeInventory("DualFiring",1);
			if(CountInv("LeftQSSGAmmoCounter") < CountInv("QSSGAmmoCounter")){
				A_GiveInventory("DualFiring",1);
			}
			if(CountInv("NewShell")>0){
				if(CountInv("LeftQSSGAmmoCounter")<=0){
					A_GiveInventory("DualFireReload",1);
				}
				if(CountInv("QSSGAmmoCounter")<=0){
					A_GiveInventory("DualFireReload",1);
				}
			}
			A_Overlay(10, "IdleLeft_Overlay", true);
			A_Overlay(11, "IdleRight_Overlay", true);
		}
	DualFireCheck:
		TNT1 A 0 {
			if((PressingFire() || JustPressed(BT_ATTACK)) && !A_IsFiringLeftWeapon() || ((PressingAltfire() || JustPressed(BT_ALTATTACK)) && !A_IsFiringRightWeapon())){ 
				Return State("FireDualBlank");
				}
				Return State("");
			}
	ReadyToFireDualWield:
		TNT1 A 1 A_DoPBWeaponAction(WRF_ALLOWRELOAD | WRF_NOFIRE)
		Goto DualFireCheck

	FireDualBlank:
		TNT1 A 0 A_JumpIfInventory("DualFireReload",2,"AltFireDualBlank")
		TNT1 A 12 A_WeaponReady(WRF_NOSWITCH | WRF_NOFIRE)
		Goto DualFireCheck

	AltFireDualBlank: 
		TNT1 A 0
		Goto DualFireReload
	
	IdleLeft_Overlay:
		Q2LG A 1 {
			if(CountInv("LeftQSSGAmmoCounter")<=0 && CountInv("QSSGAmmoCounter")>0){
				A_GiveInventory("DualFiring",1);
			}
			if(CountInv("DualFiring")==0 || (CountInv("DualFiring")==0 && CountInv("QSSGAmmoCounter")<=0) || GetCvar("SingleDualFire")==1){
				if((PressingFire() || JustPressed(BT_ATTACK)) && !A_IsFiringLeftWeapon()){
					if(CountInv("LeftQSSGAmmoCounter") > 0){
						return state("FireLeft_Overlay");
					}
					else {
						A_PlaySoundEx("weapons/empty", "Auto");
						return state("");
					}
				}
			}
			return state("");
		}
		Loop
	IdleRight_Overlay:
		Q2RG A 1 {
			if(CountInv("LeftQSSGAmmoCounter")>0 && CountInv("QSSGAmmoCounter")==0){
				A_TakeInventory("DualFiring",1);
			}
			if(CountInv("DualFiring")==1 || (CountInv("DualFiring")==1) && CountInv("LeftQSSGAmmoCounter") <= 0){
				if((PressingFire() || JustPressed(BT_ATTACK)) && !A_IsFiringLeftWeapon() && GetCvar("SingleDualFire")==0){
					if(CountInv("QSSGAmmoCounter") > 0){
						return state("FireRight_Overlay");
					}
					else {
						A_PlaySoundEx("weapons/empty", "Auto");
						return state("");
					}
				}
			}
			if((PressingAltfire() || JustPressed(BT_ALTATTACK)) && !A_IsFiringRightWeapon()){
				if(CountInv("QSSGAmmoCounter")>0 && GetCvar("SingleDualFire")==1){
					return state("FireRight_Overlay");
				}
				if(CountInv("QSSGAmmoCounter")>0 && CountInv("LeftQSSGAmmoCounter")>0 && GetCvar("SingleDualFire")==0){
					A_Overlay(10, "FireLeft_Overlay", false);
					return state("FireRight_Overlay");
				}
				else {
					A_PlaySoundEx("weapons/empty", "Auto");
					return state("");
				}
			}

			return state("");
		}
		Loop

	FireLeft_Overlay:
        TNT1 A 0 {
			a_takeinventory("DualFiring");
			if (CountInv("FullBlastMode") == 1) {
					if (CountInv("LeftQSSGAmmoCounter") >= 4) {
						A_Recoil(3);
						A_PlaySound("QSGFIRE1", 8);
						A_ZoomFactor(0.915);
						A_TakeInventory("LeftQSSGAmmoCounter", 4);
						if(GetCvar("pb_realdamage")) {
							if(health > 7) { //to ensure that it doesn't kill the player
							A_DamageSelf(7, "None");
							A_PlaySound("*pain50", 13);	
							}
						}
					if (CountInv("BreathMode") != 1) {
						A_FireBullets(0, 0, 2, 110, "shotpuff", 0, 220);
						A_FireProjectile("ShotgunWad",random(-1,1),0,-6,-2,FPF_NOAUTOAIM,random(-1,1));
						A_FireProjectile("ShotgunWad",random(-1,1),0,-10,-2,FPF_NOAUTOAIM,random(-1,1));
						A_FireProjectile("ShotgunWad",random(-1,1),0,-6,-2,FPF_NOAUTOAIM,random(-1,1));
						A_FireProjectile("ShotgunWad",random(-1,1),0,-10,-2,FPF_NOAUTOAIM,random(-1,1));
						A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
						A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
						A_FireBullets(0, 0, 1, 100, "shotpuff", 0, 220);
						 A_FireBullets (17, 9, 10, 10, "ShotgunPuff"); 
						A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
						A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
						A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
						A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0);
						A_FireCustomMissile("GunFireSmoke", 0, 0, -2, 0, 0, 0);
					}
					else {
						A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
						A_FireCustomMissile ("QuadDemonicBreath4Blast", 0.1, 0, -30, -8);
						A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0);
						A_FireCustomMissile("GunFireSmoke", 0, 0, -2, 0, 0, 0);
						A_PlaySound("QSGCHRG", 8);
					}
						return state ("LeftRecoil_FullBlast");
				}
			}
			else if (CountInv("LeftQSSGAmmoCounter") >= 2)  {
						A_Recoil(3);
						A_PlaySound("SSHFIRE", 8);
						A_ZoomFactor(0.915);
						A_TakeInventory("LeftQSSGAmmoCounter", 2);
					if (CountInv("BreathMode") != 1) {
						A_FireProjectile("ShotgunWad",random(-1,1),0,-6,-2,FPF_NOAUTOAIM,random(-1,1));
						A_FireProjectile("ShotgunWad",random(-1,1),0,-10,-2,FPF_NOAUTOAIM,random(-1,1));
						A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
						A_FireBullets(0, 0, 1, 100, "shotpuff", 0, 220);
						A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
						A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
						A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0);
						}
					else {
						A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
						A_FireCustomMissile ("QuadDemonicBreathBlast", 0.1, 0, -30, -8);
						A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0);
						A_FireCustomMissile("GunFireSmoke", 0, 0, -2, 0, 0, 0);
						A_PlaySound("QSGCHRG", 8);
					}
						return state ("LeftRecoil_HalfBlast");
			}
				else {
						A_Recoil(3);
						A_PlaySound("weapons/shh2", 8);
						A_ZoomFactor(0.915);
						A_TakeInventory("LeftQSSGAmmoCounter", 1);
					If (CountInv("BreathMode") != 1) {
						A_FireProjectile("ShotgunWad",random(-1,1),0,-6,-2,FPF_NOAUTOAIM,random(-1,1));
						A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
						A_FireBullets(0, 0, 1, 100, "shotpuff", 0, 220);
						A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
						A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0);
						}
				else {
						A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
						A_FireCustomMissile ("QuadDemonicBreathOneBlast", 0.1, 0, -30, -8);
						A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0);
						A_PlaySound("QSGCHRG", 8);
						A_FireCustomMissile("GunFireSmoke", 0, 0, -2, 0, 0, 0);
						}
					}
			//	}
			return state ("");
		}
		TNT1 A 0 A_JumpIfInventory("NewShell",1,1)
		Goto NoAmmoLeftGun
		Q2L1 D 1 BRIGHT 
		TNT1 A 0 A_ZoomFactor(0.975)
		TNT1 A 0 A_ALERTMONSTERS
		Q2L1 E 1 {
            PB_WeaponRecoil(-6.80,+2.40);
		}
		Q2L1 F 1 {
			A_ZoomFactor(1.0);
            PB_WeaponRecoil(-3.80,+1.40);
		}
		Q2L1 G 1 
		Q2L1 HIJKL 1
		TNT1 A 0 {
			//CountInv("DualFiring")==0
			if(CountInv("LeftQSSGAmmoCounter")<=0 || CountInv("QSSGAmmoCounter")>0){
				A_GiveInventory("DualFiring",1);
			}
		}
		Goto IdleLeft_Overlay
	
	NoAmmoLeftGun:
		Q2LG A 1
		Goto IdleLeft_Overlay
		
	LeftRecoil_FullBlast:
		TNT1 A 0 A_ALERTMONSTERS
		Q2L4 A 1	BRIGHT
		TNT1 A 0 A_ZoomFactor(0.95)
		Q2L4 B 1 BRIGHT
		Q2L4 C 1 {
            PB_WeaponRecoil(-12.80,+7.40);
		}
		Q2L4 D 1 {
			A_ZoomFactor(1.0);
            PB_WeaponRecoil(-8.80,+8.40);
		}
		Q2L4 E 1 {
            PB_WeaponRecoil(-6.80,+4.40);
		}
		Q2L4 FGHIJKL 1 PB_WeaponRecoil(-2.80,+1.40)
		Q2L4 MNOPQRS 1
		Q2L4 T 1 {
			//CountInv("DualFiring")==0
			if(CountInv("LeftQSSGAmmoCounter")<=0 || CountInv("QSSGAmmoCounter")>0){
				A_GiveInventory("DualFiring",1);
			}
		}
		Goto IdleLeft_Overlay
		
	LeftRecoil_HalfBlast:
		TNT1 A 0 A_ALERTMONSTERS
		TNT1 A 0 A_JumpIf(CountInv("LeftQSSGAmmoCounter") >=2, "LeftRecoil_HalfBlast4")
		Q2L2 A 1	BRIGHT
		TNT1 A 0 A_ZoomFactor(0.95)
		Q2L2 B 1 BRIGHT
		Goto LeftRecoil_HalfBlastRecoil
	LeftRecoil_HalfBlast4:
		Q2L2 C 1	BRIGHT
		TNT1 A 0 A_ZoomFactor(0.95)
		Q2L2 D 1 BRIGHT
	LeftRecoil_HalfBlastRecoil:
		Q2L2 E 1 {
            PB_WeaponRecoil(-10.80,+6.40);
		}
		Q2L2 F 1 {
			A_ZoomFactor(1.0);
            PB_WeaponRecoil(-6.80,+4.40);
		}

		Q2L2 GHIJ 1 PB_WeaponRecoil(-2,+0.60)
		Q2L2 KLMN 1
		Q2L2 O 1 {
			//CountInv("DualFiring")==0
			if(CountInv("LeftQSSGAmmoCounter")<=0 || CountInv("QSSGAmmoCounter")>0){
				A_GiveInventory("DualFiring",1);
			}
		}
		Goto IdleLeft_Overlay

	FireRight_Overlay:
        TNT1 A 0 {
			if (CountInv("FullBlastMode") == 1) {
					if (CountInv("QSSGAmmoCounter") >= 4) {
						A_Recoil(3);
						A_PlaySound("QSGFIRE1", 8);
						A_ZoomFactor(0.915);
						A_TakeInventory("QSSGAmmoCounter", 4);
						if(GetCvar("pb_realdamage")) {
							if(health > 7) { //to ensure that it doesn't kill the player
							A_DamageSelf(7, "None");
							A_PlaySound("*pain50", 13);		
							}
						}
					if (CountInv("BreathMode") != 1) {
						A_FireBullets(0, 0, 2, 110, "shotpuff", 0, 220);
						A_FireProjectile("ShotgunWad",random(-1,1),0,6,-2,FPF_NOAUTOAIM,random(-1,1));
						A_FireProjectile("ShotgunWad",random(-1,1),0,10,-2,FPF_NOAUTOAIM,random(-1,1));
						A_FireProjectile("ShotgunWad",random(-1,1),0,10,-2,FPF_NOAUTOAIM,random(-1,1));
						A_FireProjectile("ShotgunWad",random(-1,1),0,6,-2,FPF_NOAUTOAIM,random(-1,1));
						A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
						A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
						A_FireBullets(0, 0, 1, 100, "shotpuff", 0, 220);
						 A_FireBullets (17, 9, 10, 10, "ShotgunPuff"); 
						A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
						A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
						A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
						A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0);
						A_FireCustomMissile("GunFireSmoke", 0, 0, -2, 0, 0, 0);
						}
					else {
						A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
						A_FireCustomMissile ("QuadDemonicBreath4Blast", 0.1, 0, 30, -8);
						A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0);
						A_PlaySound("QSGCHRG", 8);
						A_FireCustomMissile("GunFireSmoke", 0, 0, -2, 0, 0, 0);
					}
						return state ("RightRecoil_FullBlast");
				}
			}
			else if (CountInv("QSSGAmmoCounter") >= 2)  {
						A_Recoil(3);
						A_PlaySound("SSHFIRE", 8);
						A_ZoomFactor(0.915);
						A_TakeInventory("QSSGAmmoCounter", 2);
					if (CountInv("BreathMode") != 1) {
						A_FireProjectile("ShotgunWad",random(-1,1),0,6,-2,FPF_NOAUTOAIM,random(-1,1));
						A_FireProjectile("ShotgunWad",random(-1,1),0,10,-2,FPF_NOAUTOAIM,random(-1,1));
						A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
						A_FireBullets(0, 0, 1, 100, "shotpuff", 0, 220);
						A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
						A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
						A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0);
					}
					else {
						A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
						A_FireCustomMissile ("QuadDemonicBreathBlast", 0.1, 0, 30, -8);
						A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0);
						A_PlaySound("QSGCHRG", 8);
						A_FireCustomMissile("GunFireSmoke", 0, 0, -2, 0, 0, 0);
					}
						return state ("RightRecoil_HalfBlast");
			}
				else {
						A_Recoil(3);
						A_PlaySound("weapons/shh2", 8);
						A_ZoomFactor(0.915);
						A_TakeInventory("QSSGAmmoCounter", 1);
					if (CountInv("BreathMode") != 1) {
						A_FireProjectile("ShotgunWad",random(-1,1),0,6,-2,FPF_NOAUTOAIM,random(-1,1));
						A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
						A_FireBullets(0, 0, 1, 100, "shotpuff", 0, 220);
						A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
						A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0);
					}
					else {
						A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
						A_FireCustomMissile ("QuadDemonicBreathOneBlast", 0.1, 0, 30, -8);
						A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0);
						A_FireCustomMissile("GunFireSmoke", 0, 0, -2, 0, 0, 0);
						A_PlaySound("QSGCHRG", 8);
						}
					}
			RETURN STATE ("");
		}
		TNT1 A 0 A_JumpIfInventory("NewShell",1,1)
		Goto NoAmmoRightGun
		Q1L1 D 1 BRIGHT 
		TNT1 A 0 A_ZoomFactor(0.975)
		TNT1 A 0 A_ALERTMONSTERS
		Q1L1 E 1 {
            PB_WeaponRecoil(-6.80,-2.40);
		}
		Q1L1 F 1 {
			A_ZoomFactor(1.0);
            PB_WeaponRecoil(-3.80,-1.40);
		}
		Q1L1 G 1 
		Q1L1 HIJKL 1
		TNT1 A 0 {
			//CountInv("DualFiring")==0
			if(CountInv("LeftQSSGAmmoCounter")<=0 || CountInv("QSSGAmmoCounter")>0){
				A_GiveInventory("DualFiring",1);
			}
		}
		Goto IdleRight_Overlay
	
	NoAmmoRightGun:
		Q2RG A 1
		Goto IdleRight_Overlay
		
	RightRecoil_FullBlast:
		TNT1 A 0 A_ALERTMONSTERS
		Q1L4 A 1	BRIGHT
		TNT1 A 0 A_ZoomFactor(0.95)
		Q1L4 B 1 BRIGHT
		Q1L4 C 1 {
            PB_WeaponRecoil(-12.80,-8.40);
		}
		Q1L4 D 1 {
			A_ZoomFactor(1.0);
            PB_WeaponRecoil(-8.80,-8.40);
		}
		Q1L4 E 1 {
            PB_WeaponRecoil(-6.80,-4.40);
		}
		Q1L4 FGHIJKL 1 PB_WeaponRecoil(-2,-0.60)
		Q1L4 MNOPQRS 1
		Q1L4 T 1 {
			//CountInv("DualFiring")==0
			if(CountInv("LeftQSSGAmmoCounter")<=0 || CountInv("QSSGAmmoCounter")>0){
				A_GiveInventory("DualFiring",1);
				}
			}
		TNT1 A 0 {
			if(CountInv("QSSGAmmoCounter")<=0){
				A_GiveInventory("DualFireReload",1);
			}
		}
		Goto IdleRight_Overlay

	RightRecoil_HalfBlast:		
		TNT1 A 0 A_ALERTMONSTERS
		TNT1 A 0 A_JumpIf(CountInv("QSSGAmmoCounter") >=2, "RightRecoil_HalfBlast4")
		Q1L2 A 1	BRIGHT
		TNT1 A 0 A_ZoomFactor(0.95)
		Q1L2 B 1 BRIGHT
		Goto RightRecoil_HalfBlastRecoil
	RightRecoil_HalfBlast4:
		Q1L2 C 1	BRIGHT
		TNT1 A 0 A_ZoomFactor(0.95)
		Q1L2 D 1 BRIGHT
	RightRecoil_HalfBlastRecoil:
		Q1L2 E 1 {
            PB_WeaponRecoil(-10.80,-6.40);
		}
		Q1L2 F 1 {
			A_ZoomFactor(1.0);
            PB_WeaponRecoil(-6.80,-4.40);
		}

		Q1L2 GHIJ 1 PB_WeaponRecoil(-2,-0.60)
		Q1L2 KLMN 1
		Q1L2 O 1 {
			//CountInv("DualFiring")==0
			if(CountInv("LeftQSSGAmmoCounter")>=0 || CountInv("QSSGAmmoCounter")<=0){
				A_TakeInventory("DualFiring",1);
			}
		}
		TNT1 A 0 {
			if(CountInv("LeftQSSGAmmoCounter")<=0){
				A_GiveInventory("DualFireReload",1);
			}
		}
		Goto IdleRight_Overlay

	WeaponSpecial:
		TNT1 A 0 {
			A_GiveInventory("PB_LockScreenTilt",1);
			A_Takeinventory("GoWeaponSpecialAbility",1);
			A_Takeinventory("Zoomed",1);
			A_Takeinventory("ADSmode",1);
			PB_HandleCrosshair(43);
			A_ZoomFactor(1.0);
			A_ClearOverlays(10,11);
			A_PlaySoundEx("Ironsights", "Auto");
		}
		
		TNT1 A 0 A_JumpIfInventory("SelectDualWieldQuads", 1, "DualWield")
		TNT1 A 0 A_JumpIfInventory("BreathToggle", 1, "ToggleBreath")
		TNT1 A 0 A_JumpIfInventory("BlastToggle", 1, "ToggleFullBlast")
		goto Ready3
	DualWield:
		TNT1 A 0 {
			A_Takeinventory("BlastToggle",1);
			A_Takeinventory("SelectDualWieldQuads",1);
			A_Takeinventory("BreathToggle",1);
		}
		TNT1 A 0 A_JumpIfInventory("PB_QuadSG", 2, "DualWieldSelect")
		TNT1 A 0 A_Print("You need two Quad Shotguns to dual wield!")
		goto ready3
	DualWieldSelect:
		TNT1 A 0 {
			A_PlaySoundEx("Ironsights", "Auto");
			if (A_CheckAkimbo()) {
				A_SetAkimbo(False);
				A_TakeInventory("QuadAkimboMode", 1);
				return state("SwitchFromDualWield");
			}
			else {
				A_SetAkimbo(True);
				A_GiveInventory("QuadAkimboMode", 1);
				return state("");
			}
		}
		QAKS CD 1
		TNT1 A 0 A_PlaySound("CLIPINSS")
		QAKS EFGHIJKL 1
		Goto ReadyDualWield
	SwitchFromDualWield:
		TNT1 A 0 A_TakeInventory("QuadAkimboMode", 1)
		QAKS LKJIHGFE 1
		TNT1 A 0 A_PlaySound("CLIPINSS")
		QAKS DC 1
		goto Ready3
	
	ToggleBreath:
		TNT1 A 0 {
			A_Takeinventory("BlastToggle",1);
			A_Takeinventory("SelectDualWieldQuads",1);
			A_Takeinventory("BreathToggle",1);
		}
		TNT1 A 0 A_JumpIfInventory("QuadAkimboMode", 1, "ToggleBreathAkimbo")
		TNT1 A 0 A_JumpIfInventory("BreathMode", 1,"ToggleStandardMode")
		TNT1 A 0 A_Giveinventory("BreathMode",1)
		QSMS ABCDEFGH 1
		TNT1 A 0 A_Print("Demonic breath mode")
		TNT1 A 0 A_Playsound("CLIPINQS")
		QSMS KLMNNMLKJGFEDCBA 1
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		Goto Ready3
		
	ToggleStandardMode:
		TNT1 A 0 A_Takeinventory("BreathMode",1)
		QSMS ABCDEFGH 1
		TNT1 A 0 A_Print("Shells mode")
		TNT1 A 0 A_Playsound("CLIPINQS")
		QSMS KLMNNMLKJGFEDCBA 1
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		Goto Ready3

	ToggleBreathAkimbo:
		TNT1 A 0 A_JumpIfInventory("BreathMode", 1,"ToggleStandardModeAkimbo")
		TNT1 A 0 A_Giveinventory("BreathMode",1)
		QS2M CDEFGGGG 1
		TNT1 A 0 A_Print("Demonic breath mode")
		TNT1 A 0 A_Playsound("CLIPINQS")
		QS2M HIJJJIHGGFEDC 1
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		Goto Ready3
	
	ToggleStandardModeAkimbo:
		TNT1 A 0 A_Takeinventory("BreathMode",1)
		QS2M CDEFGGGG 1
		TNT1 A 0 A_Print("Shells mode")
		TNT1 A 0 A_Playsound("CLIPINQS")
		QS2M HIJJJIHGGFEDC 1
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		Goto Ready3

	ToggleFullBlast:
		TNT1 A 0 {
			A_Takeinventory("BlastToggle",1);
			A_Takeinventory("SelectDualWieldQuads",1);
			A_Takeinventory("BreathToggle",1);
		}
		TNT1 A 0 A_JumpIfInventory("QuadAkimboMode", 1, "ToggleFullBlastAkimbo")
		TNT1 A 0 A_JumpIfInventory("FullBlastMode", 1,"ToggleHalfBlastMode")
		TNT1 A 0 A_Giveinventory("FullBlastMode",1)
		QSMS ABCDEFGH 1
		TNT1 A 0 A_Print("Full Blast Mode")
		TNT1 A 0 A_Playsound("CLIPINQS")
		QSMS KLMNNMLKJGFEDCBA 1
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		Goto Ready3

	ToggleFullBlastAkimbo:
		TNT1 A 0 A_JumpIfInventory("FullBlastMode", 1,"ToggleHalfModeAkimbo")
		TNT1 A 0 A_Giveinventory("FullBlastMode",1)
		QS2M CDEFGGGG 1
		TNT1 A 0 A_Print("Full blast mode")
		TNT1 A 0 A_Playsound("CLIPINQS")
		QS2M HIJJJIHGGFEDC 1
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		Goto Ready3
		
	ToggleHalfBlastMode:
		TNT1 A 0 A_Takeinventory("FullBlastMode",1)
		QSMS ABCDEFGH 1
		TNT1 A 0 A_Print("Half Blast Mode")
		TNT1 A 0 A_Playsound("CLIPINQS")
		QSMS KLMNNMLKJGFEDCBA 1
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		Goto Ready3
	
	ToggleHalfModeAkimbo:
		TNT1 A 0 A_takeinventory("FullBlastMode",1)
		QS2M CDEFGGGG 1
		TNT1 A 0 A_Print("Half blast mode")
		TNT1 A 0 A_Playsound("CLIPINQS")
		QS2M HIJJJIHGGFEDC 1
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		Goto Ready3
		
	Fire:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(41);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		TNT1 A 0 A_JumpIf(A_CheckAkimbo(), "DualFireCheck")
		TNT1 A 0 A_JumpIfInventory("FullBlastMode", 1,"FullBlast")
		Goto HalfBlast
		
	FullBlast:
		TNT1 A 0 A_TakeInventory("Reloading", 1)
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 4, 1)
		Goto HalfBlast
        TNT1 AAAAA 0
        TNT1 A 0 A_Recoil(3)
        QSF4 A 1 BRIGHT A_PlaySound("QSGFIRE1", 8)//NEED A LOUDER FUCKING BANG
		TNT1 A 0 A_ZoomFactor(0.915)
		TNT1 A 0 A_TakeInventory("QSSGAmmoCounter", 4)
		TNT1 A 0 {
		A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
		A_FireCustomMissile("YellowFlareSpawn", -15, 0, 0, 0);
			If (CountInv("BreathMode") != 1) {
			A_FireBullets(0, 0, 1, 100, "shotpuff", 0, 220);
			A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
			A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
			A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
			A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
			A_FireBullets (17, 9, 10, 10, "ShotgunPuff");
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			}
		else	{
			A_FireCustomMissile("QuadDemonicBreath4Blast");
 			A_FireCustomMissile("ShakeYourAssDouble");
			A_PlaySound("QSGCHRG", 8);
			}
		}
		QSF4 B 1 BRIGHT

		TNT1 AAAA 0 A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0)
		TNT1 AAAA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, -2, 0, 0, 0)
		TNT1 A 0 A_ZoomFactor(0.950)
		TNT1 A 0 PB_WeaponRecoil(-16,0)
		TNT1 A 0 A_ZoomFactor(0.965)
		QSF4 C 1
		TNT1 A 0 PB_WeaponRecoil(-8,0)
		TNT1 A 0 A_ZoomFactor(0.985)
		QSF4 D 1
		TNT1 A 0 PB_WeaponRecoil(-4,0)
		TNT1 A 0 A_ZoomFactor(0.995)
		QSF4 E 1
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("Reloading", 1)
        QSF4 FGHIJK 1
		QSF4 LMNOPQR 1 A_DoPBWeaponAction(WRF_NOFIRE)
		QSSG A 4  A_DoPBWeaponAction(WRF_NOFIRE)
		TNT1 A 0 A_JumpIfInventory("NewShell", 1, 1)
		Goto RealReady
		TNT1 A 0
		Goto Reload
	
	//Note: Right barrel fires FIRST, followed by left SECOND
	HalfBlast:
		TNT1 A 0 A_TakeInventory("Reloading", 1)
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 4, "FireRightBarrels")
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 2, "FireLeftBarrels")
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 1, "FireLeftSingleBarrel")
		Goto Reload
		
	FireRightBarrels:
        TNT1 AAAAA 0
        TNT1 A 0 A_Recoil(1)
        QSF2 A 1 BRIGHT A_PlaySound("SSHFIRE", 8)//NEED A LOUDER FUCKING BANG
		TNT1 A 0 A_ZoomFactor(0.925)
		TNT1 A 0 A_TakeInventory("QSSGAmmoCounter", 2)
		TNT1 A 0 {
			A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
			A_FireCustomMissile("YellowFlareSpawn", -15, 0, 0, 0);
			If (CountInv("BreathMode") != 1) {
			A_FireBullets(0, 0, 1, 35, "shotpuff", 0, 240);
			A_FireBullets (14, 8, 10, 10, "ShotgunPuff");
			A_FireBullets (14, 8, 10, 10, "ShotgunPuff");
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			}
		else	{
			A_FireCustomMissile("QuadDemonicBreathBlast");
 			A_FireCustomMissile("ShakeYourAssDouble");
			A_PlaySound("QSGCHRG", 8);
			}
		}	
		TNT1 A 0 PB_WeaponRecoil(-12,+0.80) //Add some recoil - sarge945
        QSF2 B 1 BRIGHT
		
	KickbackHalf:
		TNT1 AAAA 0 A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0)
		TNT1 A 0 A_ZoomFactor(0.950)
        QSF2 E 2 BRIGHT
		TNT1 A 0 A_ZoomFactor(0.965)
		QSF2 F 2
		TNT1 A 0 A_ZoomFactor(0.985)
		QSF2 G 1
		TNT1 A 0 A_ZoomFactor(0.995)
		QSF2 H 1 
		TNT1 A 0 A_ZoomFactor(1.0)
        QSF2 I 1 
        QSF2 JKLLLMNOP 1 
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 1, "RealReady")
		Goto Reload
		
	FireLeftBarrels:
        TNT1 AAAAA 0
        TNT1 A 0 A_Recoil(1)

        QSF2 C 1 BRIGHT A_PlaySound("SSHFIRE", 8)//NEED A LOUDER FUCKING BANG
		TNT1 A 0 A_ZoomFactor(0.925)
		TNT1 A 0 A_TakeInventory("QSSGAmmoCounter", 2)
		TNT1 A 0 {
			A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
			A_FireCustomMissile("YellowFlareSpawn", -15, 0, 0, 0);
			If (CountInv("BreathMode") != 1) {
			A_FireBullets(0, 0, 1, 35, "shotpuff", 0, 240);
			A_FireBullets (14, 8, 10, 10, "ShotgunPuff");
			A_FireBullets (14, 8, 10, 10, "ShotgunPuff");
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			}
		else	{
			A_FireCustomMissile("QuadDemonicBreathBlast");
 			A_FireCustomMissile("ShakeYourAss");
			A_PlaySound("QSGCHRG", 8);
			}
		}
		TNT1 A 0 PB_WeaponRecoil(-12,+0.80) //Add some recoil - sarge945
        QSF2 D 1 BRIGHT
		Goto KickbackHalf
		
	AltFire:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(41);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		TNT1 A 0 A_JumpIf(A_CheckAkimbo(), "DualFireCheck")
		TNT1 A 0 A_JumpIfInventory("FullBlastMode", 1,"HalfBlast")
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 3, "FireRightSingleBarrel")
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 1, "FireLeftSingleBarrel")
		Goto Reload
		
	FireRightSingleBarrel:
        TNT1 AAAAA 0
        TNT1 A 0 A_Recoil(1)
		QSF1 D 0 A_JumpIfInventory("QSSGAmmoCounter", 4, 2)
		QSF1 C 0
		"####" "#" 0
        QSF1 "#" 1 BRIGHT A_PlaySound("weapons/shh2", 8)//NEED A LOUDER FUCKING BANG
		TNT1 A 0 A_ZoomFactor(0.925)
		TNT1 A 0 A_TakeInventory("QSSGAmmoCounter", 1)
		TNT1 A 0 {
		A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
		A_FireCustomMissile("YellowFlareSpawn", -15, 0, 0, 0);
			If (CountInv("BreathMode") != 1) {
			A_FireBullets (11, 7, 10, 10, "ShotgunPuff");
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			}
		else	{
			A_FireCustomMissile("QuadDemonicBreathOneBlast");
 			A_FireCustomMissile("ShakeYourAss");
			A_PlaySound("QSGCHRG", 8);
			}
		}
		TNT1 A 0 PB_WeaponRecoil(-3.0,+2.0) //Add some recoil - sarge945
		TNT1 AAAA 0 A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0)
		TNT1 A 0 A_ZoomFactor(0.950)
        QSF1 EF 1
		TNT1 A 0 A_ZoomFactor(0.965)
		QSF1 GH 1 
		TNT1 A 0 A_ZoomFactor(0.985)
		QSF1 IJKL 1
		TNT1 A 0 A_ZoomFactor(1.0)
		Goto RealReady
		
	FireLeftSingleBarrel:
        TNT1 AAAAA 0
        TNT1 A 0 A_Recoil(1)
		QSF1 B 0 A_JumpIfInventory("QSSGAmmoCounter", 2, 2)
		QSF1 A 0
        QSF1 "#" 1 BRIGHT A_PlaySound("weapons/shh2", 8)
		TNT1 A 0 A_TakeInventory("QSSGAmmoCounter", 1)
        TNT1 A 0 {
		A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0);
		A_FireCustomMissile("YellowFlareSpawn", -15, 0, 0, 0);
			If (CountInv("BreathMode") != 1) {
			A_FireBullets (11, 7, 10, 10, "ShotgunPuff");
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7));
			}
		else	{
			A_FireCustomMissile("QuadDemonicBreathOneBlast");
 			A_FireCustomMissile("ShakeYourAss");	
			A_PlaySound("QSGCHRG", 8);
			}
		}
		TNT1 A 0 PB_WeaponRecoil(-3.0,+2.0) 
		TNT1 AA 0 A_FireCustomMissile("GunFireSmokE", 0, 0, -2, 0, 0, 0)
		TNT1 A 0 A_ZoomFactor(0.950)
        QSF1 EF 1
		TNT1 A 0 A_ZoomFactor(0.965)
		QSF1 GH 1 
		TNT1 A 0 A_ZoomFactor(0.985)
		QSF1 IJKL 1
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 1, "RealReady")
		Goto Reload
		
	DualFireReload:
		TNT1 A 0 A_TakeInventory("DualFiring",1)
		TNT1 A 0 A_TakeInventory("DualFireReload", 2)
		TNT1 A 0 {
			If (CountInv("QSSGAmmoCounter") != 4 && CountInv("NewShell") > 0) {
				A_ClearOverlays(10, 14);
				return state ("ReloadAkimboRight");
				}
			Else If (CountInv("LeftQSSGAmmoCounter") != 4 && CountInv("NewShell") > 0) {
				A_ClearOverlays(10, 14);
				return state ("ReloadAkimboOnlyLeftBegin");
				}
			return state ("");
			}
		Goto Ready3
	ReloadAkimboRight:
		QAKS NOPQR 1
		TNT1 A 6
		QSSG IJKLMNOPQ 1
	    TNT1 A 0 A_PlaySound("QSGOPN", 8)
		QRS3 A 0 A_JumpIfInventory("QSSGAmmoCounter", 3, 4)
		QRS2 A 0 A_JumpIfInventory("QSSGAmmoCounter", 2, 3)
		QRS1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 1, 2)
		QRS0 A 0
		"####" A 0
		"####" A 0 {
				If (CountInv("QuadShotgunHasUnloaded") != 1) {	
					If (CountInv("QSSGAmmoCounter") == 0) {
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
						}
					else if (CountInv("QSSGAmmoCounter") == 1) {
							A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							}
					else if (CountInv("QSSGAmmoCounter") == 2) {
							A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							}
					else if (CountInv("QSSGAmmoCounter") == 3) {
							A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							}
					}
			}
		"####" ABCDEFGH 1
		"####" A 0 A_TakeInventory("QuadShotgunHasUnloaded", 1)
	InsertShellsAnimationRight:
		QRS3 A 0 A_JumpIfInventory("QSSGAmmoCounter", 3, 4)
		QRS2 A 0 A_JumpIfInventory("QSSGAmmoCounter", 2, 3)
		QRS1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 1, 2)
		QRS0 A 0
		"####" IIIII 1
		"####" A 0 {
			if (CountInv("QSSGAmmoCounter") == 3 || CountInv("NewShell") == 1) 
				{
					return state ("InsertOneByOneRight");
				}
			return state ("");
			}
		QRS2 A 0 A_JumpIfInventory("QSSGAmmoCounter", 2, 3)
		QRS1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 1, 2)
		QRS0 A 0
		"####" A 0
		"####" JKLMN 1
        "####" A 0 A_PlaySound("QSGIN", 9)
		"####" OPQRSTUV 1
		"####" A 0 A_TakeInventory("NewShell", 2)
		"####" A 0 A_GiveInventory("QSSGAmmoCounter", 2)
		"####" A 0 {
			if (CountInv("QSSGAmmoCounter") == 3 && CountInv("NewShell") >= 1) 
				{
					return state ("InsertOneByOneRight");
				}
			else if (CountInv("QSSGAmmoCounter") != 4 && CountInv ("NewShell") >= 2) 
			{
				return state ("InsertShellsAnimationRight");
			}	
			else if (CountInv("QSSGAmmoCounter") != 4 && CountInv("NewShell") >= 1) 
				{
					return state ("InsertOneByOneRight");
				}
			else {
				return state ("FinishReloadRight");
			}
			return state ("");
		}
		Loop
	InsertOneByOneRight:
		Q1R4 A 0 A_JumpIfInventory("QSSGAmmoCounter", 3, 4)
		Q1R3 A 0 A_JumpIfInventory("QSSGAmmoCounter", 2, 3)
		Q1R2 A 0 A_JumpIfInventory("QSSGAmmoCounter", 1, 2)
		Q1R1 A 0
		"####" ABCD 1
	InsertOneByOneInsertRight:
		"####" EEE 1
		"####" A 0 A_PlaySoundEx("weapons/qsg/singlein", "Auto")
		"####" GHIII 1
		"####" A 0 {
			A_TakeInventory("NewShell", 1);
			A_GiveInventory("QSSGAmmoCounter", 1);
		}
		"####" A 0 {
			if (CountInv("QSSGAmmoCounter") == 4 || CountInv("NewShell") == 0) {
				return state ("FinishReloadFromOneByOneRight");
			}
			return state ("");
		}
		"####" HFE 1
		Loop
	FinishReloadFromOneByOneRight:
		"####" JKL 1
	FinishReloadRight:	
		QRU4 A 0 A_JumpIfInventory("QSSGAmmoCounter", 4, 4)
		QRU3 A 0 A_JumpIfInventory("QSSGAmmoCounter", 3, 3)
		QRU2 A 0 A_JumpIfInventory("QSSGAmmoCounter", 2, 2)
		QRU1 A 0
		"####" A 0
		"####" ABCD 1
        TNT1 A 0 A_PlaySound("QSGCLSE", 8)
		QSS1 RSTUVWXYZ 1
		QSS2 AEFG 1
		TNT1 A 8
		TNT1 A 0 {
			if (CountInv("LeftQSSGAmmoCounter") != 4 && CountInv("NewShell") >= 1) {
				A_ClearOverlays(10, 14);
				return state ("ReloadAkimboOnlyLeft");
				}
			return state ("");
			}
		QAKS RQPON 1
        Goto RealReady
	ReloadAkimboOnlyLeftBegin:
		QAKS NOPQR 1
		TNT1 A 6
	ReloadAkimboOnlyLeft:
		QSSG IJKLMNOPQ 1
	    TNT1 A 0 A_PlaySound("QSGOPN", 8)
		QRS3 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 3, 4)
		QRS2 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 2, 3)
		QRS1 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 1, 2)
		QRS0 A 0
		"####" A 0
		"####" A 0 {
				If (CountInv("LeftQuadShotgunHasUnloaded") != 1) {	
					If (CountInv("LeftQSSGAmmoCounter") == 0) {
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
						}
					else if (CountInv("LeftQSSGAmmoCounter") == 1) {
							A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							}
					else if (CountInv("LeftQSSGAmmoCounter") == 2) {
							A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							}
					else if (CountInv("LeftQSSGAmmoCounter") == 3) {
							A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							}
					}
			}
		"####" a 0 A_TakeInventory("LeftQuadShotgunHasUnloaded", 1)
		"####" ABCDEFGH 1
	InsertShellsAnimationLeft:
		QRS3 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 3, 4)
		QRS2 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 2, 3)
		QRS1 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 1, 2)
		QRS0 A 0
		"####" IIIII 1
		"####" A 0 {
			if (CountInv("LeftQSSGAmmoCounter") == 3 || CountInv("NewShell") == 1) 
				{
					return state ("InsertOneByOneLeft");
				}
			return state ("");
			}
		QRS2 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 2, 3)
		QRS1 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 1, 2)
		QRS0 A 0
		"####" A 0
		"####" JKLMN 1
        "####" A 0 A_PlaySound("QSGIN", 9)
		"####" OPQRSTUV 1
		"####" A 0 A_TakeInventory("NewShell", 2)
		"####" A 0 A_GiveInventory("LeftQSSGAmmoCounter", 2)
		"####" A 0 {
			if (CountInv("LeftQSSGAmmoCounter") == 3 && CountInv("NewShell") >= 1) 
				{
					return state ("InsertOneByOneLeft");
				}
			else if (CountInv("LeftQSSGAmmoCounter") != 4 && CountInv ("NewShell") >= 2) 
			{
				return state ("InsertShellsAnimationLeft");
			}	
			else if (CountInv("LeftQSSGAmmoCounter") != 4 && CountInv("NewShell") >= 1) 
				{
					return state ("InsertOneByOneLeft");
				}
			else {
				return state ("FinishReloadLeft");
			}
			return state ("");
		}
		Loop
	InsertOneByOneLeft:
		Q1R4 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 3, 4)
		Q1R3 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 2, 3)
		Q1R2 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 1, 2)
		Q1R1 A 0
		"####" ABCD 1
	InsertOneByOneInsertLeft:
		"####" EEE 1
		"####" A 0 A_PlaySoundEx("weapons/qsg/singlein", "Auto")
		"####" GHIII 1
		"####" A 0 {
			A_TakeInventory("NewShell", 1);
			A_GiveInventory("LeftQSSGAmmoCounter", 1);
		}
		"####" A 0 {
			if (CountInv("LeftQSSGAmmoCounter") == 4 || CountInv("NewShell") == 0) {
				return state ("FinishReloadFromOneByOneLeft");
			}
			return state ("");
		}
		"####" HFE 1
		Loop
	FinishReloadFromOneByOneLeft:
		"####" JKL 1
	FinishReloadLeft:	
		QRU4 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 4, 4)
		QRU3 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 3, 3)
		QRU2 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 2, 2)
		QRU1 A 0
		"####" A 0
		"####" ABCD 1
        TNT1 A 0 A_PlaySound("QSGCLSE", 8)
		QSS1 RSTUVWXYZ 1
		QSS2 AEFG 1
		TNT1 A 8
		QAKS RQPON 1
        Goto RealReady
	
	Reload:
		TNT1 A 0 A_TakeInventory("Reloading",1)
		TNT1 A 0 A_JumpIfInventory("QuadAkimboMode", 1, "DualFireReload")
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 4, "RealReady")
		TNT1 A 0 A_JumpIfInventory("NewShell", 2, 1)
		Goto Ready3
		TNT1 A 0
		QSSG DEFGHIJKLM 1 A_DoPBWeaponAction(WRF_NOFIRE)
		QSSG NOPQ 1
	    TNT1 A 0 A_PlaySound("QSGOPN", 8)
		QRS3 A 0 A_JumpIfInventory("QSSGAmmoCounter", 3, 4)
		QRS2 A 0 A_JumpIfInventory("QSSGAmmoCounter", 2, 3)
		QRS1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 1, 2)
		QRS0 A 0
		"####" A 0 
		"####" A 0 {
				If (CountInv("QuadShotgunHasUnloaded") != 1) {	
					If (CountInv("QSSGAmmoCounter") == 0) {
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
						}
					else if (CountInv("QSSGAmmoCounter") == 1) {
							A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							}
					else if (CountInv("QSSGAmmoCounter") == 2) {
							A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							}
					else if (CountInv("QSSGAmmoCounter") == 3) {
							A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
							}
					}
			}
		"####" ABCDEFGH 1
		TNT1 A 0 A_TakeInventory("QuadShotgunHasUnloaded", 1)
	InsertShellsAnimation:
		QRS3 A 0 A_JumpIfInventory("QSSGAmmoCounter", 3, 4)
		QRS2 A 0 A_JumpIfInventory("QSSGAmmoCounter", 2, 3)
		QRS1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 1, 2)
		QRS0 A 0
		"####" IIIII 1
		"####" A 0 {
			if (CountInv("QSSGAmmoCounter") == 3 || CountInv("NewShell") == 1) 
				{
					return state ("InsertOneByOne");
				}
			return state ("");
			}
		QRS2 A 0 A_JumpIfInventory("QSSGAmmoCounter", 2, 3)
		QRS1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 1, 2)
		QRS0 A 0
		"####" A 0
		"####" JKLMN 1
        "####" A 0 A_PlaySound("QSGIN", 9)
		"####" OPQRSTUV 1
		"####" A 0 A_TakeInventory("NewShell", 2)
		"####" A 0 A_GiveInventory("QSSGAmmoCounter", 2)
		"####" A 0 {
			if (CountInv("QSSGAmmoCounter") == 3 && CountInv("NewShell") >= 1) 
				{
					return state ("InsertOneByOne");
				}
			else if (CountInv("QSSGAmmoCounter") != 4 && CountInv ("NewShell") >= 2) 
			{
				return state ("InsertShellsAnimation");
			}	
			else if (CountInv("QSSGAmmoCounter") != 4 && CountInv("NewShell") >= 1) 
				{
					return state ("InsertOneByOne");
				}
			else {
				return state ("FinishReload");
			}
			return state ("");
		}
		Loop
	InsertOneByOne:
		Q1R4 A 0 A_JumpIfInventory("QSSGAmmoCounter", 3, 4)
		Q1R3 A 0 A_JumpIfInventory("QSSGAmmoCounter", 2, 3)
		Q1R2 A 0 A_JumpIfInventory("QSSGAmmoCounter", 1, 2)
		Q1R1 A 0
		"####" ABCD 1
	InsertOneByOneInsert:
		"####" EEE 1
		"####" A 0 A_PlaySoundEx("weapons/qsg/singlein", "Auto")
		"####" GHIII 1
		"####" A 0 {
			A_TakeInventory("NewShell", 1);
			A_GiveInventory("QSSGAmmoCounter", 1);
		}
		"####" A 0 {
			if (CountInv("QSSGAmmoCounter") == 4 || CountInv("NewShell") == 0) {
				return state ("FinishReloadFromOneByOne");
			}
			return state ("");
		}
		"####" HFE 1
		Loop
	FinishReloadFromOneByOne:
		"####" JKL 1
	FinishReload:	
		QRU4 A 0 A_JumpIfInventory("QSSGAmmoCounter", 4, 4)
		QRU3 A 0 A_JumpIfInventory("QSSGAmmoCounter", 3, 3)
		QRU2 A 0 A_JumpIfInventory("QSSGAmmoCounter", 2, 2)
		QRU1 A 0
		"####" A 0
		"####" ABCD 1
        TNT1 A 0 A_PlaySound("QSGCLSE", 8)
		QSS1 RSTUV 1
		QSS1 WXYZ 1
		QSS2 ABCD 1
        Goto RealReady
		
	UnloadAkimbo:
		TNT1 A 0{
			If (CountInv("LeftQSSGAmmoCounter") > 0 || CountInv("QSSGAmmoCounter") > 0) {
					A_ClearOverlays(10, 14);
					return state ("UnloadAkimboReal");
				}
			return state ("");
		}
		Goto Ready3
	
	UnloadAkimboReal:
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		QAKS NOPQR 1
		TNT1 A 8 
		TNT1 A 0 {
			If (CountInv("QSSGAmmoCounter") > 0) {
					return state ("UnloadAkimboRight");
				}
			else if (CountInv("LeftQSSGAmmoCounter") > 0) {
					return state ("UnloadAkimboLeft");
			}
			else {
				return state ("");
			}
		}
	UnloadAkimboRight:
		QSSG IJKLMNOPQ 1
		tnt1 a 0 a_giveinventory ("QuadShotgunHasUnloaded", 1)
		TNT1 A 0 A_PlaySound("QSGOPN", 8)
		QRS4 A 0 A_JumpIfInventory("QSSGAmmoCounter", 4, 4)
		QRS3 A 0 A_JumpIfInventory("QSSGAmmoCounter", 3, 3)
		QRS2 A 0 A_JumpIfInventory("QSSGAmmoCounter", 2, 2)
		QRS1 A 0
		"####" A 0
		"####" ABCD 1
		"####" A 0 {
			if (CountInv("QSSGAmmoCounter") == 1) 
				{
					return state ("TakeOneByOne");
				}
			return state ("");
			}
	UnloadAnimationAkimboRight:
		QRS2 A 0 A_JumpIfInventory("QSSGAmmoCounter", 4, 3)
		QRS1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 3, 2)
		QRS0 A 0
		"####" QPO 1
        "####" A 0 A_PlaySound("QSGIN", 9)
		"####" NMLKJIII 1
		"####" A 0 A_TakeInventory("QSSGAmmoCounter", 2)
		"####" A 0 A_GiveInventory("NewShell", 2)
		"####" A 0 {
			 if (CountInv("QSSGAmmoCounter") >= 2) 
			{
				return state ("UnloadAnimationAkimboRight");
			}	
			else if (CountInv("QSSGAmmoCounter") == 1) 
				{
					return state ("TakeOneByOneAkimboRight");
				}
			else {
				return state ("FinishUnloadAkimboRight");
			}
			return state ("");
		}
		Loop
	TakeOneByOneAkimboRight:
		Q1R1 IIH 1
		"####" A 0 A_PlaySoundEx("weapons/qsg/singlein", "Auto")
		"####" A 0 {
			A_TakeInventory("QSSGAmmoCounter", 1);
			A_GiveInventory("NewShell", 1);
		}
		Q1R1 GFEDCBA 1
		Goto FinishUnloadAkimboRight
	FinishUnloadAkimboRight:
		QRU0 ABCD 1
        TNT1 A 0 A_PlaySound("QSGCLSE", 8)
		QSS1 RSTUVWXYZ 1
		QSS2 AEFG 1
		TNT1 A 8
		TNT1 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 1, "UnloadAkimboLeft")
		QAKS RQPON 1
        Goto RealReady
		
	UnloadAkimboLeft:
		QSSG IJKLMNOPQ 1
		TNT1 A 0 A_GiveInventory("LeftQuadShotgunHasUnloaded")
		TNT1 A 0 A_PlaySound("QSGOPN", 8)
		QRS4 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 4, 4)
		QRS3 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 3, 3)
		QRS2 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 2, 2)
		QRS1 A 0
		"####" A 0
		"####" ABCD 1
		"####" A 0 {
			if (CountInv("LeftQSSGAmmoCounter") == 1) 
				{
					return state ("TakeOneByOneAkimboLeft");
				}
			return state ("");
			}
	UnloadAnimationAkimboLeft:
		QRS2 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 4, 3)
		QRS1 A 0 A_JumpIfInventory("LeftQSSGAmmoCounter", 3, 2)
		QRS0 A 0
		"####" QPO 1
        "####" A 0 A_PlaySound("QSGIN", 9)
		"####" NMLKJIII 1
		"####" A 0 A_TakeInventory("LeftQSSGAmmoCounter", 2)
		"####" A 0 A_GiveInventory("NewShell", 2)
		"####" A 0 {
			 if (CountInv("LeftQSSGAmmoCounter") >= 2) 
			{
				return state ("UnloadAnimationAkimboLeft");
			}	
			else if (CountInv("LeftQSSGAmmoCounter") == 1) 
				{
					return state ("TakeOneByOneAkimboLeft");
				}
			else {
				return state ("FinishUnloadAkimboLeft");
			}
			return state ("");
		}
		Loop
	TakeOneByOneAkimboLeft:
		Q1R1 IIH 1
		"####" A 0 A_PlaySoundEx("weapons/qsg/singlein", "Auto")
		"####" A 0 {
			A_TakeInventory("QSSGAmmoCounter", 1);
			A_GiveInventory("NewShell", 1);
		}
		Q1R1 GFEDCBA 1
		Goto FinishUnloadAkimboRight
	FinishUnloadAkimboLeft:
		QRU0 ABCD 1
        TNT1 A 0 A_PlaySound("QSGCLSE", 8)
		QSS1 RSTUVWXYZ 1
		QSS2 AEFG 1
		TNT1 A 8
		QAKS RQPON 1
        Goto RealReady

	Unload:
		TNT1 A 0 A_JumpIfInventory("QuadAkimboMode", 1, "UnloadAkimbo")
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		TNT1 A 0 A_Takeinventory("ADSmode",1)
		TNT1 A 0 A_Giveinventory("QuadShotgunHasUnloaded",1)
		TNT1 A 0 A_Takeinventory("Zoomed",1)
        TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter",1,3)
        Goto RealReady
        TNT1 AAA 0
		QSSG DEFGHIJKLMNOPQ 1
	    TNT1 A 0 A_PlaySound("QSGOPN", 8)
		QRS4 A 0 A_JumpIfInventory("QSSGAmmoCounter", 4, 4)
		QRS3 A 0 A_JumpIfInventory("QSSGAmmoCounter", 3, 3)
		QRS2 A 0 A_JumpIfInventory("QSSGAmmoCounter", 2, 2)
		QRS1 A 0
		"####" A 0
		"####" ABCD 1
		"####" A 0 {
			if (CountInv("QSSGAmmoCounter") == 1) 
				{
					return state ("TakeOneByOne");
				}
			return state ("");
			}
	UnloadAnimation:
		QRS2 A 0 A_JumpIfInventory("QSSGAmmoCounter", 4, 3)
		QRS1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 3, 2)
		QRS0 A 0
		"####" QPO 1
        "####" A 0 A_PlaySound("QSGIN", 9)
		"####" NMLKJIII 1
		"####" A 0 A_TakeInventory("QSSGAmmoCounter", 2)
		"####" A 0 A_GiveInventory("NewShell", 2)
		"####" A 0 {
			 if (CountInv("QSSGAmmoCounter") >= 2) 
			{
				return state ("UnloadAnimation");
			}	
			else if (CountInv("QSSGAmmoCounter") == 1) 
				{
					return state ("TakeOneByOne");
				}
			else {
				return state ("FinishUnload");
			}
			return state ("");
		}
		Loop
	TakeOneByOne:
		Q1R1 IIH 1
		"####" A 0 A_PlaySoundEx("weapons/qsg/singlein", "Auto")
		"####" A 0 {
			A_TakeInventory("QSSGAmmoCounter", 1);
			A_GiveInventory("NewShell", 1);
		}
		Q1R1 GFEDCBA 1
		Goto FinishUnload
	FinishUnload:
		QRU0 ABCD 1
        TNT1 A 0 A_PlaySound("QSGCLSE", 8)
		QSS1 RSTUVWXYZ 1
		QSS2 ABCD 1
        Goto RealReady
	
	FlashKicking:
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_JumpIfInventory("QuadAkimboMode", 1, "FlashKickingAkimbo")
		QSHK CDEFGHIIHGFEDC 1
		Stop
		
	FlashKickingAkimbo:
		QAKK CDEFGHIIHGFEDC 1
		Stop
	
	FlashAirKicking:
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_JumpIfInventory("QuadAkimboMode", 1, "FlashAirKickingAkimbo")
		QSHK ABCDEFGHIGFEDCBA 1
		Stop
	
	FlashAirKickingAkimbo:
		QAKK CDEFGHIIIIHGFEDC 1
		Stop
		
	FlashSlideKicking:
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_JumpIfInventory("QuadAkimboMode", 1, "FlashSlideKickingAkimbo")
		QSHK ABCDEFGHIGGGGGGGGIHFEDCBA 1
		QSSG A 2 
		Stop
		
	FlashSlideKickingAkimbo:
		QAKK CDEFGHIIIIIIIIIIIIIIIIHGFEDC 1
		Stop

	FlashSlideKickingStop:
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_JumpIfInventory("QuadAkimboMode", 1, "FlashSlideKickingAkimboStop")
		QSHK FEDCA 1 
		QSSG A 2 
		Stop

	FlashSlideKickingAkimboStop:
		QAKK IHGFEDC 1  
		Stop
		
	FlashPunching:
		TNT1 A 0 A_ClearOverlays(10,11)
		TNT1 A 0 A_JumpIfInventory("QuadAkimboMode", 1, "Nothing")
		QSKH ABCDEFGIFEDCBA 1
		Stop
	Nothing:
		TNT1 A 1
		Stop
	}
}
