// --------------------------------------------------------------------------
//
// QUAD_SSG (SSG)
//
// --------------------------------------------------------------------------
ACTOR QSSGAmmoCounter: Ammo
{
	Inventory.Amount 0
	Inventory.MaxAmount 4
	Ammo.BackpackAmount 0
	Ammo.BackpackMaxAmount 4
	Inventory.Icon "QSGSA0"
}

Actor FullBlastMode : Inventory
{
inventory.maxamount 1
}

Actor QuadShotgunHasUnloaded : Inventory { inventory.maxamount 1}

ACTOR Quad_SSG : PB_Weapon
{
	SpawnID 9360
	Weapon.BobRangeX 0.3
	Weapon.BobRangeY 0.5
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 2.4
	Game Doom
    Weapon.Kickback 50
	//Weapon.SelectionOrder 400
	Weapon.AmmoUse1 0
	Weapon.AmmoUse2 0
	Weapon.AmmoGive1 2
	Weapon.AmmoGive2 0
	Weapon.AmmoType "NewShell"
	Weapon.AmmoType2 "QSSGAmmoCounter"
	+FLOORCLIP
	+DONTGIB
    +WEAPON.NOAUTOAIM
	Tag "Quad-Barrel Shotgun"
	+WEAPON.NOAUTOFIRE
    +WEAPON.MELEEWEAPON
	+POWERED_UP
	+WEAPON.CHEATNOTWEAPON
	Weapon.SisterWeapon ssg
	+COUNTITEM
	Inventory.PickupMessage "You got the Quad-Barrel Shotgun Upgrade! (Slot 3)"
	Obituary "%o was eviscerated by %k's QSG"
    Inventory.PickupSound "CLIPINSS"
	PB_WeaponBase.UnloaderToken "QuadShotgunHasUnloaded"
	States
	{
    Spawn:
		QSGS ABBCCDDCCBB 1 BRIGHT Light("WeaponUpgradeSpawner") //These sprites are temporary. They will be replaced with new sprites soon.
		Loop
		
	Deselect:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(41);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		TNT1 A 0 A_Takeinventory("QuadShotgunHasUnloaded",1)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		TNT1 A 0 A_Takeinventory("Zoomed",1) 
		TNT1 A 0 A_Takeinventory("QSGSelected",1) 
        TNT1 A 0 A_ZoomFactor(1.0)
	    TNT1 A 0 A_StartSound("weapons/changing", 1)
		TNT1 A 0 A_TakeInventory("ADSmode", 1)
		TNT1 A 0 A_JumpIfInventory("GotMeatShield", 1, "GrabEnemy")
        QG20 ABC 1
		QG20 D 1 Offset(0, 36)
		QG20 E 1 Offset(0, 42)
		QG20 F 1 Offset(0,48)
		QG20 G 1 Offset(0,52)
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait
	Select:
		TNT1 A 0
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(41);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		Goto SelectFirstPersonLegs
	SelectContinue:
//		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand")
		TNT1 A 0 A_Takeinventory("QuadShotgunHasUnloaded",1)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		TNT1 A 0 A_TakeInventory("RifleSelected",1)
		TNT1 A 0 A_TakeInventory("CarbineSelected",1)
		TNT1 A 0 A_TakeInventory("FistsSelected",1)
		TNT1 A 0 A_TakeInventory("SawSelected",1)
		TNT1 A 0 A_TakeInventory("SledgeSelected",1)
		TNT1 A 0 A_TakeInventory("HandgunSelected",1)
		TNT1 A 0 A_TakeInventory("DualHandgunSelected",1)
		TNT1 A 0 A_TakeInventory("RevolverSelected",1)
		TNT1 A 0 A_TakeInventory("ShotgunSelected",1)
		TNT1 A 0 A_TakeInventory("SSGSelected",1)
		TNT1 A 0 A_TakeInventory("ASGSelected",1)
		TNT1 A 0 A_GiveInventory("QSGSelected",1)
		TNT1 A 0 A_TakeInventory("MinigunSelected",1)
		TNT1 A 0 A_TakeInventory("NewChaingunSelected",1)	
		TNT1 A 0 A_TakeInventory("RocketLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("GrenadeLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("SGLSelected",1)
		TNT1 A 0 A_TakeInventory("PlasmaGunSelected",1)
		TNT1 A 0 A_TakeInventory("M2Selected",1)	
		TNT1 A 0 A_TakeInventory("FreezerSelected",1)
		TNT1 A 0 A_TakeInventory("RailGunSelected",1)
		TNT1 A 0 A_TakeInventory("BFGSelected",1)
		TNT1 A 0 A_TakeInventory("BFGBeamSelected",1)
		TNT1 A 0 A_TakeInventory("BHCSelected",1)
		TNT1 A 0 A_TakeInventory("RevenantLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("FlameCannonSelected",1)
		TNT1 A 0 A_TakeInventory("HellRifleSelected",1)
		TNT1 A 0 A_TakeInventory("LandMineSelected",1)
		TNT1 A 0 A_TakeInventory("UACSMGSelected",1)
		TNT1 A 0 A_TakeInventory("SubMachineGunSelected",1)
		TNT1 A 0 A_TakeInventory("LostSoulSelected",1)
		TNT1 A 0 A_TakeInventory("HasBarrel",1)
		TNT1 A 0 A_TakeInventory("HasBurningBarrel",1)
		TNT1 A 0 A_TakeInventory("HasIncendiaryWeapon", 1)
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Raise
		TNT1 AAAAAAAA 1 A_Raise
		Wait
		
	Steady:
		TNT1 A 1
		Goto Ready
	
	Ready:
		TNT1 A 0 A_JumpIfInventory("GoFatality", 1, "Steady")
        TNT1 A 0 A_StartSound("CLIPINSS")
        QG20 GFEDCBA 1 A_JumpIfInventory("GoFatality", 1, "Steady")
	RealReady:
        TNT1 AAA 0
	Ready3:
		QG10 A 1 A_DoPBWeaponAction
		Loop
		
	WeaponSpecial:
		TNT1 AAAAA 0
		TNT1 A 0 A_JumpIfInventory("FullBlastMode", 1,"ToggleHalfBlastMode")
		TNT1 A 0 A_Giveinventory("FullBlastMode",1)
		QG21 ABCDEFG 1
		TNT1 A 0 A_Log("Full Blast Mode")
		TNT1 A 0 A_StartSound("CLIPINQS")
		QG21 GFEDCBA 1
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		Goto Ready3
		
	ToggleHalfBlastMode:
		TNT1 AAAAA 0
		TNT1 A 0 A_Takeinventory("FullBlastMode",1)
		QG21 ABCDEFG 1
		TNT1 A 0 A_Log("Half Blast Mode")
		TNT1 A 0 A_StartSound("CLIPINQS")
		QG21 GFEDCBA 1
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		Goto Ready3
		
	Fire:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(41);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		TNT1 A 0 A_JumpIfInventory("FullBlastMode", 1,"FullBlast")
		Goto HalfBlast
		
	FullBlast:
		TNT1 A 0 A_TakeInventory("Reloading", 1)
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 4, 1)
		Goto Reload
        TNT1 AAAAA 0
        TNT1 A 0 A_Recoil(3)
        TNT1 A 0 A_FireBullets(0, 0, 2, 110, "shotpuff", 0, 220)
        QG22 A 1 BRIGHT A_StartSound("QSGFIRE1", 8)//NEED A LOUDER FUCKING BANG
		TNT1 A 0 A_ZoomFactor(0.915)
		TNT1 A 0 A_TakeInventory("QSSGAmmoCounter", 4)
        TNT1 AAAAAAAAAAA 0 A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7))
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0)
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", -15, 0, 0, 0)
        QG22 B 1 BRIGHT
        TNT1 A 0 A_FireBullets(0, 0, 1, 100, "shotpuff", 0, 220)
		TNT1 A 0 A_FireBullets (17, 9, 10, 7, "ShotgunPuff") 
		TNT1 A 0 A_FireBullets (17, 9, 10, 7, "ShotgunPuff")
		TNT1 A 0 A_FireBullets (17, 9, 10, 7, "ShotgunPuff") 
		TNT1 A 0 A_FireBullets (17, 9, 10, 7, "ShotgunPuff")

		TNT1 AAAA 0 A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0)
		TNT1 AAAA 0 A_FireCustomMissile("GunFireSmoke", 0, 0, -2, 0, 0, 0)
		TNT1 A 0 A_ZoomFactor(0.950)
		TNT1 A 0 PB_WeaponRecoil(-16,0)
        QG22 B 1 BRIGHT
		TNT1 A 0 PB_WeaponRecoil(+2,0)
		TNT1 A 0 A_ZoomFactor(0.965)
		QG22 C 1 
		TNT1 A 0 PB_WeaponRecoil(+2.0,0)
		TNT1 A 0 A_ZoomFactor(0.985)
		QG22 D 1 
		TNT1 A 0 PB_WeaponRecoil(+2.0,0)
		TNT1 A 0 A_ZoomFactor(0.995)
		QG22 E 1 
		TNT1 A 0 PB_WeaponRecoil(+2.0,0)
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("Reloading", 1)
        QG22 ED 1 
		TNT1 A 0 PB_WeaponRecoil(+2.0,0)
        QG22 DC 1 
		TNT1 A 0 PB_WeaponRecoil(+2.0,0)
        QG25 ABCDEFGH 1 
		TNT1 A 0 A_JumpIfInventory("NewShell", 1, 1)
		Goto RealReady
		TNT1 A 0
		Goto Reload
	
	//Note: Right barrel fires FIRST, followed by left SECOND
	HalfBlast:
		TNT1 A 0 A_TakeInventory("Reloading", 1)
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 4, "FireRightBarrels")
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 2, "FireLeftBarrels")
		Goto Reload
		
	FireRightBarrels:
        TNT1 AAAAA 0
        TNT1 A 0 A_Recoil(1)
        TNT1 A 0 A_FireBullets(0, 0, 1, 35, "shotpuff", 0, 240)
        QG24 A 1 BRIGHT A_StartSound("SSHFIRE", 8)//NEED A LOUDER FUCKING BANG
		TNT1 A 0 A_ZoomFactor(0.925)
		TNT1 A 0 A_TakeInventory("QSSGAmmoCounter", 2)
        TNT1 AAAAAAAAAAA 0 A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7))
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0)
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", -15, 0, 0, 0)
        QG24 B 1 BRIGHT
		TNT1 A 0 A_FireBullets (14, 8, 10, 7, "ShotgunPuff") 
		TNT1 A 0 A_FireBullets (14, 8, 10, 7, "ShotgunPuff")
		
		TNT1 AAAA 0 A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0)
		TNT1 A 0 A_ZoomFactor(0.950)
        QG24 B 1 BRIGHT
		TNT1 A 0 A_ZoomFactor(0.965)
		QG22 C 1 //Offset(0, 62)
		TNT1 A 0 A_ZoomFactor(0.985)
		QG22 D 1 //Offset(0, 61)
		TNT1 A 0 A_ZoomFactor(0.995)
		QG22 E 1 //Offset(0, 60)
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("Reloading", 1)
        QG22 E 2 //Offset(0, 56)
        QG22 C 2 //Offset(0, 42)
		TNT1 A 0
		Goto RealReady
		
	FireLeftBarrels:
        TNT1 AAAAA 0
        TNT1 A 0 A_Recoil(1)
        TNT1 A 0 A_FireBullets(0, 0, 1, 35, "shotpuff", 0, 240)
        QG23 A 1 BRIGHT A_StartSound("SSHFIRE", 8)//NEED A LOUDER FUCKING BANG
		TNT1 A 0 A_ZoomFactor(0.925)
		TNT1 A 0 A_TakeInventory("QSSGAmmoCounter", 2)
        TNT1 AAAAAAAAAAA 0 A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7))
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0)
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", -15, 0, 0, 0)
        QG23 B 1 BRIGHT
		TNT1 A 0 A_FireBullets (14, 8, 10, 7, "ShotgunPuff") 
		TNT1 A 0 A_FireBullets (14, 8, 10, 7, "ShotgunPuff")
		
		TNT1 AAAA 0 A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0)
		TNT1 A 0 A_ZoomFactor(0.950)
        QG23 B 1 BRIGHT
		TNT1 A 0 A_ZoomFactor(0.965)
		QG22 C 1 Offset(0, 62)
		TNT1 A 0 A_ZoomFactor(0.985)
		QG22 D 1 Offset(0, 61)
		TNT1 A 0 A_ZoomFactor(0.995)
		QG22 E 1 Offset(0, 60)
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("Reloading", 1)
        QG22 E 2 Offset(0, 56)
        QG22 C 2 Offset(0, 42)
		Goto RealReady
		
	AltFire:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			PB_HandleCrosshair(41);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		TNT1 A 0 A_JumpIfInventory("FullBlastMode", 1,"HalfBlast")
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 3, "FireRightSingleBarrel")
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 1, "FireLeftSingleBarrel")
		Goto Reload
		
	FireRightSingleBarrel:
        TNT1 AAAAA 0
        TNT1 A 0 A_Recoil(1)
        QG24 A 1 BRIGHT A_StartSound("weapons/shh2", 8)//NEED A LOUDER FUCKING BANG
		TNT1 A 0 A_ZoomFactor(0.925)
		TNT1 A 0 A_TakeInventory("QSSGAmmoCounter", 1)
        TNT1 AAAAA 0 A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7))
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0)
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", -15, 0, 0, 0)
        QG24 B 1 BRIGHT A_FireBullets (11, 7, 10, 7, "ShotgunPuff") 
		
		TNT1 AAAA 0 A_FireCustomMissile("GunFireSmokE", 0, 0, 2, 0, 0, 0)
		TNT1 A 0 A_ZoomFactor(0.950)
        QG24 B 1 BRIGHT
		TNT1 A 0 A_ZoomFactor(0.965)
		QG22 C 1 //Offset(0, 62)
		TNT1 A 0 A_ZoomFactor(0.985)
		QG22 D 1 //Offset(0, 61)
		TNT1 A 0 A_ZoomFactor(0.995)
		QG22 E 1 //Offset(0, 60)
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("Reloading", 1)
        QG22 C 1 //Offset(0, 42)
		Goto RealReady
		
	FireLeftSingleBarrel:
        TNT1 AAAAA 0
        TNT1 A 0 A_Recoil(1)
        QG23 A 1 BRIGHT A_StartSound("weapons/shh2", 8)//NEED A LOUDER FUCKING BANG
		TNT1 A 0 A_TakeInventory("QSSGAmmoCounter", 1)
        TNT1 AAAAA 0 A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7))
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0)
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", -15, 0, 0, 0)
        QG23 B 1 BRIGHT A_FireBullets (11, 7, 10, 7, "ShotgunPuff") 
		
		TNT1 AA 0 A_FireCustomMissile("GunFireSmokE", 0, 0, -2, 0, 0, 0)
		TNT1 A 0 A_ZoomFactor(0.950)
        QG23 B 1 BRIGHT
		TNT1 A 0 A_ZoomFactor(0.965)
		QG22 C 1 //Offset(0, 62)
		TNT1 A 0 A_ZoomFactor(0.985)
		QG22 D 1 //Offset(0, 61)
		TNT1 A 0 A_ZoomFactor(0.995)
		QG22 E 1 //Offset(0, 60)
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_TakeInventory("Reloading", 1)
        QG22 C 1 //Offset(0, 42)
		Goto RealReady
		
	Reload:
		QG14 ABCDEFGHIJK 0
		QG12 ABCDEFGHIJK 0
		TNT1 A 0 A_TakeInventory("Reloading",1)
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 4, "RealReady")
		TNT1 A 0 A_JumpIfInventory("NewShell", 2, 1)
		Goto Ready3
		QG10 ABCD 1
		QG10 E 1 Offset(0,23)
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 1, 1)
		Goto FullReload
		TNT1 A 0 A_WeaponOffset(0,32)
		QG13 ABCDE 1
			{
				If(CountInv("QSSGAmmoCounter") == 3){A_SetWeaponSprite("QG12");}
				If(CountInv("QSSGAmmoCounter") == 1){A_SetWeaponSprite("QG14");}
			}
		TNT1 A 0 {
			if(CountInv("QSSGAmmoCounter") == 3){ A_FireCustomMissile("SSGCaseSpawner",0,0,-10);}
			else if(CountInv("QSSGAmmoCounter") == 1) {
				A_FireCustomMissile("SSGCaseSpawner",0,0,-10);
				A_FireCustomMissile("SSGCaseSpawner",0,0,-10);
				A_FireCustomMissile("SSGCaseSpawner",0,0,-10);
				}
			else{
				A_FireCustomMissile("SSGCaseSpawner",0,0,-10);
				A_FireCustomMissile("SSGCaseSpawner",0,0,-10);
				}
			}
	    TNT1 A 0 A_StartSound("QSGOPN", 8)
		QG13 FFFFFFFGHIJKK 1
			{
				If(CountInv("QSSGAmmoCounter") == 3){A_SetWeaponSprite("QG12");}
				If(CountInv("QSSGAmmoCounter") == 1){A_SetWeaponSprite("QG14");}
			}
        QG10 QR 1
		//QG10 LMMNNOOPQR 1
        TNT1 A 0 A_StartSound("QSGIN", 9)
		//I'm probably gonnna have to make more sprites for odd number loads... Ugh can I get a break yet??
	InsertBullets:
		TNT1 A 0 A_JumpIf(CountInv("NewShell") <=0,"FinishReload")
		TNT1 A 0 A_JumpIf(CountInv("QSSGAmmoCounter") ==4,"FinishReload")
		TNT1 A 0 A_TakeInventory("NewShell", 1)
		TNT1 A 0 A_GiveInventory("QSSGAmmoCounter", 1)
		Loop
	FinishReload:	
		QG10 STUV 1
        TNT1 A 0 A_StartSound("QSGCLSE", 8)
        QG10 WXYZ 1
        QG11 ABCDEF 1
		QG11 G 1 Offset(-9,32)
		QG11 H 1 Offset(-5,32)
		TNT1 A 0 A_WeaponOffset(0,32)
        Goto RealReady
		
	FullReload:
		QG10 F 1 Offset(0, 19)
		QG10 G 1 Offset(0,22)
		QG10 HIJK 1 A_WeaponOffset(0, 32)
        TNT1 A 0 A_StartSound("QSGOPN", 8)
		TNT1 A 0 A_JumpIfInventory("QuadShotgunHasUnloaded", 1, 5)
		TNT1 AAAA 0 A_FireCustomMissile("SSGCaseSpawner", 0, 0, -10)
        QG10 K 9
		QG10 LMNOPQ 1
		 TNT1 A 0 A_StartSound("QSGIN", 9)
		TNT1 A 0 A_TakeInventory("QuadShotgunHasUnloaded", 1)
        QG10 R 2
	LoadSSG:
		TNT1 A 0 A_JumpIfInventory("NewShell", 4, 1)
		Goto LoadSSG1
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter", 1, "LoadSSG3")
		TNT1 A 0 A_GiveInventory("QSSGAmmoCounter", 4)
		TNT1 A 0 A_TakeInventory("NewShell", 4)
		TNT1 A 0
		Goto ContinueReload
		
	LoadSSG3:
		TNT1 A 0 A_JumpIfInventory("NewShell", 3, 1)
		Goto LoadSSG1
		TNT1 A 0 A_GiveInventory("QSSGAmmoCounter", 3)
		TNT1 A 0 A_TakeInventory("NewShell", 3)
		TNT1 A 0
		Goto ContinueReload
		
		
	LoadSSG1:
		TNT1 A 0 A_GiveInventory("QSSGAmmoCounter", 1)
		TNT1 A 0 A_TakeInventory("NewShell", 1)
		TNT1 A 0
		Goto ContinueReload
		
	ContinueReload:
		QG10 STUV 1
//		TNT1 A 4
		QG10 WXYZ 1 //Offset(1,33)
        TNT1 A 0 A_StartSound("QSGCLSE", 8)
        QG11 ABCDEF 1
		QG11 G 1 Offset(-9,32)
		QG11 H 1 Offset(-5,32)
		TNT1 A 0 A_WeaponOffset(0,32)
        //QG22 CC 1 A_Refire
		Goto RealReady
		
		
	AlreadyUnloaded:
		TNT1 A 0 A_Takeinventory("Unloading",1)
		Goto RealReady//+6
	
	Unload:
		TNT1 A 0 A_JumpIfInventory("QuadShotgunHasUnloaded", 1, "AlreadyUnloaded")
		QG10 A 1 A_WeaponReady
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		TNT1 A 0 A_Takeinventory("ADSmode",1)
		TNT1 A 0 A_Takeinventory("Zoomed",1)
        TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter",1,3)
        Goto RealReady
        TNT1 AAA 0
		TNT1 A 0 A_Takeinventory("Zoomed",1)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		
	RemoveBullets:
		TNT1 AAAA 0
		TNT1 A 0 A_JumpIfInventory("QSSGAmmoCounter",1,3)
		Goto FinishUnload
        TNT1 AAAAAA 0
		TNT1 A 0 A_Takeinventory("QSSGAmmoCounter",1)
		TNT1 A 0 A_Giveinventory("NewShell",1)
		Goto RemoveBullets
	
	FInishUnload:
		QG10 ABC 1 //Offset(20,48) //A_FireCustomMissile("SmokeSpawner",0,0,0,5)
		QG10 D 1 Offset (0,26)
		QG10 V 1 Offset(8,32)
		TNT1 A 0 A_StartSound("weapons/sshotc")
		TNT1 A 0 A_WeaponOffset(0,32)
		QG10 UTS 1
        QG10 QPONML 1
		QG10 K 10
		TNT1 A 0 A_GiveInventory("QuadShotgunHasUnloaded", 1)
		TNT1 A 0 A_Takeinventory("Unloading",1)
        TNT1 A 0 A_StartSound("weapons/sshotc")
        QG10 JIH 1
		QG10 G 1 Offset(0,22)
		QG10 F 1 Offset(0, 19)
		QG10 E 1 Offset(0,23)
		QG10 DCB 1 A_WeaponOffset(0,32)
		QG10 AA 2
      //  SHO9 DE 1
	//	SHO9 FG 1
		Goto RealReady
	
	FlashKicking:
		QG20 ABCDEFGGFEDCBA 1
		Stop
		
	FlashAirKicking:
		QG20 ABCDEFGGGFEDCBA 1
		QG10 A 1
		Stop
		
	FlashSlideKicking:
		QG20 ABCDEFGGGGGGGGGGGGGFEDCBA 1
		QG10 A 2 
		Stop
		
	FlashSlideKickingStop:
		QG20 FEDCA 1 
		QG10 A 2 
		Stop
		
	FlashPunching:
		QG21 ABCDEFGGFEDCBA 1
		Stop
	}
}