


Actor SelectShotgun_Buckshot : Inventory 
{Inventory.MaxAmount 1}

Actor SelectShotgun_Slugshot : Inventory
{Inventory.MaxAmount 1}

Actor SelectShotgun_Dragonsbreath : Inventory
{Inventory.MaxAmount 1}
//I will leave these here in case the are needed somewhere I am not looking.  I set this up to use the same name as the ammo type and only prefixing WW_ to be clean/consistant


Actor ShotgunTypeBuckshot 		: Inventory 	{Inventory.MaxAmount 1}
Actor ShotgunTypeSlug 			: Inventory		{Inventory.MaxAmount 1}
Actor ShotgunTypeDB 			: Inventory		{Inventory.MaxAmount 1}

Actor WW_ShotgunTypeBuckshot 	: Inventory 	{Inventory.MaxAmount 1}
Actor WW_ShotgunTypeSlug 		: Inventory		{Inventory.MaxAmount 1}
Actor WW_ShotgunTypeDB 			: Inventory		{Inventory.MaxAmount 1}

Actor Pumping 					: Inventory 	{Inventory.MaxAmount 1}
Actor HasSlugs					: Inventory		{Inventory.MaxAmount 1}
Actor HasDragonBreath			: Inventory		{Inventory.MaxAmount 1}
Actor DragonBreathUpgrade 		: Inventory		{Inventory.MaxAmount 1}
ACTOR IsCocking 				: Inventory		{Inventory.MaxAmount 1}
ACTOR SG_IsSwapping 			: Inventory		{Inventory.MaxAmount 1}
Actor ShotgunWasEmpty 			: Inventory		{inventory.maxamount 1}
Actor PBPumpShotgunWasEmpty 	: Inventory		{inventory.maxamount 1}
Actor PBPumpShotgunHasUnloaded	: Inventory		{Inventory.maxamount 1}
ACTOR RespectShotgun 			: Inventory		{Inventory.MaxAmount 2}
Actor PumpshotgunMagazine		: Inventory		{inventory.maxamount 2}
Actor PumpshotgunMagNotInserted	: Inventory		{inventory.maxamount 1}

Actor PumpshotgunUpgrade: Custominventory
{
//$Category Ammunition
	SpawnID 9310
	Game Doom
	Height 24
	+INVENTORY.ALWAYSPICKUP
	+COUNTITEM
	Inventory.Pickupsound "SHOTPICK"
	Inventory.PickupMessage "You got the Pump shotgun Magazine Upgrade!!!"
	Scale 0.45
	States
	{
	Spawn:
		9SMU A 1 BRIGHT Light("WeaponUpgradeSpawner")
		Loop
	
    Pickup:
		TNT1 A 0 ACS_NamedExecuteAlways("PumpShotgunMag", 0)
		TNT1 A 0
		{
		A_GiveInventory("Shot_Gun", 1);
		A_GiveInventory("DragonBreathUpgrade", 1);
		A_GiveInventory("NewShell", 20);
		A_GiveInventory("ShotgunAmmo", 11);
        if (CountInv("PumpShotgunMagazine") == 0) {A_GiveInventory("PumpshotgunMagNotInserted", 1);}
		A_GiveInventory("PumpshotgunMagazine", 1);
		}
		Stop
	}
}

Actor DragonBreathShellsUpgrade: Custominventory
{
//$Category Ammunition
	Game Doom
	SpawnID 9320
	Height 24
	+INVENTORY.ALWAYSPICKUP
	+COUNTITEM
	Inventory.Pickupsound "misc/shellbox_PickUp"
	Inventory.PickupMessage "You got the Dragon's Breath Shell Upgrade!!!"
	States
	{
	Spawn:
		DHEL ABCDEDCB 2 BRIGHT Light("WeaponUpgradeSpawner")
		Loop
	
    Pickup:
	  TNT1 AA 0
	  {
	   A_GiveInventory("DragonBreathUpgrade", 1);
	   A_GiveInventory("NewShell", 20);
	  }
      Stop
	}
}

Actor DragonBreath
{
	Projectile
	+RANDOMIZE
	+FORCEXYBILLBOARD
	+RIPPER
	+NOEXTREMEDEATH
	damage 5
	radius 1
	height 1
	speed 40
	renderstyle ADD
	alpha 0.9
	scale .15
    DamageType Fire
	SeeSound "Afrit/Hellfire"
    Decal "SmallerScorch"
	states
		{
		Spawn:
		TNT1 A 0 A_Playsound("Afrit/Hellfire")
		TNT1 A 0 A_Explode(21, 66, 0)
		TNT1 AAAA 0 A_SpawnItemEx ("ExplosionFlareSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
		EXPL A 0 A_SpawnItemEx ("ExplosionParticleSpawner",0,0,0,0,0,0,0,SXF_NOCHECKPOSITION,0)
		EXPL AAAAAAAAAAA 0 A_CustomMissile ("ShotgunParticles", 6, 0, random (0, 360), 2, random (0, 90))//ShotgunParticles
		TNT1 A 0 A_Jump(76, 2, 3)
		TNT1 A 0 A_SpawnItemEx("DragonsBreathPiece1", random (-15, 15), random (-15, 15))
		TNT1 A 0 A_SpawnItemEx("DragonsBreathPiece2", random (-35, 35), random (-35, 35))
		TNT1 A 0 A_SpawnItemEx("DragonsBreathPiece3", random (-45, 45), random (-45, 35))
		TNT1 AAAAAAAAAAAAAA 0 A_CustomMissile ("SparkX", 2, 0, random (0, 360), 2, random (0, 360))
		TNT1 A 0 A_SpawnItemEx ("RicoChet",0,0,-5,0,0,0,0,SXF_NOCHECKPOSITION,0)
		Stop
	Death:
		Stop
	XDeath:
	TNT1 A 0
	Stop
	}
}

ACTOR DragonsBreathTracer: FastProjectile
{
	Projectile
	+RANDOMIZE
	+FORCEXYBILLBOARD
	+DONTSPLASH
	+NOEXTREMEDEATH
	Damagetype Shotgun
	Damage 7
	PoisonDamageType Fire
	PoisonDamage 7
	+ADDITIVEPOISONDURATION
	radius 2
	height 2
	speed 80
	Gravity 0.4
	renderstyle ADD
	alpha 0.95
	scale 0.45
    Decal "SmallerScorch"
	states
		{
		Spawn:
			DBAC A 3 BRIGHT
			TNT1 A 0 A_SpawnItemEx("ShotgunParticles", random(8,-8), random(8,-8), random(8,-8), 0, 0, 0, 0, 128, 0)
			TNT1 A 0 A_SpawnItemEx("ExplosionParticleVerySlow", random(8,-8), random(8,-8), random(19,-19), 0, 0, 0, 0, 128, 0)
			Loop
	Death:
	XDeath:
		TNT1 A 0 
		{
		A_Explode(5, 30, 0);
		A_Playsound("ricochet/hit");
		A_SpawnItemEx ("DragonBreath",0,0,1,0,0,0,0,SXF_NOCHECKPOSITION,0);
		}
		Stop
	}
}

/*---------------------------------------------------------------------------

	12 Gauge Pump Shotgun (With and Without The Magazine Upgrade)

	If you're looking specifically for the mag upgrade coding, look in the pump and reloading states, weapon special states
	kickflash states, and unload states.
 
-----------------------------------------------------------------------------*/

ACTOR Shot_Gun : PB_Weapon Replaces Shotgun
{
	SpawnID 9300
	Weapon.BobRangeX 0.3
	Weapon.BobRangeY 0.5
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 2.4
	+FLOORCLIP
	+DONTGIB
	Game Doom
	Weapon.SelectionOrder 1300
	Weapon.AmmoUse1 0
	Weapon.AmmoUse2 0
	Weapon.AmmoGive1 4
	Weapon.AmmoGive2 0
	Weapon.AmmoType1 "NewShell"
	Weapon.AmmoType2 "ShotgunAmmo"
	Inventory.PickupMessage "You got the Pump Shotgun! (Slot 3)"
    Inventory.PickupSound "SHOTPICK"
	Obituary "%o sucked %k's Shotgun"
    AttackSound "None"
	Tag "Shotgun"
    +WEAPON.NOALERT
    +WEAPON.NOAUTOAIM
	+WEAPON.NOAUTOFIRE
	PB_WeaponBase.UnloaderToken "PBPumpShotgunHasUnloaded"
	Scale 0.45
	States
	{
	
	NoAmmo:
		TNT1 A 0 {
		A_PlaySoundEx("weapons/empty", "Weapon");
		A_TakeInventory("Zoomed", 1);
		A_TakeInventory("ADSmode", 1);
		A_TakeInventory("Reloading", 1);
		A_ZoomFactor(1.0);
		}
		Goto Ready3
		
	Ready:
		TNT1 A 0 A_JumpIfInventory("RespectShotgun", 1, "SelectAnimation")
		SHTS ABCDJKLMNOP 0 // Virtualize Sprites in gzdoom's memory
		SHTD ABCDJKLMNOP 0
		SHMS BCDEFGSTUVWX 0
		SHMD BCDEFGSTUVWX 0
		SHZA DEFGHIJKLMNO 0
	    SHZB DEFGHIJKLMNO 0
		SHT4 DFGHIJKLMN 0
		SHT6 DFGHIJKLMN 0
	ShotgunRespect:
		TNT1 A 0 {
			A_SetCrosshair(5);
			A_GiveInventory("RespectShotgun");
			A_GiveInventory("ShotgunTypeBuckshot");
			A_Giveinventory("PB_LockScreenTilt",1);
			A_PlaySoundEx("weapons/shotgun/equip", "Auto");
		}
		SH00 ABCDEFGHI 1 A_DoPBWeaponAction(WRF_NOBOB)
	    SHTZ ABC 1 A_DoPBWeaponAction(WRF_NOBOB)
		SHTZ DEFGHIJ 1 {
			If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHZA");}
			If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHZB");}
			A_DoPBWeaponAction(WRF_NOBOB);
			return state("");
		}
		TNT1 A 0 A_PlaySoundEx("weapons/shotgun/attach", "Auto")
		SHTZ KL 1 {
			If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHZA");}
			If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHZB");}
			A_DoPBWeaponAction(WRF_NOBOB);
			return state("");
		}
		SHTZ M 1 A_DoPBWeaponAction(WRF_NOBOB)
		SHTZ NOP 1 {
			If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHZA");}
			If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHZB");}
			A_DoPBWeaponAction(WRF_NOBOB);
			return state("");
		}
		SHTG A 1 {
			If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHTS");}
			If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHTD");}
			A_DoPBWeaponAction(WRF_NOBOB);
			return state("");
		}
		SHTG BCDEFGHIJ 1 A_DoPBWeaponAction(WRF_NOBOB)
		SSHR H 1 A_DoPBWeaponAction(WRF_NOBOB)
		TNT1 A 0 A_PlaySoundEx("weapons/sgmvpump","Auto")
		SHTG L 5 A_DoPBWeaponAction(WRF_NOBOB)
		SSHR I 1 A_DoPBWeaponAction(WRF_NOBOB)
		SSHR JK 1 {
			If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHTS");}
			If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHTD");}
			A_DoPBWeaponAction(WRF_NOBOB);
			return state("");
		}
		SSHR L 1 {
			If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHTS");}
			If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHTD");}
			A_DoPBWeaponAction(WRF_NOBOB);
			A_PlaySoundEx("insertshell", "Auto"); 
		}
		SSHR MNOPP 1 {
			If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHTS");}
			If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHTD");}
			A_DoPBWeaponAction(WRF_NOBOB);
			return state("");
		}
		TNT1 A 0 A_JumpIfInventory("PumpShotgunMagazine", 1, "InsertMagBegin") //Activates when the magazine upgrade is already collected before going to the next level.
		SSHR A 1 A_DoPBWeaponAction(WRF_NOBOB)
		SSHR BCD 1 {
			If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHTS");}
			If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHTD");}
			A_DoPBWeaponAction(WRF_NOBOB);
			return state("");
		}
		TNT1 A 0 A_PlaySoundEx("insertshell", "Auto")
		SSHR EFG 1 A_DoPBWeaponAction(WRF_NOBOB)
		TNT1 A 0 A_JumpIfInventory("PumpshotgunMagNotInserted", 1, "InsertMagBegin")
		TNT1 A 0 A_PlaySoundEx("weapons/sgmvpump","Auto")
		SHTG JIHGFEDCB 1 A_DoPBWeaponAction(WRF_NOBOB)
		Goto Ready3
		
	InsertMagBegin: // Straight Into Inserting The Mag After Chambering a shell. 
		TNT1 A 0 A_TakeInventory("PumpshotgunMagNotInserted",1)
		TNT1 A 0 A_GiveInventory("ShotgunAmmo",11)
		TNT1 A 0 A_GiveInventory("PumpShotgunMagazine",1)
		SHTM A 1 A_DoPBWeaponAction(WRF_NOBOB)
		SHTM BCDEFG 1 {
		If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHMS");}
		If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHMD");}
		A_DoPBWeaponAction(WRF_NOBOB);
		return state("");
		}
	BeginInsertion:	
		SHTM H 1 A_DoPBWeaponAction(WRF_NOBOB)
		TNT1 A 0 A_PlaySound("RIFCL_IN", 3)
		SHTM I 1 A_DoPBWeaponAction(WRF_NOBOB)
		TNT1 A 0 A_PlaySound("insertshell", 4)
        TNT1 A 0 A_PlaySound("RIFCL_CL", 5)
		SHTM JKLMNOPQR 1 A_DoPBWeaponAction(WRF_NOBOB)
		SHTG EDCB 1 A_DoPBWeaponAction(WRF_NOBOB)
		TNT1 A 0 A_JumpIfInventory("PumpShotgunMagazine", 2, "Ready3")
		Goto Ready3
	InsertMagShotgunRespectAlreadyRespected:
		TNT1 A 0 {
			A_TakeInventory("PumpshotgunMagNotInserted",1);
			A_GiveInventory("ShotgunAmmo",11);
			A_GiveInventory("PumpShotgunMagazine",1);
			}
		SHTG BCDEFGH 1 A_DoPBWeaponAction(WRF_NOBOB)
		SHTM A 1 A_DoPBWeaponAction(WRF_NOBOB)
		SHTM ABCDEFG 1 {
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHMS");} 
		 If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHMD");}
		 A_DoPBWeaponAction(WRF_NOBOB);
		}
		Goto BeginInsertion
		
	SelectAnimation:	
        TNT1 A 0 A_PlaySoundEx("weapons/shotgun/equip", "Auto")
		SH00 JKGHI 1
	Ready3:
		TNT1 A 0 {
			A_SetRoll(0);
			A_SetCrosshair(0);
			A_TakeInventory("PB_LockScreenTilt",1);
			}
		TNT1 A 0 
		{
			if(CountInv("SG_IsSwapping")>=1)
			{
			A_Setinventory("SG_IsSwapping",0);
			A_Setinventory("WW_ShotgunTypeSlug", 0); 
			A_Setinventory("WW_ShotgunTypeBuckShot", 0); 
			A_Setinventory("WW_ShotgunTypeDB", 0); 
			A_Setinventory("CantWeaponSpecial",0);
			}
		}
	ReadyToFire:
		SHTG A 1
		{
	   if (CountInv("ShotgunTypeSlug") >= 1 )                  { A_SetWeaponSprite("SHTS"); }
		 if (CountInv("ShotgunTypeDB") >= 1 )           { A_SetWeaponSprite("SHTD"); }
		 // This token is given upon picking up the magazine upgrade.
		 if (CountInv("PumpshotgunMagNotInserted") >= 1 ) { return state("InsertMagShotgunRespectAlreadyRespected"); } // Insert magazine upon picking it up
		 return A_DoPBWeaponAction(WRF_ALLOWRELOAD, CheckUnloaded("PBPumpShotgunHasUnloaded"));
		}
		Loop
			 
	Ready2:
		TNT1 A 0 {
			A_SetRoll(0);
			A_SetCrosshair(5);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
	ReadyToFire2:
		SHT8 A 1
		{		

		 if (CountInv("ShotgunTypeSlug") >= 1 )        { A_SetWeaponSprite("SHT6"); }
		 if (CountInv("ShotgunTypeDB") >= 1 ) { A_SetWeaponSprite("SHT4"); }
		 if (CountInv("PumpshotgunMagNotInserted") >= 1 ) { return state("InsertMagShotgunRespectAlreadyRespected"); }
		 

			//if (CountInv("HasSlugs") >= 1 )        { A_SetWeaponSprite("SHT6"); }
			//if (CountInv("HasDragonBreath") >= 1 ) { A_SetWeaponSprite("SHT4"); }
			//if (CountInv("PumpshotgunMagNotInserted") >= 1 ) { return state("InsertMagShotgunRespectAlreadyRespected"); }
						
			//Updated code for far superior smooth gameplay
      //I modified it a slight bit to make sure it fits with my stuff -AA
			if(GetCvar("pb_toggle_aim_hold")) 
        {
				  if(!PressingAltfire() || JustReleased(BT_ALTATTACK))
           {
					  return state("Zoomout");
				    }
				if (PressingFire() && PressingAltfire() && CountInv("ShotgunAmmo") > 0)
            {
						return state("Fire2");
				    }
				return A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOSECONDARY, CheckUnloaded("PBPumpShotgunHasUnloaded"));
			  }
			else 
        {
				if (PressingFire() && CountInv("ShotgunAmmo") > 0 )
          {
					return state("Fire2");
				  }
				return A_DoPBWeaponAction(WRF_ALLOWRELOAD, CheckUnloaded("PBPumpShotgunHasUnloaded"));
			  }
			return A_DoPBWeaponAction(WRF_ALLOWRELOAD, CheckUnloaded("PBPumpShotgunHasUnloaded"));
	    }
		Loop
				
	WeaponSpecial:
		
		SHZA ABCDEFGHIJKLMNOP 0
		SHZB ABCDEFGHIJKLMNOP 0
		TNT1 A 0 
		{
			 A_TakeInventory("Zoomed",1);
			 A_ZoomFactor(1.0);
			 A_SetCrosshair(0);
			A_Takeinventory("GoWeaponSpecialAbility",1);
			A_PlaySoundEx("Ironsights", "Auto");
			if (CountInv("PumpshotgunMagazine") >= 1 )  {return state("AmmoSwap");}
			//if (CountInv("WW_ShotgunTypeBuckshot") >= 1 )  {return state("SwitchToSlug");}
			//if (CountInv("WW_ShotgunTypeSlug") >= 1 )      {return state("SwitchToDragonBreath");}
			//if (CountInv("WW_ShotgunTypeDB") >= 1 ) 		{return state("SwitchToBuckshot");}
			return state("");
	    }
		Goto AmmoSwap

	  AlternateWeaponSpecialAnimationSwitch:
		TNT1 A 0 A_WeaponOffset(0,32)
		SHTZ PON 1 {
			 if (CountInv("ShotgunTypeSlug") >= 1 )        { A_SetWeaponSprite("SHZA"); }
			 if (CountInv("ShotgunTypeDB") >= 1 ) { A_SetWeaponSprite("SHZB"); }
			}
		SHTZ M 1
		TNT1 A 0 A_PlaySoundEx("weapons/shotgun/detach", "Auto")
		SHTZ LKJIHGFED 1{
			 if (CountInv("ShotgunTypeSlug") >= 1 )        { A_SetWeaponSprite("SHZA"); }
			 if (CountInv("ShotgunTypeDB") >= 1 ) { A_SetWeaponSprite("SHZB"); }
			}
		SHTZ CBAABC 1
		SHTZ DEFGHIJKL 1{
			 if (CountInv("ShotgunTypeSlug") >= 1 )        { A_SetWeaponSprite("SHZA"); }
			 if (CountInv("ShotgunTypeDB") >= 1 ) { A_SetWeaponSprite("SHZB"); }
			}
		SHTZ M 1
		TNT1 A 0 A_PlaySoundEx("weapons/shotgun/attach", "Auto")
		SHTZ NOP 1
			{
			 if (CountInv("ShotgunTypeSlug") >= 1 )        { A_SetWeaponSprite("SHZA"); }
			 if (CountInv("ShotgunTypeDB") >= 1 ) { A_SetWeaponSprite("SHZB"); }
			}
	 FullyAttached:
		SHTG A 1 {	
			 if (CountInv("ShotgunTypeSlug") >= 1 )        { A_SetWeaponSprite("SHTS"); }
			 if (CountInv("ShotgunTypeDB") >= 1 ) { A_SetWeaponSprite("SHTD"); }
			}
		Goto Ready3
	
	AltTubeAmmoSwap:
		TNT1 A 0 {
		 If((CountInv("NewShell") <=2) && (CountInv("ShotgunAmmo") <=2)) 
			{
			A_Log("You Need At Least 2 Rounds of Ammo for Swap"); 
			A_Setinventory("WW_ShotgunTypeSlug", 0); 
			A_Setinventory("WW_ShotgunTypeBuckShot", 0); 
			A_Setinventory("WW_ShotgunTypeDB", 0); 
			A_Setinventory("CantWeaponSpecial",0);
			return state("Ready3");
			}
		 return state("");
		 }
		TNT1 A 0 A_GiveInventory("SG_IsSwapping",1)
		SHTG BCDEFGHI 1
		TNT1 A 0 A_JumpIf(CountInv("ShotgunAmmo") >= 1,"EmptyTube")
		SHTG I 1 A_SetRoll(roll+0.1,SPF_INTERPOLATE)
		SHTG Z 1 
		SHTG L 1
		{
		 A_SetRoll(roll-0.4,SPF_INTERPOLATE);
		 A_SetPitch(pitch+0.1,SPF_INTERPOLATE);
		}
		goto ClearedChamber
	EmptyTube:
		//need to add token so if you shoot during this reload it cleans things up
		//also a park token for excess ammo
		TNT1 A 0 A_JumpIf(CountInv("ShotgunAmmo") == 1,"ClearChamberForTubeSwap")
		SSHR GF 1 {
		 A_SetPitch(pitch+0.1,SPF_INTERPOLATE);
		 A_DoPBWeaponAction(WRF_NOBOB);
		}
		SSHR E 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE)
		TNT1 A 0 A_PlaySoundEx("insertshell", "Auto")
		SSHR DCB 1 {
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHTS");}
		 If(CountInv("ShotgunTypeDB") >=1 ){A_SetWeaponSprite("SHTD");}
		 return state("");
		}
		TNT1 A 0 {
		 A_Takeinventory("ShotgunAmmo",1);
		 A_Giveinventory("NewShell",1);
		}
		SSHR A 1 A_Refire
        TNT1 A 0 A_DoPBWeaponAction(WRF_NOBOB)
		goto EmptyTube
	ClearChamberForTubeSwap:
		SHTG I 1 A_SetRoll(roll+0.1,SPF_INTERPOLATE)
		TNT1 A 0 A_WeaponOffset(0,32)
		SHTG J 1 A_SetRoll(roll-0.1,SPF_INTERPOLATE)
		TNT1 A 0 A_TakeInventory("ShotgunAmmo",1)
		SHTG K 1 
		{
		 If(CountInv("ShotgunTypeBuckShot") >=1 ) {A_FireCustomMissile("LiveRed_ShotCaseSpawn",0,0,-5,-21);} 
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHTA");A_FireCustomMissile("LiveGreen_ShotCaseSpawn",0,0,-5,-21);} 
		 If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHTF"); A_FireCustomMissile("LiveOrange_ShotCaseSpawn",0,0,-5,-21);}
		 A_TakeInventory("ShotgunAmmo",1);
		 A_SetRoll(roll-0.1,SPF_INTERPOLATE);
		 A_PlaySoundEx("weapons/sgmvpump","Auto"); 
		 return state("");
		}		
	ClearedChamber:	
		TNT1 A 0
		{
			if(CountInv("WW_ShotgunTypeBuckshot")>=1)
			{	
			A_Setinventory("WW_ShotgunTypeSlug", 0); 
			A_Setinventory("WW_ShotgunTypeBuckShot", 0); 
			A_Setinventory("WW_ShotgunTypeDB", 0); 
			A_Setinventory("CantWeaponSpecial",0); 
			A_Setinventory("ShotgunTypeSlug", 0); 
			A_Setinventory("ShotgunTypeBuckShot", 1); 
			A_Setinventory("ShotgunTypeDB", 0); 
			A_Print("Buckshot Shells Loaded");
			}
		}
	TNT1 A 0
		{
			if(CountInv("WW_ShotgunTypeSlug")>=1)
			{	
			A_Setinventory("WW_ShotgunTypeSlug", 0); 
			A_Setinventory("WW_ShotgunTypeBuckShot", 0); 
			A_Setinventory("WW_ShotgunTypeDB", 0); 
			A_Setinventory("CantWeaponSpecial",0); 
			A_Setinventory("ShotgunTypeSlug", 1); 
			A_Setinventory("ShotgunTypeBuckShot", 0); 
			A_Setinventory("ShotgunTypeDB", 0); 
			A_Print("Slug Shells Loaded");
			}
		}
	TNT1 A 0
		{
			if(CountInv("WW_ShotgunTypeDB")>=1)
			{	
			A_Setinventory("WW_ShotgunTypeSlug", 0); 
			A_Setinventory("WW_ShotgunTypeBuckShot", 0); 
			A_Setinventory("WW_ShotgunTypeDB", 0); 
			A_Setinventory("CantWeaponSpecial",0); 
			A_Setinventory("ShotgunTypeSlug", 0); 
			A_Setinventory("ShotgunTypeBuckShot", 0); 
			A_Setinventory("ShotgunTypeDB", 1); 
			A_Print("Dragon's Breath Shells Loaded");
			}
		}
		SHTS KLMNOPP 0
		SHTD KLMNOPP 0
		SHTG L 1
			{
			A_SetRoll(roll-0.4,SPF_INTERPOLATE);
			A_SetPitch(pitch+0.1,SPF_INTERPOLATE);
			}
		TNT1 A 0 A_JumpIfInventory("NewShell", 1, 1)
		SSHR I 3 A_PlaySoundEx("insertshell","Auto") 
		SSHR JKLMNOPP 1 
			{
			If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHTS");} 
			If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHTD");}
			}
		TNT1 A 0 
			{
			A_PlaySoundEx("weapons/sgpump","Auto");
			A_Giveinventory("ShotgunAmmo",1);
			A_Takeinventory("NewShell",1);
			A_Takeinventory("SG_IsSwapping",1);
			}
	LoadTube:
		TNT1 A 0 A_JumpIfInventory("NewShell", 1,1)
		goto TubeSwapFinal
		TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",9,"TubeSwapFinal")
		SSHR BCD 1 {
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHTS");}
		 If(CountInv("ShotgunTypeDB") >=1 ){A_SetWeaponSprite("SHTD");}
		 return state("");
		}
		TNT1 A 0 A_PlaySoundEx("insertshell", "Auto")
		SSHR E 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE)
		SSHR FG 1 {
		 A_SetPitch(pitch+0.1,SPF_INTERPOLATE);
		 A_DoPBWeaponAction(WRF_NOBOB);
		}
		TNT1 A 0 {
		 A_Giveinventory("ShotgunAmmo",1);
		 A_Takeinventory("NewShell",1);
		}
		SSHR A 0 A_Refire
        TNT1 A 0 A_DoPBWeaponAction(WRF_NOBOB)
		goto LoadTube
	TubeSwapFinal:
		SHTG IHGFEDCB 1
		goto Ready3
	
	
	AltMagAmmoSwap:
		TNT1 A 0
		{
			if(CountInv("NewShell")<=10)
			{
			A_Setinventory("WW_ShotgunTypeSlug", 0); 
			A_Setinventory("WW_ShotgunTypeBuckShot", 0); 
			A_Setinventory("WW_ShotgunTypeDB", 0); 
			A_Setinventory("CantWeaponSpecial",0); 
			A_Log("You need at least 10 rounds for ammo type swap");
			Return State("Ready3");
			}
		Return State("");
		}
		SHTG BCDE 1 A_SetRoll(roll-0.1,SPF_INTERPOLATE)
		TNT1 A 0 A_JumpIfInventory("PBPumpShotgunHasUnloaded",1,5)
		SHMG FGHI 1 A_SetRoll(roll-0.1,SPF_INTERPOLATE)
		Goto BeginMagAmmoSwap
		SHTG GH 1
		Goto InsertMagAmmoSwap
	BeginMagAmmoSwap:	
		SHTN ABCDEFG 1
		TNT1 A 0 A_PlaySoundEx("RIFCL_OU", "Auto")
		TNT1 A 0 A_PlaySoundEx("weapons/smg_clipout", "Auto")
		TNT1 A 0 A_JumpIf(CountInv("ShotgunAmmo") <= 1,"EmptyMagReloadSwap")
		SHTM GFEDCB 1 {
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHMS");} 
		 If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHMD");}
		}
	goto InsertMagAmmoSwap	
	EmptyMagReloadSwap:
		SHTN GHIJKL 1
		TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",1,2)
		TNT1 A 0 A_FireCustomMissile("EmptyClipMP40",-5,0,8,-4)
	InsertMagAmmoSwap:
	    SHMS BCDEFG 0
		SHMD BCDEFG 0
		SHTM A 4
	    SHTM BCDEFG 1 {
		 If(CountInv("WW_ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHMS");} 
		 If(CountInv("WW_ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHMD");}
		}
		SHTM H 1 A_PlaySoundEx("RIFCL_IN", "Auto")
		SHTM I 1 A_PlaySoundEx("insertshell", "Auto")
        SHTM JKLMN 1 
		TNT1 A 0 A_JumpIf(CountInv("ShotgunAmmo")==0,"EmptyChamberSwap")
		SHMG HIJ 1 A_SetRoll(roll-0.1,SPF_INTERPOLATE)
	    SHMA K 0
		SHMF K 0
		SHMG K 1 
		{
		 If(CountInv("ShotgunTypeBuckShot") >=1 ) {A_FireCustomMissile("LiveRed_ShotCaseSpawn",0,0,-5,-21);} 
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHMA");A_FireCustomMissile("LiveGreen_ShotCaseSpawn",0,0,-5,-21);} 
		 If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHMF"); A_FireCustomMissile("LiveOrange_ShotCaseSpawn",0,0,-5,-21);}
		 A_TakeInventory("ShotgunAmmo",1);
		 A_SetRoll(roll-0.1,SPF_INTERPOLATE);
		 A_PlaySoundEx("weapons/sgmvpump","Auto"); 
		 return state("");
		}
	EmptyChamberSwap:
		SHMG L 1
		{
		 A_SetRoll(roll-0.4,SPF_INTERPOLATE);
		 A_SetPitch(pitch+0.1,SPF_INTERPOLATE);
		}
		SHTG M 2
		SHMG L 1 
		{
		 A_SetRoll(roll+0.4,SPF_INTERPOLATE);
		 A_SetPitch(pitch-0.1,SPF_INTERPOLATE);
		}
		SHMG K 1 
		{
		 If( CountInv("WW_ShotgunTypeSlug") >=1 )        
		   {A_SetWeaponSprite("SHMA");} 
		 If (CountInv("WW_ShotgunTypeDB") >=1 )        
		   {A_SetWeaponSprite("SHMF");}
		 A_SetRoll(roll+0.1,SPF_INTERPOLATE);
		 A_PlaySoundEx("weapons/sgpump", "Auto");
		 return state("");
		}	
		SHMG JI 1 A_SetRoll(roll+0.1,SPF_INTERPOLATE)
		TNT1 A 0 A_SetRoll(roll+0.1,SPF_INTERPOLATE)
	ShellCheckerMagSwap:	
		TNT1 A 0 A_JumpIf(CountInv("NewShell") == 0,"ReloadMagSwapFinished")
		TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",10,"ReloadMagSwapFinished")
		TNT1 A 0 
		{
		 A_Giveinventory("ShotgunAmmo",1);
		 A_Takeinventory("NewShell",1);
		}
		Goto ShellCheckerMagSwap	
	ReloadMagSwapFinished:
	TNT1 A 0
		{
			if(CountInv("WW_ShotgunTypeBuckshot")>=1)
			{	
			A_Setinventory("WW_ShotgunTypeSlug", 0); 
			A_Setinventory("WW_ShotgunTypeBuckShot", 0); 
			A_Setinventory("WW_ShotgunTypeDB", 0); 
			A_Setinventory("CantWeaponSpecial",0); 
			A_Setinventory("ShotgunTypeSlug", 0); 
			A_Setinventory("ShotgunTypeBuckShot", 1); 
			A_Setinventory("ShotgunTypeDB", 0); 
			A_Print("Buckshot Shells Loaded");
			}
		}
	TNT1 A 0
		{
			if(CountInv("WW_ShotgunTypeSlug")>=1)
			{	
			A_Setinventory("WW_ShotgunTypeSlug", 0); 
			A_Setinventory("WW_ShotgunTypeBuckShot", 0); 
			A_Setinventory("WW_ShotgunTypeDB", 0); 
			A_Setinventory("CantWeaponSpecial",0); 
			A_Setinventory("ShotgunTypeSlug", 1); 
			A_Setinventory("ShotgunTypeBuckShot", 0); 
			A_Setinventory("ShotgunTypeDB", 0); 
			A_Print("Slug Shells Loaded");
			}
		}
	TNT1 A 0
		{
			if(CountInv("WW_ShotgunTypeDB")>=1)
			{	
			A_Setinventory("WW_ShotgunTypeSlug", 0); 
			A_Setinventory("WW_ShotgunTypeBuckShot", 0); 
			A_Setinventory("WW_ShotgunTypeDB", 0); 
			A_Setinventory("CantWeaponSpecial",0); 
			A_Setinventory("ShotgunTypeSlug", 0); 
			A_Setinventory("ShotgunTypeBuckShot", 0); 
			A_Setinventory("ShotgunTypeDB", 1); 
			A_Print("Dragon's Breath Shells Loaded");
			}
		}
	    SHTM OPQR 1 A_SetRoll(roll+0.1,SPF_INTERPOLATE)
		SHTG EDCB 1 A_SetRoll(roll+0.1,SPF_INTERPOLATE)
		TNT1 A 0
		{
		 A_Takeinventory("Reloading",1);
		 A_Takeinventory("PB_LockScreenTilt",1);
		 A_Takeinventory("PBPumpShotgunHasUnloaded",1);
		 A_SetRoll(0,SPF_INTERPOLATE);
		}
		TNT1 A 0 A_Refire
		Goto Ready3	
	
	AmmoSwap:
		TNT1 A 0
		{
			if(CountInv("WW_ShotgunTypeBuckshot")>=1)
			{
				if(CountInv("ShotgunTypeBuckshot")>=1)
				{
				A_Log("Ammo type already loaded");
				A_Setinventory("CantWeaponSpecial",0); 
				A_Setinventory("WW_ShotgunTypeSlug", 0); 
				A_Setinventory("WW_ShotgunTypeBuckShot", 0); 
				A_Setinventory("WW_ShotgunTypeDB", 0); 
				Return State("Ready3");
				}
			}
		Return State("");
		}
		TNT1 A 0
		{
			if(CountInv("WW_ShotgunTypeSlug")>=1)
			{
				if(CountInv("ShotgunTypeSlug")>=1)
				{
				A_Log("Ammo type already loaded");
				A_Setinventory("CantWeaponSpecial",0); 
				A_Setinventory("WW_ShotgunTypeSlug", 0); 
				A_Setinventory("WW_ShotgunTypeBuckShot", 0); 
				A_Setinventory("WW_ShotgunTypeDB", 0); 
				Return State("Ready3");
				}
			}
		Return State("");
		}
		TNT1 A 0
		{
			if(CountInv("WW_ShotgunTypeDB")>=1)
			{
				if(CountInv("ShotgunTypeDB")>=1)
				{
				A_Log("Ammo type already loaded");
				A_Setinventory("CantWeaponSpecial",0); 
				A_Setinventory("WW_ShotgunTypeSlug", 0); 
				A_Setinventory("WW_ShotgunTypeBuckShot", 0); 
				A_Setinventory("WW_ShotgunTypeDB", 0); 
				Return State("Ready3");
				}
			}
		Return State("");
		}
		TNT1 A 0{
			if (GetCvar("bd_SGAltAmmoSwap") >= 1 && CountInv("PumpshotgunMagazine") >= 1)  {return state("AltMagAmmoSwap");}
			if (GetCvar("bd_SGAltAmmoSwap") >= 1 && CountInv("PumpshotgunMagazine") == 0)  {return state("AltTubeAmmoSwap");}
			Return State("");
			}	
		TNT1 A 0
		{
			if(CountInv("WW_ShotgunTypeBuckshot")>=1)
			{
				
			A_Setinventory("WW_ShotgunTypeSlug", 0); 
			A_Setinventory("WW_ShotgunTypeBuckShot", 0); 
			A_Setinventory("WW_ShotgunTypeDB", 0); 
			A_Setinventory("CantWeaponSpecial",0); 
			A_Setinventory("ShotgunTypeSlug", 0); 
			A_Setinventory("ShotgunTypeBuckShot", 1); 
			A_Setinventory("ShotgunTypeDB", 0); 
			A_Print("Buckshot Shells Loaded");
			Return State("AlternateWeaponSpecialAnimationSwitch");
			}
		Return State("");
		}
		
		TNT1 A 0
		{
			if(CountInv("WW_ShotgunTypeSlug")>=1)
			{
				
			A_Setinventory("WW_ShotgunTypeSlug", 0); 
			A_Setinventory("WW_ShotgunTypeBuckShot", 0); 
			A_Setinventory("WW_ShotgunTypeDB", 0); 
			A_Setinventory("CantWeaponSpecial",0); 
			A_Setinventory("ShotgunTypeSlug", 1); 
			A_Setinventory("ShotgunTypeBuckShot", 0); 
			A_Setinventory("ShotgunTypeDB", 0); 
			A_Print("Slug Shells Loaded");
			Return State("AlternateWeaponSpecialAnimationSwitch");
			}
		Return State("");
		}
		
		TNT1 A 0
		{
			if(CountInv("WW_ShotgunTypeDB")>=1)
			{
				
			A_Setinventory("WW_ShotgunTypeSlug", 0); 
			A_Setinventory("WW_ShotgunTypeBuckShot", 0); 
			A_Setinventory("WW_ShotgunTypeDB", 0); 
			A_Setinventory("CantWeaponSpecial",0); 
			A_Setinventory("ShotgunTypeSlug", 0); 
			A_Setinventory("ShotgunTypeBuckShot", 0); 
			A_Setinventory("ShotgunTypeDB", 1); 
			A_Print("Dragon's Breath Shells Loaded");
			Return State("AlternateWeaponSpecialAnimationSwitch");
			}
		Return State("");
		}
	TNT1 A 0 A_Setinventory("CantWeaponSpecial",0)
	goto Ready3
	
	Deselect:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			A_SetCrosshair(0);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		TNT1 A 0
	    {
		 A_Takeinventory("Unloading",1);
		 A_TakeInventory("Zoomed",1);
		 A_TakeInventory("ADSmode",1);
         A_ZoomFactor(1.0);
		}
        SH00 HGEDB 1
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
		Wait
		
	Select:
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand")
		TNT1 A 0 ACS_NamedExecuteAlways("ToggleShotgunUpgraded",0) //For people who want this weapon to replace another
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			A_SetCrosshair(0);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		TNT1 A 0 
		{
		 A_Takeinventory("Unloading",1);
		 A_TakeInventory("RifleSelected",1);
		 A_TakeInventory("CarbineSelected",1);
		 A_TakeInventory("FistsSelected",1);
		 A_TakeInventory("SawSelected",1);
		 A_TakeInventory("SledgeSelected",1);
		 A_TakeInventory("HandgunSelected",1);
		 A_TakeInventory("DualHandgunSelected",1);
		 A_TakeInventory("RevolverSelected",1);
		 A_GiveInventory("ShotgunSelected",1);
		 A_TakeInventory("SSGSelected",1);
		 A_TakeInventory("ASGSelected",1);
		 A_TakeInventory("QSGSelected",1);
		 A_TakeInventory("MinigunSelected",1);
		 A_TakeInventory("NewChaingunSelected",1);	
	     A_TakeInventory("RocketLauncherSelected",1);
		 A_TakeInventory("GrenadeLauncherSelected",1);
		 A_TakeInventory("SGLSelected",1);
		 A_TakeInventory("PlasmaGunSelected",1);
		 A_TakeInventory("M2Selected",1);	
		 A_TakeInventory("FreezerSelected",1);
		 A_TakeInventory("RailGunSelected",1);
		 A_TakeInventory("BFGSelected",1);
		 A_TakeInventory("BFGBeamSelected",1);
		 A_TakeInventory("BHCSelected",1);
		 A_TakeInventory("RevenantLauncherSelected",1);
	     A_TakeInventory("FlameCannonSelected",1);
		 A_TakeInventory("HellRifleSelected",1);
		 A_TakeInventory("LandMineSelected",1);
		 A_TakeInventory("UACSMGSelected",1);
		 A_TakeInventory("SubMachineGunSelected",1);
		 A_TakeInventory("LostSoulSelected",1);
		 A_TakeInventory("HasBarrel",1);
		 A_TakeInventory("HasBurningBarrel",1);
		}
		TNT1 A 0 A_Raise
		Wait
	
    Fire:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			A_SetCrosshair(0);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		TNT1 A 0 {
			 if (CountInv("Zoomed") >= 1 )     {return state("Fire2");}
			 If (CountInv("ShotgunAmmo") >=1 ) {return state(1);} 
			 return state("Reload");
			}
		SHTF A 1 BRIGHT 
		{
		 A_TakeInventory("ShotgunAmmo", 1);
		 A_AlertMonsters;
		 A_FireCustomMissile("YellowFlareSpawn", 0, 0, 0, 0);
		 A_FireCustomMissile("ShakeYourAssDouble", 0, 0, 0, 0);
		 A_FireCustomMissile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17));
		 A_FireCustomMissile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17));
		 A_FireCustomMissile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17));
		 A_FireCustomMissile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17));
		 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
		 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 0, 0, 0);
		 
		 If (CountInv("ShotgunTypeSlug") >=1 )        
		    {A_PlaySoundEx("SlugShot", "Weapon");
              A_FireBullets(1.5, 0.5, 1, 140, "ShotgunPuff",FBF_NORANDOM);
			   A_FireCustomMissile("Tracer", 0, 0, 0, -14, 0, 0);
			    return state("FireAnimBegin");}
		 If (CountInv("ShotgunTypeDB") >=1 ) 
		    {A_PlaySoundEx("DRBTFIRE", "Weapon");
		      A_FireBullets(2,2,10,0,"None",FBF_NORANDOM,8192,"DragonsBreathTracer",-14,0);
		       return state("FireAnimBegin");}
		  A_PlaySoundEx("weapons/sg", "Weapon");   
		  A_FireBullets(2, 2,10,14,"ShotgunPuff",FBF_NORANDOM); 
		  return state("FireAnimBegin");
		}
		SHTF B 1 BRIGHT
		SHTF C 1 {
			A_FireCustomMissile("ShotgunWad",random(-17,17),0,random(-17,17),-6,FPF_NOAUTOAIM,random(-17,17));
			if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch-0.62, SPF_INTERPOLATE);
				A_SetAngle(angle+0.22, SPF_INTERPOLATE);
				}
			else {
				A_SetPitch(pitch-1.24, SPF_INTERPOLATE);
				A_SetAngle(angle+0.44, SPF_INTERPOLATE);
				}
		}

		SHTF D 1 {
			if (CountInv("PowerStrength") >= 1 ) {
				A_SetPitch(pitch-0.62, SPF_INTERPOLATE);
				A_SetAngle(angle+0.22, SPF_INTERPOLATE);
				}
			else {
				A_SetPitch(pitch-1.24, SPF_INTERPOLATE);
				A_SetAngle(angle+0.44, SPF_INTERPOLATE);
				}
		}
		SHTF EFG 1 
	Pump1:
		TNT1 A 0 {
			A_Giveinventory("PB_LockScreenTilt",1);
			A_WeaponOffset(0,32);
		}
		TNT1 A 0 A_JumpIfInventory("PumpshotgunMagazine", 1, "PumpfromHip")
		SHTG BCDEFGHIJ 1 A_SetRoll(roll-0.1,SPF_INTERPOLATE)
	P1Begin:
	    SHTA K 0
		SHTF K 0
		SHTG K 1 
		{
		 If(CountInv("ShotgunTypeSlug") >=1 )        
		   {A_SetWeaponSprite("SHTA");} 
		 If(CountInv("ShotgunTypeDB") >=1 )        
		   {A_SetWeaponSprite("SHTF");}
		 A_SetRoll(roll-0.1,SPF_INTERPOLATE);
		 A_PlaySoundEx("weapons/sgmvpump","Auto"); 
		 return state("");
		}
	P1B:
		TNT1 A 0
		{
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_FireCustomMissile("ShotCaseSpawn2",0,0,-5,-21);
		 return state("P1C");}        
		 If(CountInv("ShotgunTypeDB") >=1 ) {A_FireCustomMissile("ShotCaseSpawn3",0,0,-5,-21);
		 return state("P1C");}
		 A_FireCustomMissile("ShotCaseSpawn",0,0,-5,-21);
		 return state("");
		}
	P1C:
		SHTG L 1
		{
		 A_SetRoll(roll-0.4,SPF_INTERPOLATE);
		 A_SetPitch(pitch+0.1,SPF_INTERPOLATE);
		}
		SHTG M 2
		SHTG L 1 
		{
		 A_SetRoll(roll+0.4,SPF_INTERPOLATE);
		 A_SetPitch(pitch-0.1,SPF_INTERPOLATE);
		}
		TNT1 A 0 A_JumpIfInventory("NewShell", 1,2) //Skip this frame if the chamber isn't empty
		SSHR H 1 
		{
		 A_SetRoll(roll+0.1,SPF_INTERPOLATE);
		 A_PlaySoundEx("weapons/sgmvpump","Auto"); 
		 return state (2); // Skip the frame with shell showing
		}
		SHTG K 1 
		{
		 If( CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHTA");} 
		 If (CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHTF");}
		 A_SetRoll(roll+0.1,SPF_INTERPOLATE);
		 A_PlaySoundEx("weapons/sgpump", "Auto");
		 return state("");
		}
		SHTG JIHGFEDCB 1 A_SetRoll(roll+0.1,SPF_INTERPOLATE)
	P1End: // Pump End for mag & regular.
	    TNT1 A 0
		{
		 A_SetRoll(0,SPF_INTERPOLATE);
		 A_Takeinventory("PB_LockScreenTilt",1);
		}
        SHTG A 1
		{
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHTS");} 
		 If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHTD");}
		 A_DoPBWeaponAction(WRF_ALLOWRELOAD);
		 A_Refire;
		 return state("");
		}
		Goto Ready3

////Magazine Pumping.	
	PumpFromHip:
		TNT1 A 0 A_PlaySoundEx("weapons/sgmvpump","Auto")
		//TNT1 A 0{
		//if(CountInv("ShotgunAmmo") == 0 ){A_GiveInventory("ChamberARound",1);}
		//}
		SHSP ABCB 1
		TNT1 A 0
		{
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_FireCustomMissile("ShotCaseSpawn2",0,0,-5,-21); return state("PumpFromHip2");}        
		 If(CountInv("ShotgunTypeDB")   >=1 ) {A_FireCustomMissile("ShotCaseSpawn3",0,0,-5,-21); return state("PumpFromHip2");}
		 A_FireCustomMissile("ShotCaseSpawn",0,0,-5,-21); return state("");
		}
	PumpFromHip2:	 
		SHTF GFEDC 1
		TNT1 A 0 A_Refire
		goto Ready3
	
	MagPump:
	    TNT1 A 0 A_WeaponOffset(0,32)
	    SHTG BCDE 1 A_SetRoll(roll-0.1,SPF_INTERPOLATE)
		SHMG FGHIJ 1 A_SetRoll(roll-0.1,SPF_INTERPOLATE)
	    SHMA K 0
		SHMF K 0
		SHMG K 1 
		{
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHMA");} 
		 If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHMF");}
		 A_SetRoll(roll-0.1,SPF_INTERPOLATE);
		 A_PlaySoundEx("weapons/sgmvpump","Auto"); 
		 return state("");
		}
	MagP1B:	
		TNT1 A 0
		{
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_FireCustomMissile("ShotCaseSpawn2",0,0,-2,-18);
		 return state("MagP1C");}        
		 If(CountInv("ShotgunTypeDB") >=1 ) {A_FireCustomMissile("ShotCaseSpawn3",0,0,-2,-18);
		 return state("MagP1C");}
		 A_FireCustomMissile("ShotCaseSpawn",0,0,-2,-18);
		 return state("");
		}
	MagP1C:	
		SHMG L 1
		{
		 A_SetRoll(roll-0.4,SPF_INTERPOLATE);
		 A_SetPitch(pitch+0.1,SPF_INTERPOLATE);
		}
		SHTG M 2
		SHMG L 1 
		{
		 A_SetRoll(roll+0.4,SPF_INTERPOLATE);
		 A_SetPitch(pitch-0.1,SPF_INTERPOLATE);
		}
		TNT1 A 0 A_JumpIfInventory("NewShell", 1,2) //Skip this frame if the chamber isn't empty
		SHMG N 1 
		{
		 A_SetRoll(roll+0.1,SPF_INTERPOLATE);
		 A_PlaySoundEx("weapons/sgmvpump","Auto"); 
		 return state (2);
		}
		SHMG K 1 
		{
		 If( CountInv("ShotgunTypeSlug") >=1 )        
		   {A_SetWeaponSprite("SHMA");} 
		 If (CountInv("ShotgunTypeDB") >=1 )        
		   {A_SetWeaponSprite("SHMF");}
		 A_SetRoll(roll+0.1,SPF_INTERPOLATE);
		 A_PlaySoundEx("weapons/sgpump", "Auto");
		 return state("");
		}	
		SHMG JIHGF 1 A_SetRoll(roll+0.1,SPF_INTERPOLATE)
		SHTG EDCB 1 A_SetRoll(roll+0.1,SPF_INTERPOLATE)
		Goto P1End
		
	Fire2:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetCrosshair(5);
			}
        TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",1,1)  
        Goto Reload
        TNT1 A 0 
		{
		 A_AlertMonsters;
		 A_FireCustomMissile("YellowFlareSpawn", 0, 0, 0, 0);
		 A_TakeInventory("ShotgunAmmo", 1);
		 A_FireCustomMissile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17));
		 A_FireCustomMissile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17));
		 A_FireCustomMissile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17));
		 A_FireCustomMissile("ShotgunParticles", random(-17,17), 0, -1, random(-17,17));
		 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 2, 0, 0);
		 A_FireCustomMissile("GunFireSmoke", 0, 0, 0, 2, 0, 0);
		 
         If (CountInv("ShotgunTypeSlug") >=1 ) {
			A_PlaySoundEx("SlugShot", "Weapon"); 
		    A_FireBullets(1.25, 0.25, 1, 160, "ShotgunPuff",FBF_NORANDOM);
		    A_FireCustomMissile("Tracer", random(-2,2), 0, 0, -14, 0, random(-1,1));
			return state("AltFireAnimBegin");
			}  
	     If (CountInv("ShotgunTypeDB") >=1 ) {
			A_PlaySoundEx("DRBTFIRE", "Weapon");
		    A_FireBullets(1.25, 1.25,9,0,"None",FBF_NORANDOM,8192,"DragonsBreathTracer",-2,0);
		    return state("AltFireAnimBegin");
			}
		 else {
			  A_PlaySoundEx("weapons/sg", "Weapon");    
			  A_FireBullets(1.25, 1.25,10,16,"ShotgunPuff",FBF_NORANDOM);
		  return state("");
		  }
		}
	AltFireAnimBegin:	
		SHT8 F 1 BRIGHT
		{
		 A_FireCustomMissile("ShotgunWad",random(-17,17),0,random(-17,17),-6,FPF_NOAUTOAIM,random(-17,17));
		 If (CountInv("ShotgunTypeSlug") >=1 )        {A_SetWeaponSprite("SHT6");}
		 If (CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHT4");}
		 else {A_SetPitch(pitch-0.2);}
		 return state("");
		}
		TNT1 A 0 
		{
		 If (CountInv("PowerStrength") >=1 ){A_SetPitch(pitch-0.25);return state("BerserkAltPump1");}
		 return state("");
	    }
		SHT8 GHI 1
		{
		 If (CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHT6");A_SetPitch(pitch-1);}
		 If (CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHT4");A_SetPitch(pitch-1);}
		 else {A_SetPitch(pitch-1);}
		 return state("");
		}
		TNT1 A 0 {
			
			if(GetCvar("pb_toggle_aim_hold")) {
				if (!PressingAltfire() && CountInv("ShotgunAmmo") > 1){
						A_TakeInventory("Zoomed",1);
						A_ZoomFactor(1.0);
						A_SetCrosshair(0);
						return state("Pump1");
				}
			}
			return state("");
		}
		Goto AltPump1
	
	BerserkAltPump1:
	    TNT1 A 0 A_PlaySoundEx("weapons/sgmvpump", "Auto")
	    SHT8 KLMN 1
	    {
		 If(CountInv("ShotgunTypeSlug") >=1 )        
		 {A_SetWeaponSprite("SHT6");} 
		 If(CountInv("ShotgunTypeDB") >=1 )        
		 {A_SetWeaponSprite("SHT4");} 
		 return state("");
		}
	Goto AltPump1B
							
	AltPump1:
	    TNT1 A 0 A_PlaySoundEx("weapons/sgmvpump", "Auto")
		SHT8 IHGJKLMN 1
		{
		 If(CountInv("ShotgunTypeSlug") >=1 )        
		 {A_SetWeaponSprite("SHT6");} 
		 If(CountInv("ShotgunTypeDB") >=1 )        
		 {A_SetWeaponSprite("SHT4");} 
		 return state("");
		}
	AltPump1B:	 
		SHT8 OPQR 1 
		TNT1 A 0 {
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_FireCustomMissile("ShotCaseSpawn2",0,0,4,-7);
		 return state("AFP1E");}        
		 If(CountInv("ShotgunTypeDB") >=1 ) {A_FireCustomMissile("ShotCaseSpawn3",0,0,4,-7);
		 return state("AFP1E");}
		 A_FireCustomMissile("ShotCaseSpawn",0,0,4,-7);
		 return state("");
		}
	AFP1E:	 
		TNT1 A 0 A_PlaySoundEx("weapons/sgpump", "Auto")
		SHT8 STQO 1
		SHT8 NMLKJ 1
		{
		 If(CountInv("ShotgunTypeSlug") >=1 )        
		 {A_SetWeaponSprite("SHT6");} 
		 If(CountInv("ShotgunTypeDB") >=1 )        
		 {A_SetWeaponSprite("SHT4");} 
		 return state("");
		}
		SHT8 A 1
		{
		 If(CountInv("ShotgunTypeSlug") >=1 )        
		 {A_SetWeaponSprite("SHT6");} 
		 If(CountInv("ShotgunTypeDB") >=1 )        
		 {A_SetWeaponSprite("SHT4");} 
		 
		 
		 
		if(GetCvar("pb_toggle_aim_hold")) {
			if(JustReleased(BT_ALTATTACK)){
				return state("Zoomout");
			}
	
			if (JustPressed(BT_ATTACK) && PressingAltfire()){
					return state("Fire2");
			}
		}
		else {
			if(PressingAltfire()){
				return state("Zoomout");
			}
			
			if (JustPressed(BT_ATTACK)){
					return state("Fire2");
			}
			A_Refire("Fire2");
		}
		return A_DoPBWeaponAction(WRF_ALLOWRELOAD|WRF_NOFIRE);
		 
		 
// 		 A_WeaponReady(WRF_ALLOWRELOAD);
// 		 A_ReFire;
// 		 return state("");
	}
		 Goto Ready2
							
	AltFire:
		TNT1 A 0 {
			A_WeaponOffset(0,32);
			A_SetRoll(0);
			A_SetCrosshair(0);
			A_TakeInventory("PB_LockScreenTilt",1);
		}
		TNT1 A 0 {
			 A_WeaponOffset(0,32);
			 A_PlaySoundEx("IronSights", "Auto");
			 If(CountInv("Zoomed") >=1 )  {return state("zoomout");}
			 A_GiveInventory("Zoomed",1);
			 A_ZoomFactor(1.2);
			 A_SetCrosshair(5);
			 return state("");
		}
        SHT8 EEDK 1 {
			 If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHT6");} 
			 If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHT4");} 
			 return state("");
		}
        Goto Ready2
	Zoomout:	
		TNT1 A 0 {
			A_TakeInventory("Zoomed",1);
			A_ZoomFactor(1.0);
			A_SetCrosshair(0);
		}
		SHT8 KDEE 1 {
		 If(CountInv("ShotgunTypeSlug") >=1 )        
		 {A_SetWeaponSprite("SHT6");} 
		 If(CountInv("ShotgunTypeDB") >=1 )        
		 {A_SetWeaponSprite("SHT4");} 
		 return state("");
		}
        Goto Ready3
					
	ReloadWithNoAmmoLeft:
    Reload:
	    TNT1 A 0 {
		 A_TakeInventory("Reloading", 1);
		 A_TakeInventory("Zoomed", 1);
		 A_WeaponOffset(0,32);
         A_ZoomFactor(1.0);
		 A_Giveinventory("PB_LockScreenTilt",1);
		}
		SHTG A 1 {
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHTS");} 
		 If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHTD");}
		 A_SetCrosshair(0);
		 A_DoPBWeaponAction;
		 return state("");
		}
		TNT1 A 0 A_JumpIfInventory("PumpshotgunMagazine",1,"MagReload")
	ReloadActuallyBegin:
		TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",9,"Ready3") 
		TNT1 A 0 A_JumpIfInventory("ShotgunAmmo", 1, "ReloadNormally")
		TNT1 A 0 A_GiveInventory("PBPumpShotgunWasEmpty", 1)		
	ReloadNormally:	
		TNT1 A 0 A_JumpIf(CountInv("NewShell") == 0,"NoAmmo")
		SHTG BCDEFGHIJ 1 A_SetRoll(roll-0.1,SPF_INTERPOLATE)
		TNT1 A 0 A_TakeInventory("PBPumpShotgunHasUnloaded", 1)
    ShellChecker:
		TNT1 A 0 A_JumpIf(CountInv("NewShell") == 0,"ReloadFinished")
		TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",9,"ReloadFinished")
		SSHR A 1 {
		 A_DoPBWeaponAction(WRF_NOBOB);
		 A_SetRoll(roll-0.1,SPF_INTERPOLATE);
		}
		TNT1 A 0 A_JumpIfInventory("PBPumpShotgunWasEmpty", 1, "ChamberInsertShell")
		SSHR BCD 1 {
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHTS");}
		 If(CountInv("ShotgunTypeDB") >=1 ){A_SetWeaponSprite("SHTD");}
		 return state("");
		}	
		TNT1 A 0 A_PlaySoundEx("insertshell", "Auto")
		SSHR E 1 A_SetPitch(pitch-0.2,SPF_INTERPOLATE)
		SSHR FG 1 {
		 A_SetPitch(pitch+0.1,SPF_INTERPOLATE);
		 A_DoPBWeaponAction(WRF_NOBOB);
		}
		TNT1 A 0 {
		 A_Giveinventory("ShotgunAmmo",1);
		 A_Takeinventory("NewShell",1);
		}
		SSHR A 0 A_Refire
        TNT1 A 0 A_DoPBWeaponAction(WRF_NOBOB)
		Goto ShellChecker
			
	ChamberInsertShell:
		TNT1 A 0 A_Takeinventory("PBPumpShotgunWasEmpty",1)
		SSHR A 1 A_DoPBWeaponAction(WRF_NOBOB)
		SSHR H 2 A_PlaySoundEx("weapons/sgmvpump","Auto")
		SSHR I 3 A_PlaySoundEx("insertshell","Auto")
		SSHR J 1 
		SSHR KLMNOPP 1
		{
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHTS");}
		 If(CountInv("ShotgunTypeDB") >=1 ){A_SetWeaponSprite("SHTD");}
		 return state("");
		}
		TNT1 A 0 
		{
		 A_PlaySoundEx("weapons/sgpump","Auto");
		 A_Giveinventory("ShotgunAmmo",1);
		 A_Takeinventory("NewShell",1);
		}
		Goto ShellChecker
	
	ReloadFinished:
	    SSHR A 1
		SHTG JIHGFEDCBA 1
		{
		 A_DoPBWeaponAction(WRF_NOBOB);
		 A_SetRoll(roll+0.1,SPF_INTERPOLATE);
		}	
		TNT1 A 0
		{
		 A_Takeinventory("Reloading",1);
		 A_Takeinventory("PB_LockScreenTilt",1);
		 A_SetRoll(0,SPF_INTERPOLATE);
		}
		Goto Ready3
	
	MagReload:
	BeginMagReload:
		TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",11,"Ready3")
		TNT1 A 0 A_JumpIf(CountInv("NewShell") == 0,"NoAmmo")
		SHTG BCDE 1 A_SetRoll(roll-0.1,SPF_INTERPOLATE)
		TNT1 A 0 A_JumpIfInventory("PBPumpShotgunHasUnloaded",1,5)
		SHMG FGHI 1 A_SetRoll(roll-0.1,SPF_INTERPOLATE)
		Goto ActuallyBeginMagReload
		SHTG GH 1
		Goto InsertMag
	ActuallyBeginMagReload:	
	    TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",11,"Ready3")
		SHTN ABCDEFG 1
		TNT1 A 0 A_PlaySoundEx("RIFCL_OU", "Auto")
		TNT1 A 0 A_PlaySoundEx("weapons/smg_clipout", "Auto")
		TNT1 A 0 A_JumpIf(CountInv("ShotgunAmmo") <= 1,"EmptyMagReload")
		SHTM GFEDCB 1 {
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHMS");} 
		 If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHMD");}
		}
		
		goto InsertMag	
	EmptyMagReload:
		SHTN GHIJKL 1
		TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",1,2)
		TNT1 A 0 A_FireCustomMissile("EmptyClipMP40",-5,0,8,-4)
	
	InsertMag:
	    SHMS BCDEFG 0
		SHMD BCDEFG 0
		SHTM A 4
	    SHTM BCDEFG 1 {
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHMS");} 
		 If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHMD");}
		}
		SHTM H 1 A_PlaySoundEx("RIFCL_IN", "Auto")
		SHTM I 1 A_PlaySoundEx("insertshell", "Auto")
        SHTM JKLMN 1 
		TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",1,"ShellCheckerMag")
		SHMG HIJ 1 A_SetRoll(roll-0.1,SPF_INTERPOLATE)
	    SHMA K 0
		SHMF K 0
		//SHMG K 1 
		//{
		 //If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHMA");} 
		 //If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHMF");}
		 //A_SetRoll(roll-0.1,SPF_INTERPOLATE);
		 //A_PlaySoundEx("weapons/sgmvpump","Auto"); 
		 //return state("");
		//}
		SHMG L 1
		{
		 A_SetRoll(roll-0.4,SPF_INTERPOLATE);
		 A_SetPitch(pitch+0.1,SPF_INTERPOLATE);
		}
		SHTG M 2
		SHMG L 1 
		{
		 A_SetRoll(roll+0.4,SPF_INTERPOLATE);
		 A_SetPitch(pitch-0.1,SPF_INTERPOLATE);
		}
		TNT1 A 0 A_JumpIfInventory("NewShell", 1,2) //Skip this frame if the chamber isn't empty
		SHMG N 1 
		{
		 A_SetRoll(roll+0.1,SPF_INTERPOLATE);
		 A_PlaySoundEx("weapons/sgmvpump","Auto"); 
		 return state ("");
		}
		SHMG K 1 
		{
		 If( CountInv("ShotgunTypeSlug") >=1 )        
		   {A_SetWeaponSprite("SHMA");} 
		 If (CountInv("ShotgunTypeDB") >=1 )        
		   {A_SetWeaponSprite("SHMF");}
		 A_SetRoll(roll+0.1,SPF_INTERPOLATE);
		 A_PlaySoundEx("weapons/sgpump", "Auto");
		 return state("");
		}	
		SHMG JI 1 A_SetRoll(roll+0.1,SPF_INTERPOLATE)
		TNT1 A 0 A_SetRoll(roll+0.1,SPF_INTERPOLATE)
	ShellCheckerMagEC:	
		TNT1 A 0 A_JumpIf(CountInv("NewShell") == 0,"ReloadMagFinished")
		TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",10,"ReloadMagFinished")
		TNT1 A 0 
		{
		 A_Giveinventory("ShotgunAmmo",1);
		 A_Takeinventory("NewShell",1);
		}
		Goto ShellCheckerMagEC	
	ShellCheckerMag:	
		TNT1 A 0 A_JumpIf(CountInv("NewShell") == 0,"ReloadMagFinished")
		TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",11,"ReloadMagFinished")
		TNT1 A 0 
		{
		 A_Giveinventory("ShotgunAmmo",1);
		 A_Takeinventory("NewShell",1);
		}
		Goto ShellCheckerMag
	ReloadMagFinished:
	    SHTM OPQR 1 A_SetRoll(roll+0.1,SPF_INTERPOLATE)
		SHTG EDCB 1 A_SetRoll(roll+0.1,SPF_INTERPOLATE)
		TNT1 A 0
		{
		 A_Takeinventory("Reloading",1);
		 A_Takeinventory("PB_LockScreenTilt",1);
		 A_Takeinventory("PBPumpShotgunHasUnloaded",1);
		 A_SetRoll(0,SPF_INTERPOLATE);
		}
		TNT1 A 0 A_Refire
		Goto Ready3			
	Unload:
		SHTG A 1{
			A_ZoomFactor(1.0);
			A_WeaponOffset(0,32);
			A_Takeinventory("Unloading",1);
			A_Takeinventory("ADSmode",1);
			A_Takeinventory("Zoomed",1);
			A_GiveInventory("PBPumpShotgunWasEmpty", 1);
			A_Giveinventory("PB_LockScreenTilt",1);
			}
        TNT1 A 0 A_JumpIfInventory("ShotgunAmmo",1,1)
        Goto Ready3
		SHTG BCDE 1 A_SetRoll(roll-0.1,SPF_INTERPOLATE)
		TNT1 A 0 A_JumpIfInventory("PumpshotgunMagazine",1,"MagUnload")
		SHTG FGHIJ 1 A_SetRoll(roll-0.1,SPF_INTERPOLATE)
		Goto RemoveBullets
	MagUnload:	
	    SHMG FGHIJ 1 A_SetRoll(roll-0.1,SPF_INTERPOLATE)
		SHTN ABCDEFG 1
		TNT1 A 0 A_PlaySoundEx("RIFCL_OU", "Auto")
		TNT1 A 0 A_PlaySoundEx("weapons/smg_clipout", "Auto")
		SHTN HIJKL 1
		Goto RemMagBullets
		
	RemoveBullets:
		TNT1 A 0 A_JumpIf(CountInv("ShotgunAmmo") == 0,"FinishUnload")
		TNT1 A 0 A_PlaySound("weapons/sgmvpump")
	ActuallyUnload:
		SHTG K 1{
		 If(CountInv("ShotgunTypeSlug") >=1 ) {A_SetWeaponSprite("SHTA");} 
		 If(CountInv("ShotgunTypeDB") >=1 ) {A_SetWeaponSprite("SHTF");}
		 A_SetRoll(roll-0.1,SPF_INTERPOLATE);
		 return state("");
		}
		SHTG L 1 {
			A_SetRoll(roll-0.4,SPF_INTERPOLATE);
			A_SetPitch(pitch+0.1,SPF_INTERPOLATE);
		}
		SHTG M 1
		SHTG L 1 {
			A_SetRoll(roll+0.4,SPF_INTERPOLATE);
			A_SetPitch(pitch-0.1,SPF_INTERPOLATE);
		}
		TNT1 A 0 A_JumpIfInventory("NewShell", 1,3) 
		SSHR H 1 A_SetRoll(roll-0.1,SPF_INTERPOLATE) // So the chamber shows as being empty
		TNT1 A 0 { return state (2); } // Skip This Frame if the shotgun isn't loaded.
		SHTG K 1 {
		 If(CountInv("ShotgunTypeSlug") >=1 )        
		   {A_SetWeaponSprite("SHTA");} 
		 If(CountInv("ShotgunTypeDB") >=1 )        
		   {A_SetWeaponSprite("SHTF");}
		 A_SetRoll(roll-0.1,SPF_INTERPOLATE);
		 return state("");
		}
		SHTG J 1 {
			A_SetRoll(roll+0.1,SPF_INTERPOLATE);
			A_PlaySoundEx("weapons/sgmvpump", "Auto");
			A_Takeinventory("ShotgunAmmo",1);
			A_Giveinventory("NewShell",1);
			}
		Goto RemoveBullets
	
	RemMagBullets:
	    TNT1 A 0 A_JumpIf(CountInv("ShotgunAmmo") == 0,"FinishUnload")
	    TNT1 A 0 {
			A_Takeinventory("ShotgunAmmo",1);
			A_Giveinventory("NewShell",1);
			}
		Goto RemMagBullets
		
	FInishUnload:
		SHTG IHGFEDCB 1 A_SetRoll(roll+0.1,SPF_INTERPOLATE)
		TNT1 A 0 {
			A_SetRoll(0,SPF_INTERPOLATE);
			A_GiveInventory("PBPumpShotgunHasUnloaded", 1);
			A_Takeinventory("PB_LockScreenTilt",1);
			A_Takeinventory("Unloading",1);
			}
		Goto Ready3
		
	Spawn:
		SHTC A -1
		Stop
	
    FlashKicking:
	    TNT1 A 0 A_WeaponOffset(0,32)
		TNT1 A 0 A_JumpIfInventory("PumpshotgunMagazine", 1, "MagFlashKick")
	    SHTG CDFGHI 1
		SHTG J 2
		SHTG IHGEDB 1
		Stop
	
	MagFlashKick:
	    SHTG CD 1
		SHMG FGH 1
		SHMG I 1
		SHMG J 2
		SHMG IHG 1
		SHTG EDB 1
		Stop
		
	FlashAirKicking:
	    TNT1 A 0 A_WeaponOffset(0,32)
		TNT1 A 0 A_JumpIfInventory("PumpshotgunMagazine", 1, "MagFlashAirKick")
	    SHTG CDFGHI 1
		SHTG J 4
		SHTG IHGEDBB 1
		Stop
	
	MagFlashAirKick:
	    SHTG CD 1
		SHMG FGHI 1
		SHMG I 4
		SHMG IHG 1
		SHTG EDBB 1
		Stop
		
	FlashSlideKicking:
	    TNT1 A 0 A_WeaponOffset(0,32)
		TNT1 A 0 A_JumpIfInventory("PumpshotgunMagazine", 1, "MagFlashSlideKicking")
		SHTG CDFGHIJJJJJJJJJJJJJIHGEDB 1
		Stop
	
	MagFlashSlideKicking:
	    SHTG CD 1
		SHMG FGHIJJJJJJJJJJJJJIHGE 1
	    SHTG DC 1
		Stop

	FlashSlideKickingStop:
	    TNT1 A 0 A_WeaponOffset(0,32)
		TNT1 A 0 A_JumpIfInventory("PumpshotgunMagazine", 1, "MagFlashSlideKickingStop")
		SHTG JIHGEDB 1
		Stop
	
	MagFlashSlideKickingStop:
	    SHMG JIHGF 1
		SHTG DC 1
		Stop
		
	FlashPunching:
        Goto FlashKicking
	}
}

ACTOR ShotgunAmmo : Ammo
{
   Inventory.Amount 0
   Inventory.MaxAmount 9
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 9
   Inventory.Icon "SHTCA1"
}