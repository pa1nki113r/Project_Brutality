//I'm a fucking DANGEROUS cowboy (c) 2014 SGT MARK IV tm... And a bit of Pa1nki113r (R). Original Sprites by Doom Nukem.

ACTOR FiredLeftSSG : Inventory // How many times you fired with the LMB
{
 Inventory.MaxAmount 2
}

Actor FiredLeftSSGLMB : Inventory 
{
 Inventory.MaxAmount 1
}

Actor FiredRightSSG : Inventory // How many times you fired with the RMB
{
 Inventory.MaxAmount 4
}

Actor FiredRightSSGRMB : Inventory 
{
 Inventory.MaxAmount 1
}

ACTOR DualSSG: PB_DualWeapon
{
	Weapon.BobRangeX 0.3
	Weapon.BobRangeY 0.5
	Weapon.BobStyle InverseSmooth
	Weapon.BobSpeed 2.4
	Weapon.AmmoUse1 0 
	//Weapon.SelectionOrder 100
	Weapon.AmmoGive1 0 //How much ammo can be gathered with this weapon
	Weapon.AmmoUse2 0
	Weapon.AmmoGive2 0
	Weapon.AmmoType1 "NewShell" //Reserve ammo type
	Weapon.AmmoType2 "DualSSGAmmo" //Magazine ammo type
	//Weapon.AmmoType2 "DualSSGAmmo" //Magazine ammo type
	Obituary "%o was pasted by %k's Double Sawed-Offs." //Kill message
	+FLOORCLIP
	+DONTGIB
	Tag "Dual Sawed-Offs"
    AttackSound "None" //You better leave this clear
	Inventory.Pickupmessage "" //Pickup message
    +WEAPON.NOAUTOAIM //Makes this weapon never autoaim, so recoil can work better
    Scale 0.6 //Weapon's pickup sprite size
	//+WEAPON.NOAUTOFIRE
	+WEAPON.NO_AUTO_SWITCH
	+POWERED_UP
	Weapon.SisterWeapon SSG
	
	States
	{
	
	Spawn:
	TNT1 A 100//Pickup sprite
	Loop
	
	GoToPurist:
		TNT1 A 0 A_SelectWeapon("SSG")
		Goto Select
		
	DontFlashClimbing:
	    TNT1 A 9
		Goto Flash

	Ready:
		TNT1 A 0 A_JumpIfInventory("IsPlayingAsPurist", 1, "GoToPurist")
		P6SS ABC 1
		P6SG A 1
	Ready3:
	ReadyToFire:
		P6SG A 1 A_WeaponReady(WRF_ALLOWRELOAD)// Weapon is ready to fire
		//TNT1 A 0 A_JumpIfInventory("IsFiringSecondary", 1, 1)
		//TNT1 A 0 A_GunFlash
		TNT1 A 0 A_JumpIfInventory("FiredPrimary",1,"FireLeftGun") //Check if player wants to reload
		TNT1 A 0 A_JumpIfInventory("Reloading",1,"Reload2") //Check if player wants to reload
		TNT1 A 0 A_JumpIfInventory("Grabbing_A_Ledge",1,"LedgeClimb")
		TNT1 A 0 A_JumpIfInventory("Unloading",1,"Unload")
		TNT1 A 0 A_JumpIfInventory("Kicking",1,"DoKick")
        TNT1 A 0 A_JumpIfInventory("Taunting",1,"Taunt")
		TNT1 A 0 A_JumpIfInventory("Salute1", 1, "Salute")
		TNT1 A 0 A_JumpIfInventory("Salute2", 1, "Salute")
	    TNT1 A 0 A_JumpIfInventory("UseEquipment", 1, "UseEquipment") //NEW EQUIPMENT SYSTEM
		TNT1 A 0 A_JumpIfInventory("ToggleEquipment", 1, "SwitchEquipment") //NEW EQUIPMENT SYSTEM
		TNT1 A 0 A_JumpIfInventory("GoWeaponSpecialAbility", 1, "NoDualWield")
		TNT1 A 0 A_JumpIfInventory("GrabbedBarrel", 1, "GrabBarrel")
		Loop
		
	NoDualWield:
		TNT1 A 0 A_Takeinventory("GoWeaponSpecialAbility",1)
		TNT1 A 0 A_SelectWeapon("SSG")
		Goto Select
		
	Deselect:
		TNT1 A 0 A_PlaySound("IronSights", 0)
		TNT1 A 0 A_TakeInventory("DoPunch",1)
		TNT1 A 0 A_TakeInventory("SSGSelected",1)
		TNT1 A 0 A_JumpIfInventory("GotMeatShield", 1, "GrabEnemy")
		TNT1 AAAAAA 0 A_Lower
		TNT1 A 1 A_Lower //Makes player switch weapons faster
		Wait
		
	Select:
		TNT1 A 0 A_PlaySound("IronSights", 0)
		TNT1 A 0 A_Overlay(-10, "FirstPersonLegsStand")
		TNT1 A 0 A_TakeInventory("RifleSelected",1)
		TNT1 A 0 A_TakeInventory("GoWeaponSpecialAbility", 1)
		TNT1 A 0 A_TakeInventory("FistsSelected",1)
		TNT1 A 0 A_TakeInventory("SawSelected",1)
		TNT1 A 0 A_TakeInventory("SledgeSelected",1)
		TNT1 A 0 A_TakeInventory("HandgunSelected",1)
		TNT1 A 0 A_TakeInventory("DualHandgunSelected",1)
		TNT1 A 0 A_TakeInventory("RevolverSelected",1)
		TNT1 A 0 A_TakeInventory("ShotgunSelected",1)
		TNT1 A 0 A_GiveInventory("SSGSelected",1)
		TNT1 A 0 A_TakeInventory("ASGSelected",1)
		TNT1 A 0 A_TakeInventory("QSGSelected",1)
		TNT1 A 0 A_TakeInventory("MinigunSelected",1)
		TNT1 A 0 A_TakeInventory("NewChaingunSelected",1)	
		TNT1 A 0 A_TakeInventory("RocketLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("GrenadeLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("SGLSelected",1)
		TNT1 A 0 A_TakeInventory("PlasmaGunSelected",1)
		TNT1 A 0 A_TakeInventory("M2Selected",1)	
		TNT1 A 0 A_TakeInventory("FreezerSelected",1)
		TNT1 A 0 A_TakeInventory("RailGunSelected",1)
		TNT1 A 0 A_TakeInventory("BFGSelected",1)
		TNT1 A 0 A_TakeInventory("BFGBeamSelected",1)
		TNT1 A 0 A_TakeInventory("BHCSelected",1)
		TNT1 A 0 A_TakeInventory("RevenantLauncherSelected",1)
		TNT1 A 0 A_TakeInventory("FlameCannonSelected",1)
		TNT1 A 0 A_TakeInventory("HellRifleSelected",1)
		TNT1 A 0 A_TakeInventory("LandMineSelected",1)
		TNT1 A 0 A_TakeInventory("UACSMGSelected",1)
		TNT1 A 0 A_TakeInventory("SubMachineGunSelected",1)
		TNT1 A 0 A_TakeInventory("LostSoulSelected",1)
		TNT1 A 0 A_TakeInventory("HasBarrel",1)
		TNT1 A 0 A_TakeInventory("HasBurningBarrel",1)
		TNT1 AAAAAAAAAAAAAAAAAA 0 A_Raise
		TNT1 AAAAAAAA 1 A_Raise
		Wait
	
	DryFire:
	    P6W2 D 1 A_PlaySound("DRYFIRE", 1)
		P6W2 A 3
		Goto ReadyToFire
	 
		///////////////////////////////////////////////////
			
	Fire:
	FireLeftGun:
		TNT1 A 0 A_JumpIfInventory("FiredRightSSGRMB",1,2)
		TNT1 A 0 A_JumpIfInventory("FiredLeftSSG",1,"FireRightGun")
		TNT1 A 0 A_WeaponOffset(0,32)
		TNT1 A 0 A_JumpIfInventory("DualSSGAmmo", 2, 3)//First of all, checks if there is ammo inside the gun
		TNT1 A 0 A_TakeInventory("FiredLeftSSGLMB",1)
		TNT1 A 0 A_TakeInventory("FiredRightSSGRMB",1)
		Goto Reload//Couldn't find any ammo. Reload
	FLGStart:
		TNT1 A 0 A_GiveInventory("FiredLeftSSGLMB",1)
		TNT1 A 0 A_GiveInventory("FiredLeftSSG",1)
		TNT1 A 0 A_TakeInventory("DualSSGAmmo", 2)
		TNT1 A 0 A_TakeInventory("SSGAmmoCounter", 2)
		TNT1 A 0 A_TakeInventory("FiredRightSSGRMB",1)
		TNT1 A 0 A_AlertMonsters
		P6W2 A 1 BRIGHT
	    P6W2 B 1 BRIGHT A_FireBullets(0, 0, 1, 35, "shotpuff", 1, 220)//Horizontal Spread, Vertical Spread, Numbers of Projectiles (Leave as -1 if its a single one), Damage Factor
		TNT1 A 0  A_PlaySound("SSHFIRE", 1)//Play gun fire sound
		RIFF A 0 A_FireCustomMissile("GunFireSmoke", 0, 0, -3, 0, 0, 0)
		RIFF A 0 A_FireCustomMissile("GunFireSmoke", 0, 0, -6, 0, 0, 0)
		TNT1 AAAAAAAAAAA 0 A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7))
		TNT1 A 0 A_FireBullets(15, 9, 22, 7, "ShotgunPuff")
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0)
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", -15, 0, 0, 0)
		TNT1 A 0 A_SetPitch(-1.55 + pitch)//Vertical recoil down
		TNT1 A 0 ACS_NamedExecute("Recoil282", 0, 0, 0, 0)
		P6W2 CDEFGHIJKL 1
		P6W2 M 1 A_Refire

		Goto ReadyToFire//No need to reload. Get back to Ready state.
	
	FireRightGun:
		TNT1 A 0 A_WeaponOffset(0,32)
		TNT1 A 0 A_JumpIfInventory("DualSSGAmmo", 2, 3)
		TNT1 A 0 A_TakeInventory("FiredLeftSSGLMB",1)
		TNT1 A 0 A_TakeInventory("FiredRightSSGRMB",1)
		Goto Reload//Couldn't find any ammo. Reload
		TNT1 A 0 A_JumpIfInventory("FiredRightSSGRMB",1,"FLGStart")
		TNT1 A 0 A_JumpIfInventory("FiredRightSSG",2,"FLGStart")
		TNT1 A 0 A_GiveInventory("FiredLeftSSG",1)
		TNT1 A 0 A_GiveInventory("FiredRightSSGRMB",1)
		TNT1 A 0 A_TakeInventory("FiredLeftSSGLMB",1)
		TNT1 A 0 A_TakeInventory("DualSSGAmmo", 2)
		TNT1 A 0 A_TakeInventory("SSGAmmoCounter", 2)
		TNT1 A 0 A_JumpIfInventory("DualSSGAmmo",2,3)
		TNT1 A 0 A_TakeInventory("FiredLeftSSGLMB",1)
		TNT1 A 0 A_TakeInventory("FiredRightSSGRMB",1)
		TNT1 A 0 A_AlertMonsters
		P6W1 A 1 BRIGHT
	    P6W1 B 1 BRIGHT A_FireBullets(0, 0, 1, 35, "shotpuff", 1, 220)
		TNT1 A 0  A_PlaySound("SSHFIRE", 1)
		RIFF A 0 A_FireCustomMissile("GunFireSmoke", 0, 0, -3, 0, 0, 0)
		RIFF A 0 A_FireCustomMissile("GunFireSmoke", 0, 0, -6, 0, 0, 0)
		TNT1 AAAAAAAAAAA 0 A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7))
		TNT1 A 0 A_FireBullets(15, 9, 22, 7, "ShotgunPuff")
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0)
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", -15, 0, 0, 0)
		TNT1 A 0 A_SetPitch(-1.55 + pitch)
		TNT1 A 0 ACS_NamedExecute("Recoil282", 0, 0, 0, 0)
		P6W1 CDEFGHIJKL 1
		P6W1 M 1 A_Refire

		Goto ReadyToFire
			
		////////////////////////////////////////////////////
	
	DontFlash:
	    TNT1 A 1
		Goto ReadyToFire
	
	AltFire:
	TNT1 A 0 A_Jumpif(GetCVar(pb_olddualssgfiresystem)==1,"FireRightGun")
	FireHalfBlastRightGun:
	    TNT1 A 0 A_JumpIfInventory("FiredRightSSG",3,"FireHalfBlastLeftGun")
		TNT1 A 0 A_JumpIf(CountInv(FiredRightSSG)==1,"FireHalfBlastLeftGun")
		TNT1 A 0 A_JumpIfInventory("DualSSGAmmo", 1, 2)//First of all, checks if there is ammo inside the gun
		TNT1 A 0 A_PlaySound("weapons/empty", 1)
		Goto Reload
	FireHBRGStart:
		TNT1 A 0 A_TakeInventory("DualSSGAmmo", 1)
		TNT1 A 0 A_TakeInventory("SSGAmmoCounter", 1)
		TNT1 A 0 A_GiveInventory("FiredRightSSG",1)
		TNT1 A 0 A_AlertMonsters
		P6W1 A 1 BRIGHT
		TNT1 A 0  A_PlaySound("weapons/shh2", 1)//Play gun fire sound
		P6W1 B 1 BRIGHT A_FireBullets(9, 6, 11, 7, "ShotgunPuff")
		TNT1 AAAAAA 0 A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7))
		RIFF A 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 3, 0, 0, 0)
		RIFF A 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 6, 0, 0, 0)
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0)
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", -15, 0, 0, 0)
		TNT1 A 0 A_SetPitch(-1.55 + pitch)//Vertical recoil down
		TNT1 A 0 ACS_NamedExecute("Recoil282", 0, 0, 0, 0)
		P6W1 CDEFGHIJKL 1
		P6W1 M 1 A_Refire
	
		Goto ReadyToFire
	
	FireHalfBlastLeftGun:
		TNT1 A 0 A_JumpIfInventory("FiredRightSSG", 4, "Reload")
		TNT1 A 0 A_JumpIf(CountInv(FiredRightSSG)== 2, "FireHalfBlastRightGun")
		TNT1 A 0 A_JumpIfInventory("DualSSGAmmo", 1, 2)
		TNT1 A 0 A_PlaySound("weapons/empty", 1)
		Goto Reload
		TNT1 A 0 A_JumpIfInventory("FiredLeftSSG",1,"FireHBRGStart") 
		TNT1 A 0 A_TakeInventory("DualSSGAmmo", 1)
		TNT1 A 0 A_TakeInventory("SSGAmmoCounter", 1)
		TNT1 A 0 A_GiveInventory("FiredRightSSG",1)
		TNT1 A 0 A_AlertMonsters
		P6W2 A 1 BRIGHT
		TNT1 A 0  A_PlaySound("weapons/shh2", 1)
		P6W2 B 1 BRIGHT A_FireBullets(9, 6, 11, 7, "ShotgunPuff")
		TNT1 AAAAAA 0 A_FireCustomMissile("Tracer", Random(-7, 7), 0, -1, Random(-7, 7))
		RIFF A 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 3, 0, 0, 0)
		RIFF A 0 A_FireCustomMissile("GunFireSmoke", 0, 0, 6, 0, 0, 0)
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", 15, 0, 0, 0)
		TNT1 AA 0 A_FireCustomMissile("YellowFlareSpawn", -15, 0, 0, 0)
		TNT1 A 0 A_SetPitch(-1.55 + pitch)
		TNT1 A 0 ACS_NamedExecute("Recoil282", 0, 0, 0, 0)
		P6W2 CDEFGHIJKL 1
		P6W2 M 1 A_Refire

		Goto ReadyToFire
		
	/*DryFIre2:
	    P6W1 M 1 A_PlaySound("weapons/empty", 1)
		P6W1 MMM 1 A_JumpIfInventory("StopDualWield", 1, "LightDone")
		Goto ReadyToFire*/	
		
		
	Reload:
		DPRS E 0 //Always leave one free line before the reload animation to prevent bugs
		TNT1 A 0 A_TakeInventory("Reloading",1)//Always put this to make sure that the game understand that you already are reloading your weapon, and calling this state again is not necessary
		TNT1 A 0 A_JumpIfInventory("DualSSGAmmo", 4, "ReadytoFire")//Checks if the weapon is not fully reloaded, if yes, cancel reload.
		TNT1 A 0 A_PlaySound("DRYFIRE", 1)
		TNT1 A 0 A_JumpIfInventory("DualSSGAmmo",2,3)
		TNT1 A 0 A_TakeInventory("FiredLeftSSGLMB",1)
		TNT1 A 0 A_TakeInventory("FiredRightSSGRMB",1)
		TNT1 A 0 A_JumpIfInventory("NewShell", 1, 1)//Checks if you have spare ammo
		Goto ReadyToFire//Identified that you have no spare ammo. Get back to Ready animation
		TNT1 A 0 A_GiveInventory("StopDualWield", 1)
	Reload2:	
	    TNT1 A 0
		P6SS EDCBA 1
	
	Refill:	
	TNT1 A 0 A_JumpIfInventory("NewShell", 1, 1)
		Goto ReadyToFire
		TNT1 A 0 A_TakeInventorY("NewShell", 1)
		TNT1 A 0 A_GiveInventory("DualSSGAmmo", 1)
		TNT1 A 0 A_GiveInventory("SSGAmmoCounter", 1)
		Goto Check

	Check:
	TNT1 A 0 A_JumpIfInventory("DualSSGAmmo", 4, 2)
	Goto Refill
	TNT1 A 0
	Goto FullyLoaded
	
	FullyLoaded:
	    TNT1 A 0 A_JumpIfInventory("FiredLeftSSGLMB",1,"LeftReload")
		TNT1 A 0 A_JumpIfInventory("FiredRightSSGRMB",1,"RightReload")
		TNT1 A 0 A_JumpIfInventory("FiredRightSSG",4,"RightReload")
		TNT1 A 0 A_JumpIfInventory("FiredRightSSG",3,"LeftReloadSingle")
		TNT1 A 0 A_JumpIfInventory("FiredRightSSG",2,"LeftReloadSingle")
		TNT1 A 0 A_JumpIfInventory("FiredRightSSG",1,"RightReloadSingle")
		Goto ReloadBoth
		
	 ReloadBoth:
		R6FL ABCDEFGHIJ 1
	    TNT1 A 0 A_PlaySound("weapons/ssg/open", 8)
	    TNT1 AA 0 A_FireCustomMissile("ShotCaseSpawn",0,0,-10)
		R6FL K 5
        R6FL LLMMNNOO 1
        R6FL PP 1 
		TNT1 A 0 A_PlaySound("weapons/ssg/in", 8)
	    R6FL QRST 1 
        TNT1 A 0 A_PlaySound("weapons/ssg/close", 8)
        R6FL UV 1
		
		R6FR ABCDEFGHIJ 1
        TNT1 A 0 A_PlaySound("weapons/ssg/open", 8)
	    TNT1 AA 0 A_FireCustomMissile("SSGCaseSpawner",0,0,-10)
		R6FR K 5
        R6FR LLMMNNOO 1
	    R6FR PP 1
        TNT1 A 0 A_PlaySound("weapons/ssg/in", 8)
	    R6FR QRST 1 
        TNT1 A 0 A_PlaySound("weapons/ssg/close", 8)
        R6FR UV 1
		TNT1 A 5
		Goto EndOfReload
	 
	 LeftReload:
		R6FL ABCDEFGHIJ 1
	    TNT1 A 0 A_PlaySound("weapons/ssg/open", 8)
	    TNT1 AA 0 A_FireCustomMissile("ShotCaseSpawn",0,0,-10)
		R6FL K 5
        R6FL LLMMNNOO 1
        R6FL PP 1 
		TNT1 A 0 A_PlaySound("weapons/ssg/in", 8)
	    R6FL QRST 1 
        TNT1 A 0 A_PlaySound("weapons/ssg/close", 8)
        R6FL UV 1
		TNT1 A 0 A_JumpIf(CountInv(FiredRightSSG)==1,"RightReloadSingle")
		Goto EndOfReload
	
	RightReload:
		R6FR ABCDEFGHIJ 1
        TNT1 A 0 A_PlaySound("weapons/ssg/open", 8)
	    TNT1 AA 0 A_FireCustomMissile("SSGCaseSpawner",0,0,-10)
		R6FR K 5
        R6FR LLMMNNOO 1
	    R6FR PP 1
        TNT1 A 0 A_PlaySound("weapons/ssg/in", 8)
	    R6FR QRST 1 
        TNT1 A 0 A_PlaySound("weapons/ssg/close", 8)
        R6FR UV 1
		TNT1 A 5
		TNT1 A 0 A_JumpIfInventory("FiredRightSSG",4,"LeftReload")
		Goto EndOfReload
	
	RightReloadSingle:
		R6FR ABCDEFGH 1
        TNT1 A 0 A_PlaySound("weapons/ssg/open", 8)
	    TNT1 A 0 A_FireCustomMissile("SSGCaseSpawner",0,0,-10)
        SHT9 EEFFGGHH 1
	    R6FR OOPP 1
        TNT1 A 0 A_PlaySound("weapons/ssg/in", 8)
	    R6FR QRST 1 
        TNT1 A 0 A_PlaySound("weapons/ssg/close", 8)
        R6FR UV 1
		Goto EndOfReload
	
	LeftReloadSingle:
		R6FL ABCDEFGH 1
	    TNT1 A 0 A_PlaySound("weapons/ssg/open", 8)
	    TNT1 A 0 A_FireCustomMissile("ShotCaseSpawn",0,0,-10)
        SHT9 AABBCCDD 1
        R6FL OOPP 1
		TNT1 A 0 A_PlaySound("weapons/ssg/in", 8)
	    R6FL QRST 1 
        TNT1 A 0 A_PlaySound("weapons/ssg/close", 8)
        R6FL UV 1
		TNT1 A 0 A_JumpIfInventory("FiredRightSSG",3,"RightReload")
		TNT1 A 0 A_JumpIfInventory("FiredRightSSG",2,"RightReloadSingle")
		Goto EndOfReload
	
	EndOfReload:
	TNT1 A 0 A_TakeInventory("FiredLeftSSGLMB",1)
	TNT1 A 0 A_TakeInventory("FiredRightSSGRMB",1)
	TNT1 A 0 A_TakeInventory("StopDualWield", 1)
	P6SS ABCDE 1
	TNT1 A 0 A_TakeInventory("FiredLeftSSG",2)
	TNT1 A 0 A_TakeInventory("FiredRightSSG",4)
	Goto ReadyToFire	
    	
	AlreadyUnloaded:
		TNT1 A 0 A_Takeinventory("Unloading",1)
		Goto ReadyToFire
	
	Unload:
		TNT1 A 0 A_JumpIfInventory("PBSSGHasUnloaded", 1, "AlreadyUnloaded")
		P6SS E 1 A_WeaponReady(WRF_ALLOWRELOAD)
		TNT1 A 0 A_ZoomFactor(1.0)
		TNT1 A 0 A_Takeinventory("Unloading",1)
		TNT1 A 0 A_Takeinventory("ADSmode",1)
        //TNT1 A 0 A_JumpIfInventory("SSGAmmoCounter",1,3)
        TNT1 A 0 A_JumpIfInventory("DualSSGAmmo",1,3)
		Goto ReadyToFire
        TNT1 AAA 0
		TNT1 A 0 A_Takeinventory("Unloading",1)
	
	RemoveBullets:
		TNT1 AAAA 0
		TNT1 A 0 A_JumpIfInventory("SSGAmmoCounter",1,4)
		TNT1 A 0 A_JumpIfInventory("DualSSGAmmo",1,3)
		Goto FinishUnload
        TNT1 AAAAAA 0
		TNT1 A 0 A_Takeinventory("SSGAmmoCounter",1)
		TNT1 A 0 A_Takeinventory("DualSSGAmmo", 1)
		TNT1 A 0 A_Giveinventory("NewShell",1)
		Goto RemoveBullets
	
	FinishUnload:
	P6SS EDCBA 1
	R6FL AB 1
	R6FL BCDEF 1
	R6FL GH 1
	TNT1 A 0 A_PlaySound("weapons/sshotc")
	R6FL IJ 1
	TNT1 A 0 A_PlaySound("weapons/sshotc")
	R6FL JIHGFEDCBA 1
	
	R6FR AB 1
	R6FR BCDEF 1
	R6FR GH 1
	TNT1 A 0 A_PlaySound("weapons/sshotc")
	R6FR IJ 1
	TNT1 A 0 A_PlaySound("weapons/sshotc")
	R6FR JIHGFEDCA 1
	P6SS ABCDE 1
	Goto ReadyToFire
	
											
	FlashKicking:
		P6SS F 1 
		P6SS F 1 
		P6SS E 1 
		P6SS D 3 
		P6SS C 3
		P6SS D 3 
		P6SS E 1 
		P6SS F 1 
		P6SS F 1 
		P6SG AAA 1 
		Goto Stop
		
	FlashAirKicking:
		P6SS F 1 
		P6SS F 1 
		P6SS E 1 
		P6SS D 3 
		P6SS C 3
		P6SS D 3 
		P6SS E 1 
		P6SS F 1 
		P6SS F 1 
		P6SG AAAA 1 
		Goto Stop
		
	FlashSlideKicking:
		P6SS FE 2 
		P6SS DDCCCBBBAAA 2  
		Goto Stop
		
	FlashSlideKickingStop:
		//TNT1 A 0
		P6SS ABCDEF 1 
		P6SG A 1 
		Goto Stop
	}
}

ACTOR DualSSGAmmo : Ammo //Your weapon's magazine ammo.
{
   Inventory.Amount 0
   Inventory.MaxAmount 4 //Your weapon's magazine ammo limit.
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 4
   Inventory.Icon "SGN2A0"
}

ACTOR LeftSSGAmmo : Ammo 
{
   Inventory.Amount 0
   Inventory.MaxAmount 2 
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 2
   Inventory.Icon "SGN2A0"
}

ACTOR RightSSGAmmo : Ammo 
{
   Inventory.Amount 0
   Inventory.MaxAmount 2 
   Ammo.BackpackAmount 0
   Ammo.BackpackMaxAmount 2
   Inventory.Icon "SGN2A0"
}
