#library "CVARS"
#include "zcommon.acs"

int sucker = -1;

str dashSound = "DBLJUMP";

script "ChangeCamera" (int cameratid)
{
	ChangeCamera(cameratid,0,0);
}
script "UnRoll" (void)
{
	GiveInventory("PB_LockScreenTilt",1);
	while (GetActorRoll(0) >= 0)
	{
		SetActorRoll(0, GetActorRoll(0)- 0.1);
		delay(1);
	}
	TakeInventory("PB_LockScreenTilt",1);
}
Script "GetTriResult" (int radius, int pitch)
{
	SetResultValue(radius * cos(pitch) >> 16);
}

script "PlayerTakeCamera" RESPAWN
{
	TakeInventory("CameraRunner",3);
}

Script "GrenadeHotkey" (void) NET
{
	ACS_NamedExecuteAlways("EquipmentHotkey",0);
}

//Starter Pack Cyberdemon fix
Script "CyberDemonDoorFix" (void)
{
if (CheckActorFloorTexture(0, "RROCK13"))
	{	
		int level_number = GetLevelInfo(LEVELINFO_LEVELNUM);
		if(level_number == 26)
		{
			Door_Open(17, 45);
		}
	}
}

script "LedgeClimbFix" ENTER NET
{
	if (CheckInventory("LedgeGrabbingRightnow"))
	{
		SetActorProperty(0, APROP_SPEED, 1.0);
		SetActorProperty(0, APROP_Gravity, 1.0);
		TakeInventory("LedgeGrabbingRightnow",1);
		TakeInventory("Grabbing_A_Ledge", 10000);
	}
}
Script "ProximityMindHotkey" (void) NET
{
	ACS_NamedExecuteAlways("ToggleEquipmentHotkey",0);
}

int current_player_health = 0;
int current_player_armor = 0;


script "PlayerEnterLevelScript" enter NET
{
	
	/*setfont("BLASCR");
	
	
	if	(GameType () == GAME_SINGLE_PLAYER) 
		{
		HudMessageBold(s:"a"; HUDMSG_FADEOUT, 1, CR_BLACK, 1.2, 0.1, 0.5, 1.0);
		}
	*/
	setfont("SmallFONT");
	
	str CurrentLevelName = StrParam(n: PRINTNAME_LEVELNAME);
	str CurrentLevelLump = StrParam(n: PRINTNAME_LEVEL);
	
	//Compatibility issue solutions
	if((StrCmp(CurrentLevelName, StrParam(s: "The Temple of Edfu")) == 0) && (StrCmp(CurrentLevelLump, StrParam(s: "MAP07"))== 0))
	{
		SetPlayerProperty(0, 1, 1);
		delay(445);
		SetPlayerProperty(0, 0, 1);
	}
	if((StrCmp(CurrentLevelName, StrParam(s: "PB_Introduction")) == 0) && (StrCmp(CurrentLevelLump, StrParam(s: "TITLEMAP"))== 0))
	{
		HealThing(100);
	}
	

}
	
script "PBUpgradeChecker_LMG" (void)
{
	for (int p = 0; p < 8; p++) {
        if (CheckActorInventory(800 + p, "LMG")) {
            SetActorState(0,"SpawnQuadSSG");
		}
	}
}

script "PBUpgradeChecker_QuadSSG" (void)
{
	for (int p = 0; p < 8; p++) {
        if (CheckActorInventory(800 + p, "Quad_SSG")) {
            SetActorState(0,"SpawnAutoshotgunUpgrade");
		}
	}
}

script "PBUpgradeChecker_ASG" (void)
{
	for (int p = 0; p < 8; p++) {
        if (CheckActorInventory(800 + p, "AutoshotgunDrumMag")) {
            SetActorState(0,"SpawnMinigunUpgrade");
		}
	}
}

script "PBUpgradeChecker_Minigun" (void)
{
	for (int p = 0; p < 8; p++) {
        if (CheckActorInventory(800 + p, "AdvancedBackpackCounter")) {
            SetActorState(0,"SpawnDragonBreathUpgrade");
		}
	}
}

script "PBUpgradeChecker_DragonsBreath" (void)
{
	for (int p = 0; p < 8; p++) {
        if (CheckActorInventory(800 + p, "DragonBreathUpgrade")) {
            SetActorState(0,"SpawnPulseCannon");
		}
	}
}

script "PBUpgradeChecker_PulseCannon" (void)
{
	for (int p = 0; p < 8; p++) {
        if (CheckActorInventory(800 + p, "PulseCannon")) {
            SetActorState(0,"SpawnRifleUpgrade");
		}
	}
}

script "PBUpgradeChecker_RifleUpgrade" (void)
{
	for (int p = 0; p < 8; p++) {
        if (CheckActorInventory(800 + p, "HasUnderBarrelGrenadeLauncher")) {
            SetActorState(0,"SpawnUnmakerUpgrade");
		}
	}
}

script "PBUpgradeChecker_UnmakerUpgrade" (void)
{
	for (int p = 0; p < 8; p++) {
        if (CheckActorInventory(800 + p, "Unmaker")) {
            SetActorState(0,"SpawnM2Upgrade");
		}
	}
}

script "PBUpgradeChecker_M2Upgrade" (void)
{
	for (int p = 0; p < 8; p++) {
        if (CheckActorInventory(800 + p, "HasLightningGunUpgrade") && !CheckActorInventory(800 + p, "LMG")) {
            SetActorState(0,"SpawnLMG");
		}
		else if (CheckActorInventory(800 + p, "HasLightningGunUpgrade") && CheckActorInventory(800 + p, "LMG")) {
            SetActorState(0,"BackpackSpawn");
		}
	}
}

Script "DetermineUserBloodAmount" (VOID)
{
if	(GetCvar("zdoombrutalblood") == 0) { SetActorState(0,"LowBlood"); }
if	(GetCvar("zdoombrutalblood") == 1) { SetActorState(0,"LowBlood"); }
if	(GetCvar("zdoombrutalblood") == 3) { SetActorState(0,"LotsOfBlood"); }
if	(GetCvar("zdoombrutalblood") >= 4) { SetActorState(0,"AbsurdBlood"); }
if	(GetCvar("zdoombrutalblood") == 666)
	{
	SetActorState(0,"AbsurdBlood"); 
	GiveInventory("AnimuGore", 1);
	}
}


Script 798 (VOID)
{
if	(GetCvar("pb_lowgraphicsmode") == 1) { GiveInventory("LowGraphicsMode", 1); }
if	(GetCvar("zdoombrutaljanitor") == 1) { GiveInventory("LowGraphicsMode", 1); }
    Terminate;
}

Script 797 (VOID)
{
if	(GetCvar("pb_bloodamount") == 1) { SetActorState(0,"Vanish"); }
if	(GetCvar("pb_bloodamount") == 0) { SetActorState(0,"Vanish"); }
    Terminate;
}

Script "EquipmentHotkey" (VOID) NET
{
 GiveInventory("UseEquipment", 1);
}

Script "ToggleEquipmentHotkey" (VOID) NET
{
 GiveInventory("ToggleEquipment", 1);
}

script 32754 (VOID) NET
{
    ThrustThing(GetActorAngle(0) >> 8, 20, 1, 0);
}

script "CrueltyBonus" (VOID) NET
{
	if(GetCvar("nodoomguytalk") == 1)
	{
		
		SetActorProperty(0, APROP_HEALTH, GetActorProperty(0,APROP_HEALTH)+5);
	}
	else
	{
		ActivatorSound("CrueltyBonus",127);
		SetActorProperty(0, APROP_HEALTH, GetActorProperty(0,APROP_HEALTH)+5);
	}
}

script "CrueltyBonus10" (VOID) NET
{
    SetActorProperty(0, APROP_HEALTH, GetActorProperty(0,APROP_HEALTH)+10);
}

//Based on Trial Blazer's "Macheterang" script since I couldn't figure this out myself...
script "DemonSoulSeeker" (void)
{
	int machposx, machposy, playposx, playposy, totalposx, totalposy;
	machposx = GetActorX(0); 
	machposy = GetActorY(0);
	SetActivatorToTarget(0); 
	playposx = GetActorX(0); 
	playposy = GetActorY(0);
	totalposx = (machposx - playposx) >> 16; 
	totalposy = (machposy - playposy) >> 16;
	if (sqrt(totalposx*totalposx + totalposy*totalposy) <= 48) 
	{
		SetResultValue(True); 
	}
	else {SetResultValue(False);} 
}

script "WeaponSwapSound" (VOID) NET
{
		ActivatorSound("weapons/swapping",127);
}

Script 363 (VOID) NET
{
 GiveInventory("Unloading", 1);
 GiveInventory("GoSpecial", 1);
}
Script "GetCamPosZ" (int radius)
{
	int s = sin(GetActorPitch(0));
	SetResultValue(GetActorZ(0) + GetActorProperty(0,APROP_HEIGHT)); 
}
Script "ZombieManGrenades" (VOID) NET
{
if	(GetCvar("pb_NoZmanGrenade") == 1) { GiveInventory("NoZombieGrenade", 1); }
}

Script "ZombieManAdvancedAttacks" (VOID) NET
{
if	(GetCvar("pb_NoZmanAdvancedAttacks") == 1) { GiveInventory("NoZombieManAdvancedAttacks", 1); }
}

Script "CeilingClimbingImps" (VOID) NET
{
	if	(GetCvar("pb_GroundImps") == 1)
	{ 
		GiveInventory("NoCeilingClimb", 1);
	}
	SetResultValue(1);
}

Script "PinkyHealthFood" (VOID) NET
{
if	(GetCvar("pb_HungryPinky") == 1) { GiveInventory("NoFoodHealth", 1); }
}

Script "JetpackRevenant" (VOID) NET
{

if	(GetCvar("pb_GroundRevenant") == 1)
	{ 
		GiveInventory("NoJetpack", 1);
	}
	SetResultValue(1);
}

Script "ChargingHellknight" (VOID) NET
{
if	(GetCvar("pb_NoKnightCharge") == 1) { GiveInventory("NoHellknightCharge", 1); }
}

Script "BaronBarrelFun" (VOID) NET
{
	if	(GetCvar("pb_NoBaronBarrel") == 1)
	{ 
		GiveInventory("NoBaronBarrels", 1);
	}

}

Script "ArchvileBigHeal" (VOID) NET
{
if	(GetCvar("pb_NoArchvileHeal") == 1) { GiveInventory("NoBigHeal", 1); }
}

Script "ArchvileDemonSummon" (VOID) NET
{
if	(GetCvar("pb_NoArchvileSummon") == 1) { GiveInventory("NoArchvileSummon", 1); }
}

Script "MancubusFlamethrower" (VOID) NET
{
if	(GetCvar("pb_NoMancubusFlamer") == 1) { GiveInventory("NoMancubusTorch", 1); }
}

////////////////////////////Monster Spawn Toggles///////////////////////////////


//Zman

Script "TogglePistolZombie" (VOID) NET
{
if	(GetCvar("pb_NoPistolZman") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleHelmetZombie" (VOID) NET
{
if	(GetCvar("pb_NoHelmetZman") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleScientistZombie" (VOID) NET
{
if	(GetCvar("pb_NoZombieScientist") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleCarbineZombie" (VOID) NET
{
if	(GetCvar("pb_NoCarbineZombie") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Sergeant
Script "ToggleHelmetSergeant" (VOID) NET
{
if	(GetCvar("pb_NoHelmetSergeant") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleAutoshotgunSergeant" (VOID) NET
{
if	(GetCvar("pb_NoAutoshotgunSergeant") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleZSpecOps" (VOID) NET
{
if	(GetCvar("pb_NoZSpecOps") == 1) { SetActorState(0,"ReplaceToggle"); }
}
//
Script "ToggleQuadShotgunZombie" (VOID) NET
{
if	(GetCvar("pb_NoQuadSergeant") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleRocketSergeant" (VOID) NET
{
if	(GetCvar("pb_NoRocketSergeant") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "TogglePyroSergeant" (VOID) NET
{
if	(GetCvar("pb_NoPyroSergeant") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleDemonTechSoldier" (VOID) NET
{
if	(GetCvar("pb_NoDemonTechSoldier") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleRiotShieldGuy" (VOID) NET
{
if	(GetCvar("pb_NoRiotShieldGuy") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Commando
Script "ToggleNailgunMajor" (VOID) NET
{
if	(GetCvar("pb_NoNailgunMajor") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "TogglePlasmaZombie" (VOID) NET
{
if	(GetCvar("pb_NoPlasmaZombie") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleClassicCommando" (VOID) NET
{
if	(GetCvar("pb_NoClassicCommando") == 1) { SetActorState(0,"ReplaceToggle"); }
}


//Imps
Script "ToggleBrownImps" (VOID) NET
{
if	(GetCvar("pb_NoBrownImps") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleDarkImps" (VOID) NET
{
if	(GetCvar("pb_NoDarkImps") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleSavageImps" (VOID) NET
{
if	(GetCvar("pb_NoSavageImps") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Demons
Script "ToggleBloodDemons" (VOID) NET
{
if	(GetCvar("pb_NoBloodDemon") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleMechDemons" (VOID) NET
{
if	(GetCvar("pb_NoMechDemon") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Spectre
Script "ToggleVoidSpectre" (VOID) NET
{
if	(GetCvar("pb_VoidSpectre") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Cacodemons
Script "ToggleMagCaco" (VOID) NET
{
if	(GetCvar("pb_NoMagCaco") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleAfrit" (VOID) NET
{
if	(GetCvar("pb_NoAfrit") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Pain Elemental
Script "ToggleSufferElemental" (VOID) NET
{
if	(GetCvar("pb_NoSufferElemental") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleOverlord" (VOID) NET
{
if	(GetCvar("pb_NoOverlord") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Lost Soul
Script "TogglePhantasm" (VOID) NET
{
if	(GetCvar("pb_NoPhantasm") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Revenant
Script "ToggleBeamRevenant" (VOID) NET
{
if	(GetCvar("pb_NoBeamRevenant") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleDraugr" (VOID) NET
{
if	(GetCvar("pb_NoDraugr") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Spiders
Script "ToggleInfernoSpider" (VOID) NET
{
if	(GetCvar("pb_NoInfernoArachnotron") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleArachnotron2" (VOID) NET
{
if	(GetCvar("pb_NoArachnotron2") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleArachnophyte" (VOID) NET
{
if	(GetCvar("pb_NoArachnophyte") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Knight
Script "ToggleCyberKnight" (VOID) NET
{
if	(GetCvar("pb_NoCyberKnight") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleCyberPaladin" (VOID) NET
{
if	(GetCvar("pb_NoCyberPaladin") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Baron
Script "ToggleCyberBaron" (VOID) NET
{
if	(GetCvar("pb_NoCyberBaron") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Knight
Script "ToggleInfernus" (VOID) NET
{
if	(GetCvar("pb_NoInfernus") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleBelphegor" (VOID) NET
{
if	(GetCvar("pb_NoBelphegor") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Fatso
Script "ToggleDaedabus" (VOID) NET
{
if	(GetCvar("pb_NoDaedabus") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleVolcabus" (VOID) NET
{
if	(GetCvar("pb_NoVolcabus") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Archvile
Script "ToggleIceVile" (VOID) NET
{
if	(GetCvar("pb_NoIceVile") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleFleshwizard" (VOID) NET
{
if	(GetCvar("pb_NoFleshWizard") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleHellion" (VOID) NET
{
if	(GetCvar("pb_NoHellion") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Mastermind Variants
Script "ToggleDemonlisher" (VOID) NET
{
if	(GetCvar("pb_NoDemolisher") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleJuggernaut" (VOID) NET
{
if	(GetCvar("pb_NoJuggernaut") == 1) { SetActorState(0,"ReplaceToggle"); }
}

//Cyberdemon
Script "ToggleAnnihilator" (VOID) NET
{
if	(GetCvar("pb_NoAnnihilator") == 1) { SetActorState(0,"ReplaceToggle"); }
}

/////////////////////////////////WEAPON TOGGLES///////////////////////////////

Script "ToggleUpgrades" (VOID) NET
{
if	(GetCvar("pb_NoUpgrades") == 1) { SetActorState(0,"BackpackSpawn"); }
}

Script "ToggleLMG" (VOID) NET
{
if	(GetCvar("pb_NoLMG") == 1) { SetActorState(0,"BackpackSpawn"); }
}

Script "ToggleQuadSSG" (VOID) NET
{
if	(GetCvar("pb_NoQuadSSG") == 1) { SetActorState(0,"BackpackSpawn"); }
}


Script "ToggleMinigunUpgrade" (VOID) NET
{
if	(GetCvar("pb_NoMinigunUpgrade") == 1) { SetActorState(0,"BackpackSpawn"); }
}

Script "ToggleAutoshotgunUpgrade" (VOID) NET
{
if	(GetCvar("pb_NoAutoshotgunUpgrade") == 1) { SetActorState(0,"BackpackSpawn"); }
}

Script "ToggleDragonBreathUpgrade" (VOID) NET
{
if	(GetCvar("pb_NoDBUpgrade") == 1) { SetActorState(0,"BackpackSpawn"); }
}

Script "TogglePulseCannonUpgrade" (VOID) NET
{
if	(GetCvar("pb_NoPulseCannonUpgrade") == 1) { SetActorState(0,"BackpackSpawn"); }
}

Script "ToggleRifleUpgrade" (VOID) NET
{
if	(GetCvar("pb_NoRifleUpgrade") == 1) { SetActorState(0,"BackpackSpawn"); }
}

Script "ToggleUnmakerUpgrade" (VOID) NET
{
if	(GetCvar("pb_NoUnmakerUpgrade") == 1) { SetActorState(0,"BackpackSpawn"); }
}

Script "ToggleM2Upgrade" (VOID) NET
{
if	(GetCvar("pb_NoM2Upgrade") == 1) { SetActorState(0,"BackpackSpawn"); }
}

Script "ToggleRevolverUpgraded" (VOID) NET
{
	if	(GetCvar("pb_UpgradeRevolver") == 1)
	{ 
		if (CheckInventory("RevolverSelected") == TRUE)
		{
			TakeInventory("PB_Pistol", 99);
		}
		
		else if (CheckInventory("PB_Revolver") == TRUE)
		{
			SetWeapon("PB_Revolver");
		}
	}
}

Script "ToggleCarbineUpgraded" (VOID) NET
{
	if	(GetCvar("pb_UpgradeCarbine") == 1)
	{ 
		if (CheckInventory("CarbineSelected") == TRUE)
		{
			TakeInventory("Rifle", 99);
		}
		
		else if (CheckInventory("Carbine") == TRUE)
		{
			SetWeapon("Carbine");
		}
	}
}

Script "ToggleShotgunUpgraded" (VOID) NET
{
	if	(GetCvar("pb_UpgradeShotgun") == 1)
	{
		if (CheckInventory("ASGSelected") == TRUE)
		{
			TakeInventory("PB_Shotgun", 99);
		}
		
		else if (CheckInventory("PB_AutoShotgun") == TRUE)
		{
			SetWeapon("PB_AutoShotgun");
		}
	}
}

Script "ToggleNailgunUpgraded" (VOID) NET
{
	if	(GetCvar("pb_UpgradeNailgun") == 1)
	{
		if (CheckInventory("NewChaingunSelected") == TRUE)
		{
			TakeInventory("PB_Minigun", 99);
		}
		
		else if (CheckInventory("PB_Nailgun") == TRUE)
		{
			SetWeapon("PB_Nailgun");
		}
	}
}
/* Old ass script. May repurpose this for the Excavator though
Script "ToggleSuperGLUpgraded" (VOID) NET
{
	if	(GetCvar("pb_UpgradeGL") == 1)
	{
		if (CheckInventory("SGLSelected") == TRUE)
		{
			TakeInventory("Grenade_Launcher", 99);
		}
		
		else if (CheckInventory("Super_Grenade_Launcher") == TRUE)
		{
			SetWeapon("Super_Grenade_Launcher");
		}
	}
}
*/
Script "AutoShotgunDrumMag" (void)
{
	SetAmmoCapacity("AutoshotgunAmmo", 24);
	SetAmmoCapacity("LeftASGAmmo", 24);
	SetAmmoCapacity("DoubleASGAmmo", 48);
}

Script "PumpShotgunMag" (void)
{
	SetAmmoCapacity("ShotgunAmmo", 11);
	if (CheckInventory("ShotgunSelected") == TRUE)
	{
	SetWeapon("Shot_Mag");
	}
}

/////////////////Nazi Check

script 177 (void)
{
if (CheckActorFloorTexture(0, "FLAT5_4"))
    GiveActorInventory(748, "NaziVerification1", 1);
else
    ;
	
if (CheckActorCeilingTexture(0, "CEIL4_2"))
    GiveActorInventory(748, "NaziVerification2", 1);
else
    ;
	
if (CheckActorFloorTexture(0, "FL0"))
    GiveActorInventory(748, "AltEasyMarineVerification", 1);
else	
	
	
if	(GetCvar("pb_isnazilevel") == 1) { SetActorState(0,"ISANazi"); }	


if (CheckActorcEILINGTexture(0, "F_SKY1"))
    GiveActorInventory(728, "TVRRainVerification", 1);
else
    ;	
}

Script "ToggleHealthPackColor" (VOID) net
{
	if(GetCvar("pb_HealthPackColor") == 1)
	{ 
		SetResultValue(1);
	}
	else
		SetResultValue(0);
}

Script "ToggleCarryableHealth" (VOID) net
{
	if(GetCvar("pb_EnableCarryableHealth") == 1)
	{ 
		SetResultValue(1);
	}
	else
		SetResultValue(0);
}

Script "ToggleHelmetAnimation" (VOID) NET
{

	if(GetCvar("pb_NoHelmetAnimation") == 1)
	{
		SetResultValue(1);
	}
	else if(GetCvar("pb_NoHelmetAnimation") == 0)
	{
		SetResultValue(0);
	}

}

script "CombatBackPack" (void)
{
	SetAmmoCapacity("PistolBullets", 600);
	SetAmmoCapacity("NewClip", 800);
	SetAmmoCapacity("NewShell", 150);
	SetAmmoCapacity("RocketAmmo", 125);
	SetAmmoCapacity("HandGrenadeAmmo", 18);
	SetAmmoCapacity("Cell", 800);
	SetAmmoCapacity("Demonpower", 800);
	SetAmmoCapacity("MiniHellRocketAmmo", 30);
	delay(2);
	GiveInventory("Medikit",2);
	GiveInventory("Backpack",1);
	GiveInventory("BulletKit", 4);
	GiveInventory("NewClip", 200);
	GiveInventory("NewShell",50); 
	GiveInventory("Rocketbox",20);
	GiveInventory("HandGrenadeAmmo", 8);
	
}

Script "ToggleRestoreDualCarbine" (VOID) NET
{
		if(GetCvar("pb_RestoreCarbines") == 1)
		{
			SetResultValue(1);
		}
		else if(GetCvar("pb_RestoreCarbines") == 0)
		{
			SetResultValue(0);
		}
}

Script "ToggleShotgunSkin" (VOID) NET
{
		if(GetCvar("pb_shotgunskin") == 1)
		{
			SetResultValue(1);
		}
		else if(GetCvar("pb_shotgunskin") == 0)
		{
			SetResultValue(0);
		}
}

Script "ToggleBulletJanitor" (VOID) NET
{
	if(GetCvar("zdoombrutaljanitorcasings") == 1)
		{
			SetResultValue(1);
		}
		else if(GetCvar("zdoombrutaljanitorcasings") == 0)
		{
			SetResultValue(0);
		}
}

Script "CheckADSToggle" (VOID) net
{
	if(GetCvar("pb_ADSHoldDown") == 1)
	{ 
		SetResultValue(1);
	}
	else
		SetResultValue(0);
}



Script "CheckClassicMonsters" (VOID) net
{
	if(GetCvar("pb_classicmonsters") == 1)
	{ 
		SetResultValue(1);
	}
	else
		SetResultValue(0);
}

Script "ToggleUnifiedExplosives" (VOID) net
{
	if(GetCvar("pb_UnifiedExplosives") == 1)
	{ 
		SetResultValue(1);
	}
	else
		SetResultValue(0);
}



//Key cards, Taggert. What do they mean?

script "GiveAllPlayersRedCard" (void) NET
{
    for (int p = 0; p < 8; p++)
    {
        if (PlayerInGame(p) && !CheckActorInventory(800 + p, "RedCard"))
        {
            GiveActorInventory(800 + p, "RedCard", 1);
        }
    }
}

script "GiveAllPlayersYellowCard" (void) NET
{
    for (int p = 0; p < 8; p++)
    {
        if (PlayerInGame(p) && !CheckActorInventory(800 + p, "YellowCard"))
        {
            GiveActorInventory(800 + p, "YellowCard", 1);
        }
    }
}

script "GiveAllPlayersBlueCard" (void) NET
{
    for (int p = 0; p < 8; p++)
    {
        if (PlayerInGame(p) && !CheckActorInventory(800 + p, "BlueCard"))
        {
            GiveActorInventory(800 + p, "BlueCard", 1);
        }
    }
}

script "GiveAllPlayersRedSkull" (void) NET
{
    for (int p = 0; p < 8; p++)
    {
        if (PlayerInGame(p) && !CheckActorInventory(800 + p, "RedSkull"))
        {
            GiveActorInventory(800 + p, "RedSkull", 1);
        }
    }
}

script "GiveAllPlayersYellowSkull" (void) NET
{
    for (int p = 0; p < 8; p++)
    {
        if (PlayerInGame(p) && !CheckActorInventory(800 + p, "YellowSkull"))
        {
            GiveActorInventory(800 + p, "YellowSkull", 1);
        }
    }
}

script "GiveAllPlayersBlueSkull" (void) NET
{
    for (int p = 0; p < 8; p++)
    {
        if (PlayerInGame(p) && !CheckActorInventory(800 + p, "BlueSkull"))
        {
            GiveActorInventory(800 + p, "BlueSkull", 1);
        }
    }
}

//PB Extra Weapons
Script "ToggleWeaponSMG" (VOID) NET
{
if	(GetCvar("pb_NoSMGWeapon") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleWeaponRevolver" (VOID) NET
{
if	(GetCvar("pb_NoRevolverWeapon") == 1) { SetActorState(0,"ReplaceToggle"); }
}
Script "ToggleWeaponASG" (VOID) NET
{
if	(GetCvar("pb_NoASGWeapon") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleWeaponCSSG" (VOID) NET
{
if	(GetCvar("pb_NoCSSGWeapon") == 1) { SetActorState(0,"ReplaceToggle"); }
}
Script "ToggleWeaponPB_Nailgun" (VOID) NET
{
if	(GetCvar("pb_NoNailgunWeapon") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleWeaponCarbine" (VOID) NET
{
if	(GetCvar("pb_NoCarbineWeapon") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleWeaponSuperGL" (VOID) NET
{
if	(GetCvar("pb_NoSuperGLWeapon") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleWeaponHeavyGL" (VOID) NET
{
if	(GetCvar("pb_NoHeavyGLWeapon") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleWeaponM2Plasma" (VOID) NET
{
if	(GetCvar("pb_NoM2PlasmaWeapon") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleWeaponFreezer" (VOID) NET
{
if	(GetCvar("pb_NoFreezerWeapon") == 1) { SetActorState(0,"ReplaceToggle"); }
}

Script "ToggleWeaponRailgun" (VOID) NET
{
if	(GetCvar("pb_NoRailgunWeapon") == 1) { SetActorState(0,"ReplaceToggle"); }
}

