/*
 * Weapon Sway and Weapon Pitch Shifting
 * Copyright (C) 2016 Nash Muhandes
 *
 */

// Feel free to do whatever you want with this, though credits would be
// appreciated! You don't need to ask for my permission to use this code
// in your mods.
// Nash

#library "sway"
#include "zcommon.acs"

#define MAX_PLAYERS 8
#define INT_MAX 0x7FFFFFFF

// weapon sway rate
#define SWAYSPEED 0.35

// weapon sway variables
int sway[MAX_PLAYERS],
	swayMod[MAX_PLAYERS],
	GunOffsetX[MAX_PLAYERS],
	GunOffsetY[MAX_PLAYERS];

//===========================================================================
//
// FUNCTIONS
//
//===========================================================================

function int Clamp(int number, int minimum, int maximum)
{
	if (number < minimum)
	{
		return minimum;
	}
	if (number > maximum)
	{
		return maximum;
	}
	return number;
}

function bool IsPlayerAlive(void)
{
	return GetActorProperty(0, APROP_Health) > 0;
}

// Weapon Sway (Horizontal)
function void _P_UpdateWeaponSway(void)
{
	int pn = PlayerNumber();

	// weapon sway
	int yaw = FixedDiv(GetPlayerInput(-1, INPUT_YAW), 1280);

	swayMod[pn] = yaw * 10;

	// left
	if (swayMod[pn] < 0 && sway[pn] >= swayMod[pn])
	{
		sway[pn] -= SWAYSPEED - yaw;
	}

	// right
	if (swayMod[pn] > 0 && sway[pn] <= swayMod[pn])
	{
		sway[pn] += SWAYSPEED + yaw;
	}

	// reset
	if (yaw == 0)
	{
		if (sway[pn] < 0)
		{
			sway[pn] += 3.5;
			if (sway[pn] > 0)
				sway[pn] = 0;
		}

		if (sway[pn] > 0)
		{
			sway[pn] -= 3.5;
			if (sway[pn] < 0)
				sway[pn] = 0;
		}
	}

	// limits
	sway[pn] = Clamp(sway[pn], -8.0, 8.0);

	// sway!
	GunOffsetX[PlayerNumber()] = sway[pn] >> 16;
}

// Weapon Pitch Shift (Vertical)
function void _P_UpdateWeaponPitchShift(void)
{
	int weaponpitch = ((1.0 - (GetActorPitch(0))) * 32) >> 16;
	GunOffsetY[PlayerNumber()] = Clamp(weaponpitch, 30, 34);
}

//===========================================================================
//
// SCRIPTS
//
//===========================================================================

script "Script_GetGunOffsetX" (void)
{
	if(getcvar("disable_weaponsway") == 1)
		SetResultValue(0);
	else
		SetResultValue(GunOffsetX[PlayerNumber()]);
}

script "Script_GetGunOffsetY" (void)
{
	if(getcvar("disable_weaponsway") == 1)
		SetResultValue(32);
	else
		SetResultValue(GunOffsetY[PlayerNumber()]);
}

script "Script_WeaponSway" (void)
{
	while(IsPlayerAlive())
	{
		_P_UpdateWeaponSway();
		_P_UpdateWeaponPitchShift();
		Delay(1);
	}
}

script "Script_ClearSwayVars" (int pn)
{
	GunOffsetX[pn] = 0;
	GunOffsetY[pn] = 0;
	sway[pn] = 0;
	swayMod[pn] = 0;
}

script "Script_PlayerSetup" ENTER
{
	ACS_NamedExecuteAlways("Script_WeaponSway", 0);
}

script "Script_PlayerRespawn" RESPAWN
{
	ACS_NamedExecuteAlways("Script_WeaponSway", 0);
}

script "Script_PlayerDeath" DEATH
{
	int pn = PlayerNumber();
	ACS_NamedExecuteAlways("Script_ClearSwayVars", 0, pn);
}
